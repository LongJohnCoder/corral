var {:scalar} alloc: int;

var {:pointer} SLAM_guard_S_1: int;

var {:scalar} IoSetCancelRoutineCalled: int;

var {:scalar} IrpPended: int;

var {:scalar} yogi_error: int;

var {:pointer} SLAM_guard_S_0: int;

var {:scalar} IrpCancelChecked: int;

procedure corral_nondet() returns ({:scalar} x: int);



procedure boogie_si_record_li2bpl_int(x: int);



const alloc_init: int;

procedure {:allocator} __HAVOC_malloc(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc);
  free ensures alloc >= old(alloc) + size;



procedure {:allocator "full"} __HAVOC_malloc_or_null(size: int) returns (ret: int);
  free requires size >= 0;
  modifies alloc;
  free ensures ret == old(alloc) || ret == 0;
  free ensures alloc >= old(alloc) + size;



const {:allocated} NULL: int;

axiom NULL == 0;

function BAND(a: int, b: int) : int;

function BOR(a: int, b: int) : int;

function BNOT(a: int) : int;

function INTDIV(a: int, b: int) : int;

function INTMOD(a: int, b: int) : int;

const WHEA_ERROR_PACKET_SECTION_GUID: int;

const CyyGlobals: int;

const SerialPortNameGuid: int;

const SerailPortPerfGuid: int;

const SerialPortPropertiesGuid: int;

const SerialPortHWGuid: int;

const SerialPortCommGuid: int;

const KeTickCount: int;

const CyyPhysicalZero: int;

const CyyPhysicalZero_1: int;

const driverDefaults: int;

const CyyPhysicalZero_2: int;

const currentInstance_sdv_static_local_variable_117: int;

const GUID_DEVINTERFACE_COMPORT: int;

const sdv_cancelFptr: int;

const SLAM_guard_S_1_init: int;

const SLAM_guard_S_0_init: int;

const CyyPhysicalZero_3: int;

const sdv_IoBuildSynchronousFsdRequest_irp: int;

const sdv_harnessStackLocation_next: int;

const sdv_other_irp: int;

const sdv_IoBuildDeviceIoControlRequest_irp: int;

const sdv_harnessDeviceExtension_two: int;

const sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_pv3: int;

const sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessIrp: int;

const sdv_kdpc3: int;

const sdv_p_devobj_pdo: int;

const sdv_kinterrupt: int;

const sdv_start_irp_already_issued: int;

const sdv_IoGetDeviceToVerify_DEVICE_OBJECT: int;

const sdv_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_p_devobj_child_pdo: int;

const sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next: int;

const sdv_IoBuildAsynchronousFsdRequest_irp: int;

const sdv_dpc_ke_registered: int;

const sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_ControllerIrp: int;

const sdv_devobj_pdo: int;

const sdv_Io_Removelock_release_wait_returned: int;

const sdv_IoGetDmaAdapter_DMA_ADAPTER: int;

const sdv_IoInitializeIrp_harnessIrp: int;

const sdv_ke_dpc: int;

const sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT: int;

const sdv_irp: int;

const sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_IoCreateSynchronizationEvent_KEVENT: int;

const sdv_ControllerPirp: int;

const sdv_other_harnessStackLocation_next: int;

const sdv_harnessStackLocation: int;

const sdv_IoCreateController_CONTROLLER_OBJECT: int;

const sdv_devobj_top: int;

const sdv_pv2: int;

const sdv_kdpc_val3: int;

const sdv_IoBuildSynchronousFsdRequest_harnessIrp: int;

const sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT: int;

const sdv_MapRegisterBase_val: int;

const sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING: int;

const sdv_IoMakeAssociatedIrp_harnessIrp: int;

const sdv_power_irp: int;

const sdv_devobj_child_pdo: int;

const sdv_harnessIrp: int;

const sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next: int;

const sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock: int;

const sdv_io_dpc: int;

const sdv_kinterrupt_val: int;

const sdv_StartIopirp: int;

const sdv_devobj_fdo: int;

const sdv_harnessDeviceExtension: int;

const sdv_DpcContext: int;

const sdv_StartIoIrp: int;

const igdoe: int;

const sdv_p_devobj_fdo: int;

const sdv_MapRegisterBase: int;

const sdv_apc_disabled: int;

const sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock: int;

const sdv_p_devobj_top: int;

const sicrni: int;

const sdv_PowerIrp: int;

const sdv_IoBuildDeviceIoControlRequest_harnessIrp: int;

const sdv_io_create_device_called: int;

const sdv_IoMakeAssociatedIrp_irp: int;

const sdv_other_harnessIrp: int;

const sdv_IoBuildSynchronousFsdRequest_IoStatusBlock: int;

const sdv_IoInitializeIrp_irp: int;

const sdv_inside_init_entrypoint: int;

const sdv_IoCreateNotificationEvent_KEVENT: int;

const sdv_other_harnessStackLocation: int;

const sdv_maskedEflags: int;

const sdv_MmMapIoSpace_int: int;

procedure {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_17: int, actual_sdv_18: int) returns (Tmp_15: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_InsertTailList"} sdv_InsertTailList(actual_sdv_17: int, actual_sdv_18: int) returns (Tmp_15: int)
{
  var {:scalar} sdv_19: int;

  anon0:
    call {:si_unique_call 0} Tmp_15 := __HAVOC_malloc(4);
    call {:si_unique_call 1} sdv_19 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_15 != 0;
    assume Tmp_15 > 0;
    assume {:nonnull} sdv_19 != 0;
    assume sdv_19 > 0;
    return;
}



procedure {:origName "_sdv_init2"} _sdv_init2();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init2"} _sdv_init2()
{
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 2} vslice_dummy_var_0 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCancelImmediate"} CyyCancelImmediate(actual_DeviceObject: int, actual_Irp: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 1;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 0 ==> IrpPended != 1;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelImmediate"} CyyCancelImmediate(actual_DeviceObject: int, actual_Irp: int)
{
  var {:pointer} Extension: int;
  var {:pointer} DeviceObject: int;
  var {:pointer} Irp: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_0: int;

  anon0:
    call {:si_unique_call 3} vslice_dummy_var_1 := __HAVOC_malloc(4);
    DeviceObject := actual_DeviceObject;
    Irp := actual_Irp;
    assume {:nonnull} DeviceObject != 0;
    assume DeviceObject > 0;
    havoc Extension;
    assume {:nonnull} Extension != 0;
    assume Extension > 0;
    assume {:nonnull} Irp != 0;
    assume Irp > 0;
    havoc vslice_dummy_var_0;
    call {:si_unique_call 4} CyyTryToCompleteCurrent#1(Extension, li2bplFunctionConstant130, vslice_dummy_var_0, -1073741536, CurrentImmediateIrp__CYY_DEVICE_EXTENSION(Extension), 0, 0, ImmediateTotalTimer__CYY_DEVICE_EXTENSION(Extension), 0, li2bplFunctionConstant128, 2);
    return;
}



procedure {:origName "CyyStartImmediate"} CyyStartImmediate(actual_Extension_1: int);
  modifies alloc, IrpPended, IrpCancelChecked, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartImmediate"} CyyStartImmediate(actual_Extension_1: int)
{
  var {:pointer} Tmp_27: int;
  var {:pointer} s_p_e_c_i_a_l_1: int;
  var {:scalar} TotalTime: int;
  var {:pointer} Tmp_28: int;
  var {:pointer} Tmp_29: int;
  var {:pointer} Tmp_30: int;
  var {:pointer} sdv_28: int;
  var {:scalar} UseATimer: int;
  var {:pointer} sdv_29: int;
  var {:scalar} OldIrql: int;
  var {:pointer} sdv_31: int;
  var {:scalar} s_p_e_c_i_a_l_2: int;
  var {:pointer} s_p_e_c_i_a_l_3: int;
  var {:pointer} OldIrp: int;
  var {:scalar} s_p_e_c_i_a_l_4: int;
  var {:scalar} Timeouts: int;
  var {:pointer} Tmp_32: int;
  var {:pointer} Tmp_33: int;
  var {:pointer} Extension_1: int;
  var vslice_dummy_var_2: int;
  var vslice_dummy_var_3: int;
  var vslice_dummy_var_4: int;
  var vslice_dummy_var_5: int;
  var vslice_dummy_var_6: int;
  var vslice_dummy_var_7: int;
  var vslice_dummy_var_8: int;
  var vslice_dummy_var_1: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 5} TotalTime := __HAVOC_malloc(20);
    call {:si_unique_call 6} vslice_dummy_var_2 := __HAVOC_malloc(4);
    call {:si_unique_call 7} Timeouts := __HAVOC_malloc(20);
    Extension_1 := actual_Extension_1;
    call {:si_unique_call 8} Tmp_27 := __HAVOC_malloc(72);
    call {:si_unique_call 9} Tmp_32 := __HAVOC_malloc(96);
    call {:si_unique_call 10} Tmp_33 := __HAVOC_malloc(80);
    Tmp_32 := strConst__li2bpl1;
    call {:si_unique_call 11} vslice_dummy_var_6 := CyyDbgPrintEx(2, Tmp_32);
    UseATimer := 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_30;
    assume {:nonnull} Tmp_30 != 0;
    assume Tmp_30 > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 12} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L96;

  L96:
    call {:si_unique_call 13} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 14} Tmp_28 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    call {:si_unique_call 15} sdv_KeAcquireSpinLock(0, Tmp_28);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    havoc OldIrql;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    call {:si_unique_call 16} sdv_KeReleaseSpinLock(0, OldIrql);
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L24;

  L24:
    UseATimer := 1;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    assume {:nonnull} TotalTime != 0;
    assume TotalTime > 0;
    goto L28;

  L28:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_1;
    call {:si_unique_call 17} sdv_31 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_1);
    assume {:nonnull} sdv_31 != 0;
    assume sdv_31 > 0;
    call {:si_unique_call 18} Tmp_28 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    call {:si_unique_call 19} IoAcquireCancelSpinLock(Tmp_28);
    assume {:nonnull} Tmp_28 != 0;
    assume Tmp_28 > 0;
    havoc OldIrql;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc Tmp_29;
    call {:si_unique_call 20} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Tmp_29 != 0;
    assume Tmp_29 > 0;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc OldIrp;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 21} IoReleaseCancelSpinLock(OldIrql);
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    assume {:nonnull} OldIrp != 0;
    assume OldIrp > 0;
    Tmp_27 := strConst__li2bpl3;
    call {:si_unique_call 22} vslice_dummy_var_7 := CyyDbgPrintEx(9, Tmp_27);
    call {:si_unique_call 23} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 24} CyyIRPEpilogue(Extension_1);
    goto L56;

  L56:
    Tmp_33 := strConst__li2bpl2;
    call {:si_unique_call 25} vslice_dummy_var_8 := CyyDbgPrintEx(2, Tmp_33);
    return;

  anon16_Then:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 26} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant125);
    goto L99;

  L99:
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_9;
    call {:si_unique_call 27} vslice_dummy_var_5 := sdv_IoSetCancelRoutine(vslice_dummy_var_9, li2bplFunctionConstant125);
    s_p_e_c_i_a_l_2 := 2;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_10;
    call {:si_unique_call 28} sdv_28 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_10);
    assume {:nonnull} sdv_28 != 0;
    assume sdv_28 > 0;
    s_p_e_c_i_a_l_1 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_28)));
    assume {:nonnull} s_p_e_c_i_a_l_1 != 0;
    assume s_p_e_c_i_a_l_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} UseATimer != 0;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    call {:si_unique_call 29} vslice_dummy_var_4 := CyySetTimer(ImmediateTotalTimer__CYY_DEVICE_EXTENSION(Extension_1), TotalTime, TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_1), Extension_1);
    s_p_e_c_i_a_l_4 := 4;
    assume {:nonnull} Extension_1 != 0;
    assume Extension_1 > 0;
    havoc vslice_dummy_var_11;
    call {:si_unique_call 30} sdv_29 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_11);
    assume {:nonnull} sdv_29 != 0;
    assume sdv_29 > 0;
    s_p_e_c_i_a_l_3 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_29)));
    assume {:nonnull} s_p_e_c_i_a_l_3 != 0;
    assume s_p_e_c_i_a_l_3 > 0;
    goto L68;

  L68:
    call {:si_unique_call 31} vslice_dummy_var_3 := KeSynchronizeExecution(0, li2bplFunctionConstant126, 0);
    call {:si_unique_call 32} IoReleaseCancelSpinLock(OldIrql);
    goto L56;

  anon18_Then:
    assume {:partition} UseATimer == 0;
    goto L68;

  anon15_Then:
    goto L99;

  anon13_Then:
    assume {:nonnull} Timeouts != 0;
    assume Timeouts > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto L28;

  anon14_Then:
    goto L24;

  anon17_Then:
    goto L96;
}



procedure {:origName "CyyGetNextImmediate"} CyyGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp: int, actual_CompleteCurrent: int, actual_Extension_2: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetNextImmediate"} CyyGetNextImmediate(actual_CurrentOpIrp: int, actual_QueueToProcess: int, actual_NewIrp: int, actual_CompleteCurrent: int, actual_Extension_2: int)
{
  var {:pointer} Tmp_34: int;
  var {:scalar} OldIrql_1: int;
  var {:pointer} OldIrp_1: int;
  var {:pointer} Tmp_36: int;
  var {:pointer} CurrentOpIrp: int;
  var {:pointer} NewIrp: int;
  var {:pointer} Extension_2: int;
  var vslice_dummy_var_9: int;
  var vslice_dummy_var_10: int;
  var vslice_dummy_var_11: int;

  anon0:
    call {:si_unique_call 33} vslice_dummy_var_9 := __HAVOC_malloc(4);
    CurrentOpIrp := actual_CurrentOpIrp;
    NewIrp := actual_NewIrp;
    Extension_2 := actual_Extension_2;
    call {:si_unique_call 34} Tmp_34 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    havoc OldIrp_1;
    call {:si_unique_call 35} Tmp_36 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    call {:si_unique_call 36} IoAcquireCancelSpinLock(Tmp_36);
    assume {:nonnull} Tmp_36 != 0;
    assume Tmp_36 > 0;
    havoc OldIrql_1;
    assume {:nonnull} Extension_2 != 0;
    assume Extension_2 > 0;
    assume {:nonnull} CurrentOpIrp != 0;
    assume CurrentOpIrp > 0;
    assume {:nonnull} NewIrp != 0;
    assume NewIrp > 0;
    call {:si_unique_call 37} vslice_dummy_var_10 := KeSynchronizeExecution(0, li2bplFunctionConstant131, 0);
    call {:si_unique_call 38} IoReleaseCancelSpinLock(OldIrql_1);
    Tmp_34 := strConst__li2bpl3;
    call {:si_unique_call 39} vslice_dummy_var_11 := CyyDbgPrintEx(9, Tmp_34);
    call {:si_unique_call 40} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 41} CyyIRPEpilogue(Extension_2);
    return;
}



procedure {:origName "_sdv_init8"} _sdv_init8();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init8"} _sdv_init8()
{
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 42} vslice_dummy_var_12 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetRegistryKeyValue"} CyyGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_39: int);
  modifies alloc;
  free ensures Tmp_39 == -1073741811 || Tmp_39 == -1073741823 || Tmp_39 == 0 || Tmp_39 == 5 || Tmp_39 == -1073741789 || Tmp_39 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetRegistryKeyValue"} CyyGetRegistryKeyValue(actual_Handle: int, actual_KeyNameString: int, actual_KeyNameStringLength: int, actual_Data: int, actual_DataLength: int) returns (Tmp_39: int)
{
  var {:pointer} fullInfo: int;
  var {:pointer} Tmp_40: int;
  var {:scalar} length: int;
  var {:pointer} Tmp_41: int;
  var {:pointer} sdv_39: int;
  var {:scalar} ntStatus: int;
  var {:scalar} keyName: int;
  var {:pointer} Tmp_42: int;
  var {:pointer} KeyNameString: int;
  var {:scalar} KeyNameStringLength: int;
  var {:scalar} DataLength: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_12: int;

  anon0:
    call {:si_unique_call 43} keyName := __HAVOC_malloc(12);
    KeyNameString := actual_KeyNameString;
    KeyNameStringLength := actual_KeyNameStringLength;
    DataLength := actual_DataLength;
    call {:si_unique_call 44} Tmp_40 := __HAVOC_malloc(120);
    call {:si_unique_call 45} Tmp_41 := __HAVOC_malloc(112);
    ntStatus := -1073741670;
    call {:si_unique_call 46} sdv_do_paged_code_check();
    Tmp_40 := strConst__li2bpl4;
    call {:si_unique_call 47} vslice_dummy_var_13 := CyyDbgPrintEx(2, Tmp_40);
    call {:si_unique_call 48} RtlInitUnicodeString(keyName, KeyNameString);
    length := 24 + KeyNameStringLength + DataLength;
    call {:si_unique_call 49} sdv_39 := ExAllocatePoolWithTag(1, length, -797345469);
    fullInfo := sdv_39;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} fullInfo != 0;
    call {:si_unique_call 50} Tmp_42 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_42 != 0;
    assume Tmp_42 > 0;
    call {:si_unique_call 51} ntStatus := ZwQueryValueKey(0, 0, 1, 0, length, Tmp_42);
    assume {:nonnull} Tmp_42 != 0;
    assume Tmp_42 > 0;
    havoc length;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} ntStatus >= 0;
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:nonnull} fullInfo != 0;
    assume fullInfo > 0;
    havoc vslice_dummy_var_12;
    call {:si_unique_call 52} sdv_RtlCopyMemory(0, 0, vslice_dummy_var_12);
    goto L31;

  L31:
    call {:si_unique_call 53} sdv_ExFreePool(0);
    goto L23;

  L23:
    Tmp_41 := strConst__li2bpl5;
    call {:si_unique_call 54} vslice_dummy_var_14 := CyyDbgPrintEx(2, Tmp_41);
    Tmp_39 := ntStatus;
    return;

  anon8_Then:
    goto L31;

  anon7_Then:
    assume {:partition} 0 > ntStatus;
    goto L31;

  anon9_Then:
    assume {:partition} fullInfo == 0;
    goto L23;
}



procedure {:origName "_sdv_init7"} _sdv_init7();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init7"} _sdv_init7()
{
  var vslice_dummy_var_15: int;

  anon0:
    call {:si_unique_call 55} vslice_dummy_var_15 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetRegistryKeyValueLength"} CyyGetRegistryKeyValueLength(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int) returns (Tmp_46: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetRegistryKeyValueLength"} CyyGetRegistryKeyValueLength(actual_Handle_1: int, actual_KeyNameString_1: int, actual_KeyNameStringLength_1: int) returns (Tmp_46: int)
{
  var {:pointer} fullInfo_1: int;
  var {:scalar} length_1: int;
  var {:pointer} sdv_42: int;
  var {:scalar} keyName_1: int;
  var {:pointer} Tmp_47: int;
  var {:pointer} KeyNameString_1: int;
  var {:scalar} KeyNameStringLength_1: int;
  var vslice_dummy_var_16: int;

  anon0:
    call {:si_unique_call 56} keyName_1 := __HAVOC_malloc(12);
    KeyNameString_1 := actual_KeyNameString_1;
    KeyNameStringLength_1 := actual_KeyNameStringLength_1;
    call {:si_unique_call 57} sdv_do_paged_code_check();
    call {:si_unique_call 58} RtlInitUnicodeString(keyName_1, KeyNameString_1);
    length_1 := 24 + KeyNameStringLength_1;
    call {:si_unique_call 59} sdv_42 := ExAllocatePoolWithTag(1, length_1, -797345469);
    fullInfo_1 := sdv_42;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} fullInfo_1 != 0;
    call {:si_unique_call 60} Tmp_47 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    call {:si_unique_call 61} vslice_dummy_var_16 := ZwQueryValueKey(0, 0, 1, 0, length_1, Tmp_47);
    assume {:nonnull} Tmp_47 != 0;
    assume Tmp_47 > 0;
    havoc length_1;
    call {:si_unique_call 62} sdv_ExFreePool(0);
    goto L18;

  L18:
    Tmp_46 := length_1;
    return;

  anon3_Then:
    assume {:partition} fullInfo_1 == 0;
    goto L18;
}



procedure {:origName "_sdv_init13"} _sdv_init13();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init13"} _sdv_init13()
{
  var vslice_dummy_var_17: int;

  anon0:
    call {:si_unique_call 63} vslice_dummy_var_17 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyIoControl"} CyyIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_50: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyIoControl"} CyyIoControl(actual_DeviceObject_1: int, actual_Irp_1: int) returns (Tmp_50: int)
{
  var {:scalar} Tmp_51: int;
  var {:pointer} Tmp_52: int;
  var {:pointer} Tmp_53: int;
  var {:scalar} Tmp_54: int;
  var {:pointer} Tmp_55: int;
  var {:scalar} S: int;
  var {:scalar} OldIrql_2: int;
  var {:pointer} Tmp_56: int;
  var {:pointer} NewChars: int;
  var {:pointer} Tmp_57: int;
  var {:pointer} NewTimeouts: int;
  var {:scalar} Tmp_58: int;
  var {:scalar} Tmp_59: int;
  var {:scalar} Tmp_60: int;
  var {:scalar} Tmp_61: int;
  var {:scalar} Mask: int;
  var {:pointer} escapeChar: int;
  var {:scalar} S_1: int;
  var {:scalar} Tmp_62: int;
  var {:pointer} Lc: int;
  var {:pointer} Tmp_63: int;
  var {:scalar} prologueStatus: int;
  var {:scalar} Status: int;
  var {:pointer} Tmp_64: int;
  var {:pointer} Tmp_65: int;
  var {:scalar} S_2: int;
  var {:pointer} Rs: int;
  var {:pointer} Br: int;
  var {:scalar} Tmp_66: int;
  var {:pointer} Tmp_67: int;
  var {:pointer} Tmp_68: int;
  var {:pointer} IrpSp: int;
  var {:scalar} S_3: int;
  var {:scalar} result: int;
  var {:pointer} Tmp_69: int;
  var {:scalar} OldIrql_3: int;
  var {:pointer} HandFlow: int;
  var {:scalar} Tmp_70: int;
  var {:scalar} Tmp_71: int;
  var {:scalar} Tmp_72: int;
  var {:pointer} Tmp_73: int;
  var {:scalar} LData: int;
  var {:scalar} S_4: int;
  var {:pointer} Extension_3: int;
  var {:scalar} LParity: int;
  var {:scalar} sdv_73: int;
  var {:pointer} Tmp_74: int;
  var {:scalar} S_5: int;
  var {:pointer} Tmp_75: int;
  var {:dopa} {:scalar} ModemControl: int;
  var {:scalar} Mask_1: int;
  var {:pointer} Tmp_76: int;
  var {:scalar} NewMask: int;
  var {:pointer} Xc: int;
  var {:scalar} Tmp_77: int;
  var {:scalar} LStop: int;
  var {:scalar} S_6: int;
  var {:scalar} Tmp_78: int;
  var {:pointer} Tmp_79: int;
  var {:scalar} S_7: int;
  var {:scalar} BaudRate: int;
  var {:scalar} S_8: int;
  var {:scalar} Tmp_80: int;
  var {:pointer} Tmp_81: int;
  var {:scalar} Tmp_82: int;
  var {:pointer} Tmp_83: int;
  var {:pointer} Tmp_84: int;
  var {:pointer} Tmp_85: int;
  var {:pointer} Lc_1: int;
  var {:pointer} Tmp_86: int;
  var {:scalar} S_9: int;
  var {:pointer} DeviceObject_1: int;
  var {:pointer} Irp_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_18: int;
  var vslice_dummy_var_19: int;
  var vslice_dummy_var_20: int;
  var vslice_dummy_var_21: int;
  var vslice_dummy_var_22: int;
  var vslice_dummy_var_23: int;
  var vslice_dummy_var_24: int;
  var vslice_dummy_var_25: int;
  var vslice_dummy_var_26: int;
  var vslice_dummy_var_27: int;
  var vslice_dummy_var_28: int;
  var vslice_dummy_var_29: int;
  var vslice_dummy_var_30: int;
  var vslice_dummy_var_31: int;
  var vslice_dummy_var_32: int;
  var vslice_dummy_var_33: int;
  var vslice_dummy_var_34: int;
  var vslice_dummy_var_35: int;
  var vslice_dummy_var_36: int;
  var vslice_dummy_var_37: int;
  var vslice_dummy_var_38: int;
  var vslice_dummy_var_39: int;
  var vslice_dummy_var_40: int;
  var vslice_dummy_var_41: int;
  var vslice_dummy_var_42: int;
  var vslice_dummy_var_43: int;
  var vslice_dummy_var_44: int;
  var vslice_dummy_var_45: int;
  var vslice_dummy_var_13: int;
  var vslice_dummy_var_14: int;
  var vslice_dummy_var_15: int;
  var vslice_dummy_var_16: int;
  var vslice_dummy_var_17: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_47: int;
  var vslice_dummy_var_48: int;
  var vslice_dummy_var_49: int;
  var vslice_dummy_var_50: int;

  anon0:
    call {:si_unique_call 64} S := __HAVOC_malloc(8);
    call {:si_unique_call 65} S_1 := __HAVOC_malloc(8);
    call {:si_unique_call 66} S_2 := __HAVOC_malloc(8);
    call {:si_unique_call 67} S_3 := __HAVOC_malloc(8);
    call {:si_unique_call 68} S_4 := __HAVOC_malloc(8);
    call {:si_unique_call 69} S_5 := __HAVOC_malloc(8);
    call {:si_unique_call 70} ModemControl := __HAVOC_malloc(4);
    call {:si_unique_call 71} S_6 := __HAVOC_malloc(8);
    call {:si_unique_call 72} S_7 := __HAVOC_malloc(8);
    call {:si_unique_call 73} S_8 := __HAVOC_malloc(8);
    call {:si_unique_call 74} S_9 := __HAVOC_malloc(8);
    DeviceObject_1 := actual_DeviceObject_1;
    Irp_1 := actual_Irp_1;
    call {:si_unique_call 75} Tmp_53 := __HAVOC_malloc(136);
    call {:si_unique_call 76} Tmp_55 := __HAVOC_malloc(148);
    call {:si_unique_call 77} Tmp_56 := __HAVOC_malloc(148);
    call {:si_unique_call 78} Tmp_65 := __HAVOC_malloc(128);
    call {:si_unique_call 79} Tmp_74 := __HAVOC_malloc(72);
    call {:si_unique_call 80} Tmp_75 := __HAVOC_malloc(72);
    call {:si_unique_call 81} Tmp_81 := __HAVOC_malloc(140);
    call {:si_unique_call 82} Tmp_83 := __HAVOC_malloc(68);
    call {:si_unique_call 83} Tmp_84 := __HAVOC_malloc(124);
    call {:si_unique_call 84} Tmp_86 := __HAVOC_malloc(96);
    assume {:nonnull} DeviceObject_1 != 0;
    assume DeviceObject_1 > 0;
    havoc Extension_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon409_Then, anon409_Else;

  anon409_Else:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 85} sdv_IoCompleteRequest(0, 0);
    Tmp_50 := -1073741808;
    goto L1;

  L1:
    return;

  anon409_Then:
    call {:si_unique_call 86} prologueStatus := CyyIRPPrologue(Irp_1, Extension_3);
    goto anon293_Then, anon293_Else;

  anon293_Else:
    assume {:partition} prologueStatus != 0;
    goto anon294_Then, anon294_Else;

  anon294_Else:
    assume {:partition} prologueStatus != 259;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_75 := strConst__li2bpl3;
    call {:si_unique_call 87} vslice_dummy_var_32 := CyyDbgPrintEx(9, Tmp_75);
    call {:si_unique_call 88} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 89} CyyIRPEpilogue(Extension_3);
    goto L24;

  L24:
    Tmp_50 := prologueStatus;
    goto L1;

  anon294_Then:
    assume {:partition} prologueStatus == 259;
    goto L24;

  anon293_Then:
    assume {:partition} prologueStatus == 0;
    Tmp_86 := strConst__li2bpl6;
    call {:si_unique_call 90} vslice_dummy_var_33 := CyyDbgPrintEx(9, Tmp_86);
    call {:si_unique_call 91} sdv_73 := CyyCompleteIfError(DeviceObject_1, Irp_1);
    goto anon295_Then, anon295_Else;

  anon295_Else:
    assume {:partition} sdv_73 != 0;
    Tmp_50 := -1073741536;
    goto L1;

  anon295_Then:
    assume {:partition} sdv_73 == 0;
    call {:si_unique_call 92} IrpSp := sdv_IoGetCurrentIrpStackLocation(Irp_1);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Status := 0;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon410_Then, anon410_Else;

  anon410_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon398_Then, anon398_Else;

  anon398_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon397_Then, anon397_Else;

  anon397_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon396_Then, anon396_Else;

  anon396_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon395_Then, anon395_Else;

  anon395_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon394_Then, anon394_Else;

  anon394_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon393_Then, anon393_Else;

  anon393_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon392_Then, anon392_Else;

  anon392_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon391_Then, anon391_Else;

  anon391_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon390_Then, anon390_Else;

  anon390_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon389_Then, anon389_Else;

  anon389_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon388_Then, anon388_Else;

  anon388_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon387_Then, anon387_Else;

  anon387_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon386_Then, anon386_Else;

  anon386_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon385_Then, anon385_Else;

  anon385_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon384_Then, anon384_Else;

  anon384_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon383_Then, anon383_Else;

  anon383_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon382_Then, anon382_Else;

  anon382_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon381_Then, anon381_Else;

  anon381_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon380_Then, anon380_Else;

  anon380_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon379_Then, anon379_Else;

  anon379_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon378_Then, anon378_Else;

  anon378_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon377_Then, anon377_Else;

  anon377_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon376_Then, anon376_Else;

  anon376_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon375_Then, anon375_Else;

  anon375_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon374_Then, anon374_Else;

  anon374_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon373_Then, anon373_Else;

  anon373_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon372_Then, anon372_Else;

  anon372_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon371_Then, anon371_Else;

  anon371_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon370_Then, anon370_Else;

  anon370_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon369_Then, anon369_Else;

  anon369_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon368_Then, anon368_Else;

  anon368_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon367_Then, anon367_Else;

  anon367_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon366_Then, anon366_Else;

  anon366_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon365_Then, anon365_Else;

  anon365_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon364_Then, anon364_Else;

  anon364_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon363_Then, anon363_Else;

  anon363_Else:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon307_Then, anon307_Else;

  anon307_Else:
    Status := -1073741789;
    goto L95;

  L95:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_74 := strConst__li2bpl3;
    call {:si_unique_call 93} vslice_dummy_var_34 := CyyDbgPrintEx(9, Tmp_74);
    call {:si_unique_call 94} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 95} CyyIRPEpilogue(Extension_3);
    Tmp_50 := Status;
    goto L1;

  anon307_Then:
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_2 != 0;
    assume S_2 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon438_Then, anon438_Else;

  anon438_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_13;
    call {:si_unique_call 96} Status := CyyGotoPowerState(vslice_dummy_var_13, Extension_3, 1);
    goto anon308_Then, anon308_Else;

  anon308_Else:
    assume {:partition} Status >= 0;
    goto L108;

  L108:
    call {:si_unique_call 97} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 98} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 99} vslice_dummy_var_21 := KeSynchronizeExecution(0, li2bplFunctionConstant364, 0);
    call {:si_unique_call 100} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon308_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon438_Then:
    goto L108;

  anon363_Then:
    Status := -1073741811;
    goto L95;

  anon364_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon309_Then, anon309_Else;

  anon309_Else:
    Status := -1073741789;
    goto L95;

  anon309_Then:
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_1 != 0;
    assume S_1 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon437_Then, anon437_Else;

  anon437_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_14;
    call {:si_unique_call 101} Status := CyyGotoPowerState(vslice_dummy_var_14, Extension_3, 1);
    goto anon310_Then, anon310_Else;

  anon310_Else:
    assume {:partition} Status >= 0;
    goto L130;

  L130:
    call {:si_unique_call 102} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 103} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 104} vslice_dummy_var_22 := KeSynchronizeExecution(0, li2bplFunctionConstant362, 0);
    call {:si_unique_call 105} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon310_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon437_Then:
    goto L130;

  anon365_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon311_Then, anon311_Else;

  anon311_Else:
    Status := -1073741789;
    goto L95;

  anon311_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_7 != 0;
    assume S_7 > 0;
    call {:si_unique_call 106} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 107} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 108} vslice_dummy_var_23 := KeSynchronizeExecution(0, li2bplFunctionConstant363, 0);
    call {:si_unique_call 109} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon366_Then:
    call {:si_unique_call 110} vslice_dummy_var_20 := KeSynchronizeExecution(0, li2bplFunctionConstant356, 0);
    goto L95;

  anon367_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon306_Then, anon306_Else;

  anon306_Else:
    Status := -1073741789;
    goto L95;

  anon306_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 111} vslice_dummy_var_45 := KeSynchronizeExecution(0, li2bplFunctionConstant355, 0);
    goto L95;

  anon368_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon305_Then, anon305_Else;

  anon305_Else:
    Status := -1073741789;
    goto L95;

  anon305_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_52;
    assume {:nonnull} Tmp_52 != 0;
    assume Tmp_52 > 0;
    goto L95;

  anon369_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc escapeChar;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon436_Then, anon436_Else;

  anon436_Else:
    Status := -1073741789;
    goto L95;

  anon436_Then:
    call {:si_unique_call 112} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 113} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon312_Then, anon312_Else;

  anon312_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon313_Then, anon313_Else;

  anon313_Else:
    goto L189;

  L189:
    Status := -1073741811;
    call {:si_unique_call 114} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon313_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} escapeChar != 0;
    assume escapeChar > 0;
    goto anon314_Then, anon314_Else;

  anon314_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon315_Then, anon315_Else;

  anon315_Else:
    goto L189;

  anon315_Then:
    goto L186;

  L186:
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_5 != 0;
    assume S_5 > 0;
    call {:si_unique_call 115} vslice_dummy_var_44 := KeSynchronizeExecution(0, li2bplFunctionConstant366, 0);
    call {:si_unique_call 116} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon314_Then:
    goto L189;

  anon312_Then:
    goto L186;

  anon370_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon316_Then, anon316_Else;

  anon316_Else:
    Status := -1073741789;
    goto L95;

  anon316_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    assume {:nonnull} S_9 != 0;
    assume S_9 > 0;
    call {:si_unique_call 117} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 118} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 119} vslice_dummy_var_24 := KeSynchronizeExecution(0, li2bplFunctionConstant369, 0);
    call {:si_unique_call 120} sdv_KeReleaseSpinLock(0, OldIrql_3);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_63;
    assume {:nonnull} ModemControl != 0;
    assume ModemControl > 0;
    assume {:nonnull} Tmp_63 != 0;
    assume Tmp_63 > 0;
    goto L95;

  anon371_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon304_Then, anon304_Else;

  anon304_Else:
    Status := -1073741789;
    goto L95;

  anon304_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    Tmp_69 := AssociatedIrp__IRP(Irp_1);
    assume {:nonnull} Tmp_69 != 0;
    assume Tmp_69 > 0;
    havoc vslice_dummy_var_15;
    call {:si_unique_call 121} CyyGetProperties(Extension_3, vslice_dummy_var_15);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L95;

  anon372_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Xc;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon435_Then, anon435_Else;

  anon435_Else:
    Status := -1073741789;
    goto L95;

  anon435_Then:
    assume {:nonnull} Xc != 0;
    assume Xc > 0;
    goto anon317_Then, anon317_Else;

  anon317_Else:
    Status := -1073741811;
    goto L95;

  anon317_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 122} Tmp_50 := CyyStartOrQueue(Extension_3, Irp_1, WriteQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant194);
    goto L1;

  anon373_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon318_Then, anon318_Else;

  anon318_Else:
    Status := -1073741789;
    goto L95;

  anon318_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_8 != 0;
    assume S_8 > 0;
    call {:si_unique_call 123} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 124} IoAcquireCancelSpinLock(Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 125} vslice_dummy_var_25 := KeSynchronizeExecution(0, li2bplFunctionConstant365, 0);
    call {:si_unique_call 126} IoReleaseCancelSpinLock(OldIrql_3);
    goto L95;

  anon374_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon319_Then, anon319_Else;

  anon319_Else:
    Status := -1073741789;
    goto L95;

  anon319_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} S_6 != 0;
    assume S_6 > 0;
    call {:si_unique_call 127} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 128} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    call {:si_unique_call 129} vslice_dummy_var_26 := KeSynchronizeExecution(0, li2bplFunctionConstant361, 0);
    call {:si_unique_call 130} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon375_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc HandFlow;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon433_Then, anon433_Else;

  anon433_Else:
    Status := -1073741789;
    goto L95;

  anon433_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon320_Then, anon320_Else;

  anon320_Else:
    Status := -1073741811;
    goto L95;

  anon320_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon321_Then, anon321_Else;

  anon321_Else:
    Status := -1073741811;
    goto L95;

  anon321_Then:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    havoc Tmp_72;
    goto anon434_Then, anon434_Else;

  anon434_Else:
    assume {:partition} Tmp_72 == 3;
    Status := -1073741811;
    goto L95;

  anon434_Then:
    assume {:partition} Tmp_72 != 3;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon322_Then, anon322_Else;

  anon322_Else:
    goto L291;

  L291:
    Status := -1073741811;
    goto L95;

  anon322_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon323_Then, anon323_Else;

  anon323_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon324_Then, anon324_Else;

  anon324_Else:
    goto L295;

  L295:
    Status := -1073741811;
    goto L95;

  anon324_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon325_Then, anon325_Else;

  anon325_Else:
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    assume {:nonnull} S_4 != 0;
    assume S_4 > 0;
    call {:si_unique_call 131} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 132} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon326_Then, anon326_Else;

  anon326_Else:
    assume {:nonnull} HandFlow != 0;
    assume HandFlow > 0;
    goto anon327_Then, anon327_Else;

  anon327_Else:
    Status := -1073741811;
    call {:si_unique_call 133} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon327_Then:
    goto L303;

  L303:
    call {:si_unique_call 134} vslice_dummy_var_27 := KeSynchronizeExecution(0, li2bplFunctionConstant370, 0);
    call {:si_unique_call 135} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon326_Then:
    goto L303;

  anon325_Then:
    goto L295;

  anon323_Then:
    goto L291;

  anon376_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon303_Then, anon303_Else;

  anon303_Else:
    Status := -1073741789;
    goto L95;

  anon303_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 136} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 137} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_79;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_79 != 0;
    assume Tmp_79 > 0;
    call {:si_unique_call 138} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon377_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewChars;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon432_Then, anon432_Else;

  anon432_Else:
    Status := -1073741789;
    goto L95;

  anon432_Then:
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    assume {:nonnull} S_3 != 0;
    assume S_3 > 0;
    call {:si_unique_call 139} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 140} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon328_Then, anon328_Else;

  anon328_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon329_Then, anon329_Else;

  anon329_Else:
    goto L341;

  L341:
    Status := -1073741811;
    call {:si_unique_call 141} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon329_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    goto anon330_Then, anon330_Else;

  anon330_Else:
    goto L341;

  anon330_Then:
    goto L338;

  L338:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewChars != 0;
    assume NewChars > 0;
    call {:si_unique_call 142} vslice_dummy_var_43 := KeSynchronizeExecution(0, li2bplFunctionConstant357, 0);
    call {:si_unique_call 143} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon328_Then:
    goto L338;

  anon378_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon302_Then, anon302_Else;

  anon302_Else:
    Status := -1073741789;
    goto L95;

  anon302_Then:
    call {:si_unique_call 144} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 145} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_64;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_64 != 0;
    assume Tmp_64 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 146} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon379_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc_1;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon422_Then, anon422_Else;

  anon422_Else:
    Status := -1073741789;
    goto L95;

  anon422_Then:
    call {:si_unique_call 147} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 148} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon331_Then, anon331_Else;

  anon331_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_80;
    goto anon423_Then, anon423_Else;

  anon423_Else:
    assume {:partition} Tmp_80 == 1;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  L378:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_61;
    goto anon424_Then, anon424_Else;

  anon424_Else:
    assume {:partition} Tmp_61 == 16;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  L382:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_51;
    goto anon425_Then, anon425_Else;

  anon425_Else:
    assume {:partition} Tmp_51 == 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto anon332_Then, anon332_Else;

  anon332_Else:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  L388:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 149} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon332_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  anon425_Then:
    assume {:partition} Tmp_51 != 8;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L388;

  anon424_Then:
    assume {:partition} Tmp_61 != 16;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_59;
    goto anon426_Then, anon426_Else;

  anon426_Else:
    assume {:partition} Tmp_59 == 192;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon426_Then:
    assume {:partition} Tmp_59 != 192;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_60;
    goto anon427_Then, anon427_Else;

  anon427_Else:
    assume {:partition} Tmp_60 == 64;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon427_Then:
    assume {:partition} Tmp_60 != 64;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_77;
    goto anon428_Then, anon428_Else;

  anon428_Else:
    assume {:partition} Tmp_77 == 176;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon428_Then:
    assume {:partition} Tmp_77 != 176;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_58;
    goto anon429_Then, anon429_Else;

  anon429_Else:
    assume {:partition} Tmp_58 == 48;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L382;

  anon429_Then:
    assume {:partition} Tmp_58 != 48;
    goto L382;

  anon423_Then:
    assume {:partition} Tmp_80 != 1;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_78;
    goto anon430_Then, anon430_Else;

  anon430_Else:
    assume {:partition} Tmp_78 == 2;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon430_Then:
    assume {:partition} Tmp_78 != 2;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_66;
    goto anon431_Then, anon431_Else;

  anon431_Else:
    assume {:partition} Tmp_66 == 3;
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon431_Then:
    assume {:partition} Tmp_66 != 3;
    goto L378;

  anon331_Then:
    assume {:nonnull} Lc_1 != 0;
    assume Lc_1 > 0;
    goto L378;

  anon380_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Br;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon421_Then, anon421_Else;

  anon421_Else:
    Status := -1073741789;
    goto L95;

  anon421_Then:
    call {:si_unique_call 150} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 151} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Br != 0;
    assume Br > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 152} sdv_KeReleaseSpinLock(0, OldIrql_3);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto L95;

  anon381_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon333_Then, anon333_Else;

  anon333_Else:
    Status := -1073741789;
    goto L95;

  anon333_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_73;
    assume {:nonnull} Tmp_73 != 0;
    assume Tmp_73 > 0;
    havoc Mask;
    goto anon420_Then, anon420_Else;

  anon420_Else:
    assume {:partition} Mask != 0;
    goto anon334_Then, anon334_Else;

  anon334_Else:
    assume {:partition} BAND(Mask, -16) == 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 153} Tmp_50 := CyyStartOrQueue(Extension_3, Irp_1, PurgeQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentPurgeIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant371);
    goto L1;

  anon334_Then:
    assume {:partition} BAND(Mask, -16) != 0;
    goto L427;

  L427:
    Status := -1073741811;
    goto L95;

  anon420_Then:
    assume {:partition} Mask == 0;
    goto L427;

  anon382_Then:
    Tmp_81 := strConst__li2bpl7;
    call {:si_unique_call 154} vslice_dummy_var_40 := CyyDbgPrintEx(9, Tmp_81);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon335_Then, anon335_Else;

  anon335_Else:
    Tmp_65 := strConst__li2bpl9;
    call {:si_unique_call 155} vslice_dummy_var_41 := CyyDbgPrintEx(6, Tmp_65);
    Status := -1073741789;
    goto L95;

  anon335_Then:
    Tmp_56 := strConst__li2bpl8;
    call {:si_unique_call 156} vslice_dummy_var_42 := CyyDbgPrintEx(9, Tmp_56);
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 157} Tmp_50 := CyyStartOrQueue(Extension_3, Irp_1, MaskQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant177);
    goto L1;

  anon383_Then:
    Tmp_53 := strConst__li2bpl10;
    call {:si_unique_call 158} vslice_dummy_var_36 := CyyDbgPrintEx(9, Tmp_53);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon336_Then, anon336_Else;

  anon336_Else:
    Tmp_84 := strConst__li2bpl11;
    call {:si_unique_call 159} vslice_dummy_var_37 := CyyDbgPrintEx(6, Tmp_84);
    Status := -1073741789;
    goto L95;

  anon336_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_67;
    assume {:nonnull} Tmp_67 != 0;
    assume Tmp_67 > 0;
    havoc NewMask;
    goto anon419_Then, anon419_Else;

  anon419_Else:
    assume {:partition} BAND(NewMask, -8192) != 0;
    Tmp_83 := strConst__li2bpl13;
    call {:si_unique_call 160} vslice_dummy_var_38 := CyyDbgPrintEx(6, Tmp_83);
    Status := -1073741811;
    goto L95;

  anon419_Then:
    assume {:partition} BAND(NewMask, -8192) == 0;
    Tmp_55 := strConst__li2bpl12;
    call {:si_unique_call 161} vslice_dummy_var_39 := CyyDbgPrintEx(9, Tmp_55);
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 162} Tmp_50 := CyyStartOrQueue(Extension_3, Irp_1, MaskQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant177);
    goto L1;

  anon384_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon301_Then, anon301_Else;

  anon301_Else:
    Status := -1073741789;
    goto L95;

  anon301_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_57;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_57 != 0;
    assume Tmp_57 > 0;
    goto L95;

  anon385_Then:
    call {:si_unique_call 163} vslice_dummy_var_19 := KeSynchronizeExecution(0, li2bplFunctionConstant368, 0);
    goto L95;

  anon386_Then:
    call {:si_unique_call 164} vslice_dummy_var_18 := KeSynchronizeExecution(0, li2bplFunctionConstant367, 0);
    goto L95;

  anon387_Then:
    goto L58;

  L58:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon300_Then, anon300_Else;

  anon300_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_16;
    call {:si_unique_call 165} Status := CyyGotoPowerState(vslice_dummy_var_16, Extension_3, 1);
    goto anon337_Then, anon337_Else;

  anon337_Else:
    assume {:partition} Status >= 0;
    goto L477;

  L477:
    call {:si_unique_call 166} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 167} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_70;
    goto anon417_Then, anon417_Else;

  anon417_Else:
    assume {:partition} Tmp_70 == 128;
    goto L489;

  L489:
    Status := -1073741811;
    goto L490;

  L490:
    call {:si_unique_call 168} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon417_Then:
    assume {:partition} Tmp_70 != 128;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_54;
    goto anon418_Then, anon418_Else;

  anon418_Else:
    assume {:partition} Tmp_54 != 192;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon338_Then, anon338_Else;

  anon338_Else:
    Tmp_71 := li2bplFunctionConstant372;
    goto L498;

  L498:
    call {:si_unique_call 169} vslice_dummy_var_28 := KeSynchronizeExecution(0, Tmp_71, 0);
    goto L490;

  anon338_Then:
    Tmp_71 := li2bplFunctionConstant232;
    goto L498;

  anon418_Then:
    assume {:partition} Tmp_54 == 192;
    goto L489;

  anon337_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon300_Then:
    goto L477;

  anon388_Then:
    goto L58;

  anon389_Then:
    goto L95;

  anon390_Then:
    goto L56;

  L56:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon299_Then, anon299_Else;

  anon299_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_17;
    call {:si_unique_call 170} Status := CyyGotoPowerState(vslice_dummy_var_17, Extension_3, 1);
    goto anon339_Then, anon339_Else;

  anon339_Else:
    assume {:partition} Status >= 0;
    goto L501;

  L501:
    call {:si_unique_call 171} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 172} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc Tmp_82;
    goto anon416_Then, anon416_Else;

  anon416_Else:
    assume {:partition} Tmp_82 == 2;
    Status := -1073741811;
    goto L514;

  L514:
    call {:si_unique_call 173} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon416_Then:
    assume {:partition} Tmp_82 != 2;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon340_Then, anon340_Else;

  anon340_Else:
    Tmp_62 := li2bplFunctionConstant373;
    goto L520;

  L520:
    call {:si_unique_call 174} vslice_dummy_var_29 := KeSynchronizeExecution(0, Tmp_62, 0);
    goto L514;

  anon340_Then:
    Tmp_62 := li2bplFunctionConstant233;
    goto L520;

  anon339_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon299_Then:
    goto L501;

  anon391_Then:
    goto L56;

  anon392_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon298_Then, anon298_Else;

  anon298_Else:
    Status := -1073741789;
    goto L95;

  anon298_Then:
    call {:si_unique_call 175} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 176} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_76;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Tmp_76 != 0;
    assume Tmp_76 > 0;
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    call {:si_unique_call 177} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon393_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc NewTimeouts;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon415_Then, anon415_Else;

  anon415_Else:
    Status := -1073741789;
    goto L95;

  anon415_Then:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon341_Then, anon341_Else;

  anon341_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon342_Then, anon342_Else;

  anon342_Else:
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    goto anon343_Then, anon343_Else;

  anon343_Else:
    Status := -1073741811;
    goto L95;

  anon343_Then:
    goto L539;

  L539:
    call {:si_unique_call 178} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 179} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} NewTimeouts != 0;
    assume NewTimeouts > 0;
    call {:si_unique_call 180} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon342_Then:
    goto L539;

  anon341_Then:
    goto L539;

  anon394_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon344_Then, anon344_Else;

  anon344_Else:
    Status := -1073741789;
    goto L95;

  anon344_Then:
    call {:si_unique_call 181} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 182} IoAcquireCancelSpinLock(Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_2;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon345_Then, anon345_Else;

  anon345_Else:
    call {:si_unique_call 183} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    goto anon408_Then, anon408_Else;

  anon408_Else:
    call {:si_unique_call 184} IoReleaseCancelSpinLock(OldIrql_2);
    Status := -1073741536;
    goto L95;

  anon408_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 185} IoReleaseCancelSpinLock(OldIrql_2);
    call {:si_unique_call 186} CyyStartImmediate(Extension_3);
    Tmp_50 := 259;
    goto L1;

  anon345_Then:
    Status := -1073741811;
    call {:si_unique_call 187} IoReleaseCancelSpinLock(OldIrql_2);
    goto L95;

  anon395_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon297_Then, anon297_Else;

  anon297_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_46;
    call {:si_unique_call 188} Status := CyyGotoPowerState(vslice_dummy_var_46, Extension_3, 1);
    goto anon346_Then, anon346_Else;

  anon346_Else:
    assume {:partition} Status >= 0;
    goto L581;

  L581:
    call {:si_unique_call 189} vslice_dummy_var_30 := KeSynchronizeExecution(0, li2bplFunctionConstant374, 0);
    goto L95;

  anon346_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon297_Then:
    goto L581;

  anon396_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon296_Then, anon296_Else;

  anon296_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_47;
    call {:si_unique_call 190} Status := CyyGotoPowerState(vslice_dummy_var_47, Extension_3, 1);
    goto anon347_Then, anon347_Else;

  anon347_Else:
    assume {:partition} Status >= 0;
    goto L591;

  L591:
    call {:si_unique_call 191} vslice_dummy_var_31 := KeSynchronizeExecution(0, li2bplFunctionConstant375, 0);
    goto L95;

  anon347_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon296_Then:
    goto L591;

  anon397_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Lc;
    Mask_1 := 255;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon413_Then, anon413_Else;

  anon413_Else:
    Status := -1073741789;
    goto L95;

  anon413_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon348_Then, anon348_Else;

  anon348_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_48;
    call {:si_unique_call 192} Status := CyyGotoPowerState(vslice_dummy_var_48, Extension_3, 1);
    goto anon350_Then, anon350_Else;

  anon350_Else:
    assume {:partition} Status >= 0;
    goto L611;

  L611:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon349_Then, anon349_Else;

  anon349_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon401_Then, anon401_Else;

  anon401_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon400_Then, anon400_Else;

  anon400_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon399_Then, anon399_Else;

  anon399_Else:
    LData := 3;
    Mask_1 := 255;
    goto L625;

  L625:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon414_Then, anon414_Else;

  anon414_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon405_Then, anon405_Else;

  anon405_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon404_Then, anon404_Else;

  anon404_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon403_Then, anon403_Else;

  anon403_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon402_Then, anon402_Else;

  anon402_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 48;
    goto L635;

  L635:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon351_Then, anon351_Else;

  anon351_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon407_Then, anon407_Else;

  anon407_Else:
    assume {:nonnull} Lc != 0;
    assume Lc > 0;
    goto anon406_Then, anon406_Else;

  anon406_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 8;
    goto L642;

  L642:
    call {:si_unique_call 193} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 194} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 195} vslice_dummy_var_35 := KeSynchronizeExecution(0, li2bplFunctionConstant360, 0);
    call {:si_unique_call 196} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon406_Then:
    Status := -1073741811;
    goto L95;

  anon407_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 4;
    goto L642;

  anon351_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LStop := 0;
    goto L642;

  anon402_Then:
    Status := -1073741811;
    goto L95;

  anon403_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 176;
    goto L635;

  anon404_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 64;
    goto L635;

  anon405_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 192;
    goto L635;

  anon414_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    LParity := 16;
    goto L635;

  anon399_Then:
    Status := -1073741811;
    goto L95;

  anon400_Then:
    LData := 2;
    Mask_1 := 127;
    goto L625;

  anon401_Then:
    LData := 1;
    Mask_1 := 63;
    goto L625;

  anon349_Then:
    LData := 0;
    Mask_1 := 31;
    goto L625;

  anon350_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon348_Then:
    goto L611;

  anon398_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Rs;
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon412_Then, anon412_Else;

  anon412_Else:
    Status := -1073741789;
    goto L95;

  anon412_Then:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    goto anon352_Then, anon352_Else;

  anon352_Else:
    Status := 0;
    goto L95;

  anon352_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    assume {:nonnull} Rs != 0;
    assume Rs > 0;
    havoc vslice_dummy_var_49;
    call {:si_unique_call 197} boogieTmp := sdv_ExAllocatePoolWithQuotaTag(0, vslice_dummy_var_49, -797345469);
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon353_Then, anon353_Else;

  anon353_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    call {:si_unique_call 198} Tmp_50 := CyyStartOrQueue(Extension_3, Irp_1, ReadQueue__CYY_DEVICE_EXTENSION(Extension_3), CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_3), li2bplFunctionConstant376);
    goto L1;

  anon353_Then:
    goto L95;

  anon410_Then:
    assume {:nonnull} IrpSp != 0;
    assume IrpSp > 0;
    goto anon354_Then, anon354_Else;

  anon354_Else:
    Status := -1073741789;
    goto L95;

  anon354_Then:
    assume {:nonnull} Irp_1 != 0;
    assume Irp_1 > 0;
    havoc Tmp_85;
    assume {:nonnull} Tmp_85 != 0;
    assume Tmp_85 > 0;
    havoc BaudRate;
    goto anon411_Then, anon411_Else;

  anon411_Else:
    assume {:partition} BaudRate != 0;
    goto anon355_Then, anon355_Else;

  anon355_Else:
    assume {:partition} BaudRate <= 230400;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon356_Then, anon356_Else;

  anon356_Else:
    goto anon358_Then, anon358_Else;

  anon358_Else:
    assume {:partition} BaudRate > 115200;
    Status := -1073741811;
    goto L95;

  anon358_Then:
    assume {:partition} 115200 >= BaudRate;
    goto L706;

  L706:
    goto anon357_Then, anon357_Else;

  anon357_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    goto anon359_Then, anon359_Else;

  anon359_Else:
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    havoc vslice_dummy_var_50;
    call {:si_unique_call 199} Status := CyyGotoPowerState(vslice_dummy_var_50, Extension_3, 1);
    goto anon360_Then, anon360_Else;

  anon360_Else:
    assume {:partition} Status >= 0;
    goto L710;

  L710:
    call {:si_unique_call 200} Tmp_68 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    call {:si_unique_call 201} sdv_KeAcquireSpinLock(0, Tmp_68);
    assume {:nonnull} Tmp_68 != 0;
    assume Tmp_68 > 0;
    havoc OldIrql_3;
    goto anon361_Then, anon361_Else;

  anon361_Else:
    assume {:partition} Status >= 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} Extension_3 != 0;
    assume Extension_3 > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    assume {:nonnull} S != 0;
    assume S > 0;
    call {:si_unique_call 202} result := KeSynchronizeExecution(0, li2bplFunctionConstant358, 0);
    goto anon362_Then, anon362_Else;

  anon362_Else:
    assume {:partition} result == 0;
    Status := -1073741811;
    goto L721;

  L721:
    call {:si_unique_call 203} sdv_KeReleaseSpinLock(0, OldIrql_3);
    goto L95;

  anon362_Then:
    assume {:partition} result != 0;
    goto L721;

  anon361_Then:
    assume {:partition} 0 > Status;
    goto L721;

  anon360_Then:
    assume {:partition} 0 > Status;
    goto L95;

  anon359_Then:
    goto L710;

  anon357_Then:
    assume {:partition} 0 > Status;
    goto L710;

  anon356_Then:
    goto L706;

  anon355_Then:
    assume {:partition} 230400 < BaudRate;
    goto L703;

  L703:
    Status := -1073741811;
    goto L95;

  anon411_Then:
    assume {:partition} BaudRate == 0;
    goto L703;
}



procedure {:origName "CyyCDCmd"} CyyCDCmd(actual_Extension_4: int, actual_cmd: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCDCmd"} CyyCDCmd(actual_Extension_4: int, actual_cmd: int)
{
  var {:pointer} Tmp_87: int;
  var {:pointer} Tmp_88: int;
  var {:pointer} s_p_e_c_i_a_l_5: int;
  var {:pointer} chip: int;
  var {:scalar} oneSecond: int;
  var {:scalar} Tmp_93: int;
  var {:scalar} sdv_92: int;
  var {:pointer} s_p_e_c_i_a_l_6: int;
  var {:scalar} Tmp_94: int;
  var {:scalar} difference: int;
  var {:pointer} Tmp_95: int;
  var {:scalar} value: int;
  var {:scalar} irql: int;
  var {:scalar} startOfSpin: int;
  var {:scalar} Tmp_97: int;
  var {:scalar} nextQuery: int;
  var {:pointer} Extension_4: int;
  var vslice_dummy_var_46: int;
  var vslice_dummy_var_51: int;

  anon0:
    call {:si_unique_call 204} vslice_dummy_var_46 := __HAVOC_malloc(4);
    call {:si_unique_call 205} oneSecond := __HAVOC_malloc(20);
    call {:si_unique_call 206} Tmp_94 := __HAVOC_malloc(20);
    call {:si_unique_call 207} difference := __HAVOC_malloc(20);
    call {:si_unique_call 208} startOfSpin := __HAVOC_malloc(20);
    call {:si_unique_call 209} Tmp_97 := __HAVOC_malloc(20);
    call {:si_unique_call 210} nextQuery := __HAVOC_malloc(20);
    Extension_4 := actual_Extension_4;
    value := 255;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc chip;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    assume {:nonnull} oneSecond != 0;
    assume oneSecond > 0;
    Tmp_95 := KeTickCount;
    assume {:nonnull} Tmp_95 != 0;
    assume Tmp_95 > 0;
    havoc s_p_e_c_i_a_l_5;
    goto L18;

  L18:
    call {:si_unique_call 211} CyyCDCmd_loop_L18(s_p_e_c_i_a_l_5, startOfSpin);
    goto L18_last;

  L18_last:
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    assume {:nonnull} s_p_e_c_i_a_l_5 != 0;
    assume s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 212} value := corral_nondet();
    goto L30;

  L30:
    call {:si_unique_call 213} Tmp_87, sdv_92, s_p_e_c_i_a_l_6, value := CyyCDCmd_loop_L30(Tmp_87, chip, oneSecond, sdv_92, s_p_e_c_i_a_l_6, difference, value, startOfSpin, nextQuery);
    goto L30_last;

  L30_last:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} value != 0;
    Tmp_87 := KeTickCount;
    assume {:nonnull} Tmp_87 != 0;
    assume Tmp_87 > 0;
    havoc s_p_e_c_i_a_l_6;
    goto L35;

  L35:
    call {:si_unique_call 214} CyyCDCmd_loop_L35(s_p_e_c_i_a_l_6, nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} s_p_e_c_i_a_l_6 != 0;
    assume s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} nextQuery != 0;
    assume nextQuery > 0;
    assume {:nonnull} startOfSpin != 0;
    assume startOfSpin > 0;
    call {:si_unique_call 215} sdv_92 := corral_nondet();
    assume {:nonnull} difference != 0;
    assume difference > 0;
    assume {:nonnull} oneSecond != 0;
    assume oneSecond > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 216} irql := sdv_KeGetCurrentIrql();
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} 2 >= irql;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_93;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_94 != 0;
    assume Tmp_94 > 0;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Tmp_97 != 0;
    assume Tmp_97 > 0;
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    havoc Tmp_88;
    assume {:nonnull} Tmp_88 != 0;
    assume Tmp_88 > 0;
    havoc vslice_dummy_var_51;
    call {:si_unique_call 217} CyyLogError(vslice_dummy_var_51, 0, Tmp_97, Tmp_94, 0, 0, 0, Tmp_93, 0, 266240, 0, 0, 0, 0);
    assume {:nonnull} Extension_4 != 0;
    assume Extension_4 > 0;
    goto L31;

  L31:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} value == 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} value != 0;
    goto L1;

  anon19_Then:
    assume {:partition} irql > 2;
    goto L31;

  anon18_Then:
    goto L31;

  anon17_Then:
    call {:si_unique_call 218} value := corral_nondet();
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    assume false;
    return;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    assume false;
    return;

  anon15_Then:
    assume {:partition} value == 0;
    goto L31;

  anon20_Then:
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    assume false;
    return;
}



procedure {:origName "_sdv_init12"} _sdv_init12();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init12"} _sdv_init12()
{
  var vslice_dummy_var_47: int;

  anon0:
    call {:si_unique_call 219} vslice_dummy_var_47 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetProperties"} CyyGetProperties(actual_Extension_5: int, actual_Properties: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetProperties"} CyyGetProperties(actual_Extension_5: int, actual_Properties: int)
{
  var {:pointer} Extension_5: int;
  var {:pointer} Properties: int;
  var vslice_dummy_var_48: int;

  anon0:
    call {:si_unique_call 220} vslice_dummy_var_48 := __HAVOC_malloc(4);
    Extension_5 := actual_Extension_5;
    Properties := actual_Properties;
    call {:si_unique_call 221} sdv_RtlZeroMemory(0, 64);
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    assume {:nonnull} Extension_5 != 0;
    assume Extension_5 > 0;
    assume {:nonnull} Properties != 0;
    assume Properties > 0;
    return;
}



procedure {:origName "CyySendWaitWake"} CyySendWaitWake(actual_PDevExt: int) returns (Tmp_102: int);
  modifies alloc;
  free ensures Tmp_102 == -1073741436 || Tmp_102 == 0 || Tmp_102 == -1073741584 || Tmp_102 == 259 || Tmp_102 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyySendWaitWake"} CyySendWaitWake(actual_PDevExt: int) returns (Tmp_102: int)
{
  var {:pointer} Tmp_103: int;
  var {:scalar} powerState: int;
  var {:pointer} pIrp: int;
  var {:scalar} status: int;
  var {:pointer} PDevExt: int;
  var vslice_dummy_var_49: int;

  anon0:
    call {:si_unique_call 222} powerState := __HAVOC_malloc(8);
    PDevExt := actual_PDevExt;
    call {:si_unique_call 223} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_102 := -1073741436;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_102 := -1073741436;
    goto L1;

  anon12_Then:
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    call {:si_unique_call 224} Tmp_103 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    call {:si_unique_call 225} vslice_dummy_var_49 := sdv_InterlockedIncrement(Tmp_103);
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} Tmp_103 != 0;
    assume Tmp_103 > 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    assume {:nonnull} powerState != 0;
    assume powerState > 0;
    call {:si_unique_call 226} status := PoRequestPowerIrp(0, 0, powerState, li2bplFunctionConstant295, 0, 0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} status == 259;
    status := 0;
    assume {:nonnull} PDevExt != 0;
    assume PDevExt > 0;
    goto L27;

  L27:
    Tmp_102 := status;
    goto L1;

  anon14_Then:
    assume {:partition} status != 259;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} status < 0;
    call {:si_unique_call 227} CyyIRPEpilogue(PDevExt);
    goto L27;

  anon15_Then:
    assume {:partition} 0 <= status;
    goto L27;

  anon13_Then:
    Tmp_102 := -1073741436;
    goto L1;
}



procedure {:origName "CyyGotoPowerState"} CyyGotoPowerState(actual_PDevObj: int, actual_PDevExt_1: int, actual_DevPowerState: int) returns (Tmp_104: int);
  modifies alloc;
  free ensures Tmp_104 == 0 || Tmp_104 == -1073741584 || Tmp_104 == 259 || Tmp_104 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGotoPowerState"} CyyGotoPowerState(actual_PDevObj: int, actual_PDevExt_1: int, actual_DevPowerState: int) returns (Tmp_104: int)
{
  var {:pointer} Tmp_105: int;
  var {:scalar} powerState_1: int;
  var {:pointer} Tmp_107: int;
  var {:scalar} gotoPowEvent: int;
  var {:scalar} status_1: int;
  var {:scalar} DevPowerState: int;
  var vslice_dummy_var_50: int;
  var vslice_dummy_var_51: int;
  var vslice_dummy_var_52: int;

  anon0:
    call {:si_unique_call 228} powerState_1 := __HAVOC_malloc(8);
    call {:si_unique_call 229} gotoPowEvent := __HAVOC_malloc(124);
    DevPowerState := actual_DevPowerState;
    call {:si_unique_call 230} Tmp_105 := __HAVOC_malloc(88);
    call {:si_unique_call 231} Tmp_107 := __HAVOC_malloc(108);
    call {:si_unique_call 232} sdv_do_paged_code_check();
    Tmp_105 := strConst__li2bpl14;
    call {:si_unique_call 233} vslice_dummy_var_51 := CyyDbgPrintEx(11, Tmp_105);
    assume {:nonnull} powerState_1 != 0;
    assume powerState_1 > 0;
    call {:si_unique_call 234} KeInitializeEvent(gotoPowEvent, 1, 0);
    call {:si_unique_call 235} status_1 := PoRequestPowerIrp(0, 2, powerState_1, li2bplFunctionConstant284, 0, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_1 == 259;
    call {:si_unique_call 236} vslice_dummy_var_50 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    status_1 := 0;
    goto L21;

  L21:
    Tmp_107 := strConst__li2bpl15;
    call {:si_unique_call 237} vslice_dummy_var_52 := CyyDbgPrintEx(11, Tmp_107);
    Tmp_104 := status_1;
    return;

  anon3_Then:
    assume {:partition} status_1 != 259;
    goto L21;
}



procedure {:origName "_sdv_init9"} _sdv_init9();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init9"} _sdv_init9()
{
  var vslice_dummy_var_53: int;

  anon0:
    call {:si_unique_call 238} vslice_dummy_var_53 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyPowerDispatch"} CyyPowerDispatch(actual_PDevObj_1: int, actual_PIrp: int) returns (Tmp_110: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyPowerDispatch"} CyyPowerDispatch(actual_PDevObj_1: int, actual_PIrp: int) returns (Tmp_110: int)
{
  var {:pointer} Tmp_111: int;
  var {:pointer} Tmp_113: int;
  var {:pointer} Tmp_114: int;
  var {:pointer} Tmp_115: int;
  var {:pointer} pDevExt: int;
  var {:pointer} Tmp_116: int;
  var {:pointer} Tmp_117: int;
  var {:pointer} Tmp_118: int;
  var {:pointer} Tmp_119: int;
  var {:pointer} Tmp_120: int;
  var {:pointer} Tmp_121: int;
  var {:pointer} pIrpStack: int;
  var {:pointer} pLowerDevObj: int;
  var {:pointer} Tmp_122: int;
  var {:scalar} status_2: int;
  var {:pointer} Tmp_123: int;
  var {:pointer} PDevObj_1: int;
  var {:pointer} PIrp: int;
  var vslice_dummy_var_54: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;

  anon0:
    PDevObj_1 := actual_PDevObj_1;
    PIrp := actual_PIrp;
    call {:si_unique_call 239} Tmp_111 := __HAVOC_malloc(100);
    call {:si_unique_call 240} Tmp_113 := __HAVOC_malloc(104);
    call {:si_unique_call 241} Tmp_114 := __HAVOC_malloc(72);
    call {:si_unique_call 242} Tmp_115 := __HAVOC_malloc(100);
    call {:si_unique_call 243} Tmp_116 := __HAVOC_malloc(104);
    call {:si_unique_call 244} Tmp_117 := __HAVOC_malloc(72);
    call {:si_unique_call 245} Tmp_118 := __HAVOC_malloc(124);
    call {:si_unique_call 246} Tmp_119 := __HAVOC_malloc(80);
    call {:si_unique_call 247} Tmp_120 := __HAVOC_malloc(112);
    call {:si_unique_call 248} Tmp_121 := __HAVOC_malloc(72);
    call {:si_unique_call 249} Tmp_122 := __HAVOC_malloc(136);
    call {:si_unique_call 250} Tmp_123 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_1 != 0;
    assume PDevObj_1 > 0;
    havoc pDevExt;
    call {:si_unique_call 251} pIrpStack := sdv_IoGetCurrentIrpStackLocation(PIrp);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    havoc pLowerDevObj;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    call {:si_unique_call 252} sdv_do_paged_code_check();
    call {:si_unique_call 253} status_2 := CyyIRPPrologue(PIrp, pDevExt);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} status_2 != 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} status_2 != 259;
    call {:si_unique_call 254} PoStartNextPowerIrp(0);
    Tmp_117 := strConst__li2bpl3;
    call {:si_unique_call 255} vslice_dummy_var_56 := CyyDbgPrintEx(9, Tmp_117);
    call {:si_unique_call 256} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 257} CyyIRPEpilogue(pDevExt);
    goto L26;

  L26:
    Tmp_110 := status_2;
    goto L1;

  L1:
    return;

  anon42_Then:
    assume {:partition} status_2 == 259;
    goto L26;

  anon41_Then:
    assume {:partition} status_2 == 0;
    status_2 := 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    Tmp_120 := strConst__li2bpl19;
    call {:si_unique_call 258} vslice_dummy_var_66 := CyyDbgPrintEx(12, Tmp_120);
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    goto L57;

  L57:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc status_2;
    call {:si_unique_call 259} PoStartNextPowerIrp(0);
    Tmp_114 := strConst__li2bpl3;
    call {:si_unique_call 260} vslice_dummy_var_67 := CyyDbgPrintEx(9, Tmp_114);
    call {:si_unique_call 261} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 262} CyyIRPEpilogue(pDevExt);
    Tmp_110 := status_2;
    goto L1;

  anon46_Then:
    goto L58;

  L58:
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    status_2 := 0;
    call {:si_unique_call 263} PoStartNextPowerIrp(0);
    call {:si_unique_call 264} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 265} Tmp_110 := CyyPoCallDriver(pDevExt, pLowerDevObj, PIrp);
    goto L1;

  anon45_Then:
    goto L58;

  anon43_Then:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    goto L58;

  anon44_Then:
    goto L57;

  anon52_Then:
    goto L40;

  L40:
    call {:si_unique_call 266} PoStartNextPowerIrp(0);
    call {:si_unique_call 267} sdv_IoSkipCurrentIrpStackLocation(PIrp);
    call {:si_unique_call 268} status_2 := CyyPoCallDriver(pDevExt, pLowerDevObj, PIrp);
    Tmp_110 := status_2;
    goto L1;

  anon53_Then:
    Tmp_113 := strConst__li2bpl18;
    call {:si_unique_call 269} vslice_dummy_var_59 := CyyDbgPrintEx(12, Tmp_113);
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    Tmp_121 := strConst__li2bpl22;
    call {:si_unique_call 270} vslice_dummy_var_61 := CyyDbgPrintEx(12, Tmp_121);
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    assume {:nonnull} PIrp != 0;
    assume PIrp > 0;
    havoc status_2;
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    Tmp_122 := strConst__li2bpl23;
    call {:si_unique_call 271} vslice_dummy_var_62 := CyyDbgPrintEx(12, Tmp_122);
    goto L40;

  anon60_Then:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} pIrpStack != 0;
    assume pIrpStack > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    goto L107;

  L107:
    Tmp_115 := strConst__li2bpl24;
    call {:si_unique_call 272} vslice_dummy_var_64 := CyyDbgPrintEx(12, Tmp_115);
    call {:si_unique_call 273} Tmp_110 := CyySetPowerD3(PDevObj_1, PIrp);
    goto L1;

  anon56_Then:
    goto L40;

  anon57_Then:
    goto L107;

  anon58_Then:
    goto L107;

  anon48_Then:
    assume {:nonnull} pDevExt != 0;
    assume pDevExt > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    Tmp_111 := strConst__li2bpl25;
    call {:si_unique_call 274} vslice_dummy_var_63 := CyyDbgPrintEx(12, Tmp_111);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 275} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L181;

  L181:
    call {:si_unique_call 276} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 277} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 278} sdv_IoSetCompletionRoutine(PIrp, li2bplFunctionConstant290, 0, 1, 1, 1);
    call {:si_unique_call 279} vslice_dummy_var_54 := PoCallDriver(0, PIrp);
    Tmp_110 := 259;
    goto L1;

  anon50_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L181;

  anon49_Then:
    goto L40;

  anon55_Then:
    Tmp_119 := strConst__li2bpl20;
    call {:si_unique_call 280} vslice_dummy_var_65 := CyyDbgPrintEx(12, Tmp_119);
    goto L40;

  anon47_Then:
    Tmp_123 := strConst__li2bpl21;
    call {:si_unique_call 281} vslice_dummy_var_60 := CyyDbgPrintEx(12, Tmp_123);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume PIrp == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 282} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L178;

  L178:
    call {:si_unique_call 283} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 284} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp);
    call {:si_unique_call 285} sdv_IoSetCompletionRoutine(PIrp, li2bplFunctionConstant289, 0, 1, 1, 1);
    call {:si_unique_call 286} vslice_dummy_var_55 := PoCallDriver(0, PIrp);
    Tmp_110 := 259;
    goto L1;

  anon51_Then:
    assume !(PIrp == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L178;

  anon54_Then:
    Tmp_118 := strConst__li2bpl17;
    call {:si_unique_call 287} vslice_dummy_var_58 := CyyDbgPrintEx(12, Tmp_118);
    goto L40;

  anon59_Then:
    Tmp_116 := strConst__li2bpl16;
    call {:si_unique_call 288} vslice_dummy_var_57 := CyyDbgPrintEx(12, Tmp_116);
    goto L40;
}



procedure {:origName "CyySetPowerD3"} CyySetPowerD3(actual_PDevObj_2: int, actual_PIrp_1: int) returns (Tmp_124: int);
  modifies alloc;
  free ensures Tmp_124 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyySetPowerD3"} CyySetPowerD3(actual_PDevObj_2: int, actual_PIrp_1: int) returns (Tmp_124: int)
{
  var {:pointer} SD1: int;
  var {:pointer} pDevExt_1: int;
  var {:scalar} sdv_1: int;
  var {:pointer} pIrpStack_1: int;
  var {:pointer} Tmp_126: int;
  var {:pointer} PDevObj_2: int;
  var {:pointer} PIrp_1: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_52: int;
  var vslice_dummy_var_53: int;
  var vslice_dummy_var_54: int;

  anon0:
    call {:si_unique_call 289} sdv_1 := __HAVOC_malloc(8);
    PDevObj_2 := actual_PDevObj_2;
    PIrp_1 := actual_PIrp_1;
    call {:si_unique_call 290} Tmp_126 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_2 != 0;
    assume PDevObj_2 > 0;
    havoc pDevExt_1;
    call {:si_unique_call 291} pIrpStack_1 := sdv_IoGetCurrentIrpStackLocation(PIrp_1);
    call {:si_unique_call 292} sdv_do_paged_code_check();
    Tmp_126 := strConst__li2bpl26;
    call {:si_unique_call 293} vslice_dummy_var_69 := CyyDbgPrintEx(6, Tmp_126);
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    call {:si_unique_call 294} vslice_dummy_var_68 := CyySendWaitWake(pDevExt_1);
    goto L19;

  L19:
    assume {:nonnull} pIrpStack_1 != 0;
    assume pIrpStack_1 > 0;
    havoc vslice_dummy_var_52;
    havoc vslice_dummy_var_53;
    call {:si_unique_call 295} SD1 := PoSetPowerState(0, vslice_dummy_var_52, vslice_dummy_var_53);
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} SD1 != 0;
    assume SD1 > 0;
    assume {:nonnull} sdv_1 != 0;
    assume sdv_1 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    call {:si_unique_call 296} vslice_dummy_var_70 := KeSynchronizeExecution(0, li2bplFunctionConstant285, 0);
    goto L26;

  L26:
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    assume {:nonnull} PIrp_1 != 0;
    assume PIrp_1 > 0;
    call {:si_unique_call 297} PoStartNextPowerIrp(0);
    call {:si_unique_call 298} sdv_IoSkipCurrentIrpStackLocation(PIrp_1);
    assume {:nonnull} pDevExt_1 != 0;
    assume pDevExt_1 > 0;
    havoc vslice_dummy_var_54;
    call {:si_unique_call 299} Tmp_124 := CyyPoCallDriver(pDevExt_1, vslice_dummy_var_54, PIrp_1);
    return;

  anon6_Then:
    goto L26;

  anon5_Then:
    goto L19;
}



procedure {:origName "CyyInitMultiPort"} CyyInitMultiPort(actual_PDevExt_2: int, actual_PConfigData: int, actual_PDevObj_3: int) returns (Tmp_127: int);
  modifies alloc;
  free ensures Tmp_127 == 0 || Tmp_127 == -1073741709 || Tmp_127 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyInitMultiPort"} CyyInitMultiPort(actual_PDevExt_2: int, actual_PConfigData: int, actual_PDevObj_3: int) returns (Tmp_127: int)
{
  var {:pointer} Tmp_128: int;
  var {:pointer} Tmp_129: int;
  var {:pointer} pNewExt: int;
  var {:scalar} status_4: int;
  var {:pointer} Tmp_131: int;
  var {:pointer} PDevExt_2: int;
  var {:pointer} PConfigData: int;
  var {:pointer} PDevObj_3: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;

  anon0:
    PDevExt_2 := actual_PDevExt_2;
    PConfigData := actual_PConfigData;
    PDevObj_3 := actual_PDevObj_3;
    call {:si_unique_call 300} Tmp_128 := __HAVOC_malloc(104);
    call {:si_unique_call 301} Tmp_129 := __HAVOC_malloc(104);
    call {:si_unique_call 302} Tmp_131 := __HAVOC_malloc(124);
    assume {:nonnull} PDevObj_3 != 0;
    assume PDevObj_3 > 0;
    havoc pNewExt;
    call {:si_unique_call 303} sdv_do_paged_code_check();
    Tmp_131 := strConst__li2bpl27;
    call {:si_unique_call 304} vslice_dummy_var_71 := CyyDbgPrintEx(2, Tmp_131);
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    assume {:nonnull} PDevExt_2 != 0;
    assume PDevExt_2 > 0;
    assume {:nonnull} pNewExt != 0;
    assume pNewExt > 0;
    call {:si_unique_call 305} status_4 := CyyInitController(PDevObj_3, PConfigData);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} status_4 >= 0;
    Tmp_128 := strConst__li2bpl29;
    call {:si_unique_call 306} vslice_dummy_var_72 := CyyDbgPrintEx(2, Tmp_128);
    Tmp_127 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} 0 > status_4;
    Tmp_129 := strConst__li2bpl28;
    call {:si_unique_call 307} vslice_dummy_var_73 := CyyDbgPrintEx(2, Tmp_129);
    Tmp_127 := status_4;
    goto L1;
}



procedure {:origName "GetMyMappedCD1400Address"} GetMyMappedCD1400Address(actual_BoardMemory_1: int, actual_PortIndex: int, actual_IsPci: int) returns (Tmp_132: int);
  modifies alloc;
  free ensures Tmp_132 == actual_BoardMemory_1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "GetMyMappedCD1400Address"} GetMyMappedCD1400Address(actual_BoardMemory_1: int, actual_PortIndex: int, actual_IsPci: int) returns (Tmp_132: int)
{
  var {:pointer} CyyCDOffset_1: int;
  var {:pointer} BoardMemory_1: int;
  var {:scalar} PortIndex: int;

  anon0:
    BoardMemory_1 := actual_BoardMemory_1;
    PortIndex := actual_PortIndex;
    call {:si_unique_call 308} CyyCDOffset_1 := __HAVOC_malloc(32);
    assume {:nonnull} CyyCDOffset_1 != 0;
    assume CyyCDOffset_1 > 0;
    Tmp_132 := BoardMemory_1;
    return;
}



procedure {:origName "CyyFindInitController"} CyyFindInitController(actual_PDevObj_4: int, actual_PConfig: int) returns (Tmp_134: int);
  modifies alloc;
  free ensures Tmp_134 == -1073741810 || Tmp_134 == 0 || Tmp_134 == -1073741709 || Tmp_134 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyFindInitController"} CyyFindInitController(actual_PDevObj_4: int, actual_PConfig: int) returns (Tmp_134: int)
{
  var {:scalar} Tmp_135: int;
  var {:scalar} Tmp_136: int;
  var {:pointer} Tmp_137: int;
  var {:scalar} sdv_129: int;
  var {:pointer} Tmp_138: int;
  var {:pointer} Tmp_139: int;
  var {:pointer} sdv_132: int;
  var {:pointer} Tmp_140: int;
  var {:pointer} pCurDevObj: int;
  var {:scalar} Tmp_141: int;
  var {:scalar} Tmp_142: int;
  var {:pointer} Tmp_143: int;
  var {:pointer} pDevExt_2: int;
  var {:pointer} Tmp_144: int;
  var {:scalar} Tmp_145: int;
  var {:scalar} Tmp_146: int;
  var {:pointer} Tmp_147: int;
  var {:scalar} Tmp_148: int;
  var {:scalar} sdv_138: int;
  var {:scalar} Tmp_149: int;
  var {:pointer} sdv_141: int;
  var {:pointer} pExtension: int;
  var {:scalar} oldIrql: int;
  var {:scalar} Tmp_150: int;
  var {:scalar} Tmp_151: int;
  var {:scalar} sdv_142: int;
  var {:scalar} Tmp_152: int;
  var {:scalar} sdv_143: int;
  var {:scalar} sdv_146: int;
  var {:pointer} Tmp_153: int;
  var {:pointer} Tmp_154: int;
  var {:pointer} Tmp_155: int;
  var {:scalar} sdv_147: int;
  var {:scalar} Tmp_156: int;
  var {:scalar} status_5: int;
  var {:scalar} Tmp_157: int;
  var {:scalar} Tmp_158: int;
  var {:scalar} serialPhysicalMax: int;
  var {:scalar} Tmp_159: int;
  var {:pointer} Tmp_160: int;
  var {:scalar} sdv_149: int;
  var {:pointer} PDevObj_4: int;
  var {:pointer} PConfig: int;
  var vslice_dummy_var_74: int;
  var vslice_dummy_var_75: int;
  var vslice_dummy_var_76: int;
  var vslice_dummy_var_77: int;
  var vslice_dummy_var_78: int;
  var vslice_dummy_var_79: int;
  var vslice_dummy_var_80: int;
  var vslice_dummy_var_81: int;
  var vslice_dummy_var_82: int;
  var vslice_dummy_var_83: int;
  var vslice_dummy_var_55: int;
  var vslice_dummy_var_56: int;
  var vslice_dummy_var_57: int;
  var vslice_dummy_var_58: int;
  var vslice_dummy_var_59: int;
  var vslice_dummy_var_60: int;
  var vslice_dummy_var_61: int;
  var vslice_dummy_var_62: int;
  var vslice_dummy_var_63: int;
  var vslice_dummy_var_64: int;
  var vslice_dummy_var_65: int;
  var vslice_dummy_var_66: int;
  var vslice_dummy_var_67: int;
  var vslice_dummy_var_68: int;
  var vslice_dummy_var_69: int;
  var vslice_dummy_var_70: int;
  var vslice_dummy_var_71: int;
  var vslice_dummy_var_72: int;
  var vslice_dummy_var_73: int;
  var vslice_dummy_var_84: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;

  anon0:
    call {:si_unique_call 309} Tmp_142 := __HAVOC_malloc(20);
    call {:si_unique_call 310} Tmp_149 := __HAVOC_malloc(20);
    call {:si_unique_call 311} Tmp_156 := __HAVOC_malloc(20);
    call {:si_unique_call 312} serialPhysicalMax := __HAVOC_malloc(20);
    PDevObj_4 := actual_PDevObj_4;
    PConfig := actual_PConfig;
    call {:si_unique_call 313} Tmp_137 := __HAVOC_malloc(328);
    call {:si_unique_call 314} Tmp_138 := __HAVOC_malloc(116);
    call {:si_unique_call 315} Tmp_139 := __HAVOC_malloc(104);
    call {:si_unique_call 316} Tmp_140 := __HAVOC_malloc(60);
    call {:si_unique_call 317} Tmp_143 := __HAVOC_malloc(340);
    call {:si_unique_call 318} Tmp_144 := __HAVOC_malloc(300);
    call {:si_unique_call 319} Tmp_147 := __HAVOC_malloc(128);
    call {:si_unique_call 320} Tmp_153 := __HAVOC_malloc(328);
    call {:si_unique_call 321} Tmp_155 := __HAVOC_malloc(336);
    call {:si_unique_call 322} Tmp_160 := __HAVOC_malloc(892);
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    havoc pDevExt_2;
    Tmp_147 := strConst__li2bpl38;
    call {:si_unique_call 323} vslice_dummy_var_74 := CyyDbgPrintEx(2, Tmp_147);
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    assume {:nonnull} serialPhysicalMax != 0;
    assume serialPhysicalMax > 0;
    Tmp_160 := strConst__li2bpl39;
    call {:si_unique_call 324} vslice_dummy_var_75 := CyyDbgPrintEx(4, Tmp_160);
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_55;
    havoc vslice_dummy_var_56;
    call {:si_unique_call 325} sdv_143 := CyyMemCompare(vslice_dummy_var_55, vslice_dummy_var_56, serialPhysicalMax, 0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_143 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_152;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_150;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} Tmp_156 != 0;
    assume Tmp_156 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_57;
    havoc vslice_dummy_var_58;
    havoc vslice_dummy_var_59;
    call {:si_unique_call 326} CyyLogError(vslice_dummy_var_57, 0, vslice_dummy_var_58, Tmp_156, 0, 0, 0, Tmp_150, 0, -1073475558, Tmp_152, vslice_dummy_var_59, 0, 0);
    Tmp_155 := strConst__li2bpl30;
    call {:si_unique_call 327} vslice_dummy_var_76 := CyyDbgPrintEx(1, Tmp_155);
    Tmp_134 := -1073741810;
    goto L1;

  L1:
    return;

  anon42_Then:
    assume {:partition} sdv_143 == 2;
    goto L20;

  L20:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_60;
    havoc vslice_dummy_var_61;
    call {:si_unique_call 328} sdv_142 := CyyMemCompare(vslice_dummy_var_60, vslice_dummy_var_61, serialPhysicalMax, 0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_142 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_148;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_157;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} Tmp_149 != 0;
    assume Tmp_149 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_62;
    havoc vslice_dummy_var_63;
    havoc vslice_dummy_var_64;
    call {:si_unique_call 329} CyyLogError(vslice_dummy_var_62, 0, vslice_dummy_var_63, Tmp_149, 0, 0, 0, Tmp_157, 0, -1073475557, Tmp_148, vslice_dummy_var_64, 0, 0);
    Tmp_137 := strConst__li2bpl31;
    call {:si_unique_call 330} vslice_dummy_var_77 := CyyDbgPrintEx(1, Tmp_137);
    Tmp_134 := -1073741810;
    goto L1;

  anon43_Then:
    assume {:partition} sdv_142 == 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} Tmp_142 != 0;
    assume Tmp_142 > 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_65;
    havoc vslice_dummy_var_66;
    call {:si_unique_call 331} sdv_147 := CyyMemCompare(vslice_dummy_var_65, vslice_dummy_var_66, Tmp_142, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_147 != 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc vslice_dummy_var_67;
    havoc vslice_dummy_var_68;
    havoc vslice_dummy_var_69;
    havoc vslice_dummy_var_70;
    call {:si_unique_call 332} sdv_138 := CyyMemCompare(vslice_dummy_var_67, vslice_dummy_var_68, vslice_dummy_var_69, vslice_dummy_var_70);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_138 != 2;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_141;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_158;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc vslice_dummy_var_71;
    havoc vslice_dummy_var_72;
    havoc vslice_dummy_var_73;
    havoc vslice_dummy_var_84;
    call {:si_unique_call 333} CyyLogError(vslice_dummy_var_71, 0, vslice_dummy_var_72, vslice_dummy_var_73, 0, 0, 0, Tmp_158, 0, -1073475556, Tmp_141, vslice_dummy_var_84, 0, 0);
    Tmp_143 := strConst__li2bpl32;
    call {:si_unique_call 334} vslice_dummy_var_78 := CyyDbgPrintEx(1, Tmp_143);
    Tmp_134 := -1073741810;
    goto L1;

  anon46_Then:
    assume {:partition} sdv_138 == 2;
    goto L49;

  L49:
    call {:si_unique_call 335} Tmp_154 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    call {:si_unique_call 336} sdv_KeAcquireSpinLock(0, Tmp_154);
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    havoc oldIrql;
    call {:si_unique_call 337} sdv_149 := sdv_IsListEmpty(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_149 != 0;
    pCurDevObj := 0;
    pExtension := 0;
    goto L77;

  L77:
    call {:si_unique_call 338} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    goto L84;

  L84:
    call {:si_unique_call 339} sdv_129, pCurDevObj, sdv_141, pExtension, oldIrql, Tmp_154 := CyyFindInitController_loop_L84(sdv_129, pCurDevObj, sdv_141, pExtension, oldIrql, Tmp_154, PConfig);
    goto L84_last;

  L84_last:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_85;
    havoc vslice_dummy_var_86;
    havoc vslice_dummy_var_87;
    havoc vslice_dummy_var_88;
    call {:si_unique_call 340} sdv_129 := CyyMemCompare(vslice_dummy_var_85, vslice_dummy_var_86, vslice_dummy_var_87, vslice_dummy_var_88);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_129 == 0;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    goto L96;

  L96:
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_151;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_135;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_146;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_89;
    havoc vslice_dummy_var_90;
    havoc vslice_dummy_var_91;
    havoc vslice_dummy_var_92;
    havoc vslice_dummy_var_93;
    call {:si_unique_call 341} CyyLogError(vslice_dummy_var_89, 0, vslice_dummy_var_90, vslice_dummy_var_91, 0, 0, 0, Tmp_146, 0, -1073475551, Tmp_135, vslice_dummy_var_92, Tmp_151, vslice_dummy_var_93);
    Tmp_144 := strConst__li2bpl34;
    call {:si_unique_call 342} vslice_dummy_var_80 := CyyDbgPrintEx(1, Tmp_144);
    Tmp_134 := -1073741810;
    goto L1;

  anon53_Then:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_94;
    havoc vslice_dummy_var_95;
    havoc vslice_dummy_var_96;
    havoc vslice_dummy_var_97;
    call {:si_unique_call 343} sdv_146 := CyyMemCompare(vslice_dummy_var_94, vslice_dummy_var_95, vslice_dummy_var_96, vslice_dummy_var_97);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} sdv_146 != 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc Tmp_145;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    havoc Tmp_159;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    havoc Tmp_136;
    assume {:nonnull} PConfig != 0;
    assume PConfig > 0;
    assume {:nonnull} PDevObj_4 != 0;
    assume PDevObj_4 > 0;
    assume {:nonnull} pDevExt_2 != 0;
    assume pDevExt_2 > 0;
    assume {:nonnull} pExtension != 0;
    assume pExtension > 0;
    havoc vslice_dummy_var_98;
    havoc vslice_dummy_var_99;
    havoc vslice_dummy_var_100;
    havoc vslice_dummy_var_101;
    havoc vslice_dummy_var_102;
    call {:si_unique_call 344} CyyLogError(vslice_dummy_var_98, 0, vslice_dummy_var_99, vslice_dummy_var_100, 0, 0, 0, Tmp_136, 0, -1073475550, Tmp_159, vslice_dummy_var_101, Tmp_145, vslice_dummy_var_102);
    Tmp_153 := strConst__li2bpl36;
    call {:si_unique_call 345} vslice_dummy_var_81 := CyyDbgPrintEx(1, Tmp_153);
    Tmp_134 := -1073741810;
    goto L1;

  anon56_Then:
    assume {:partition} sdv_146 == 0;
    goto L107;

  L107:
    Tmp_138 := strConst__li2bpl35;
    call {:si_unique_call 346} vslice_dummy_var_82 := CyyDbgPrintEx(4, Tmp_138);
    Tmp_140 := strConst__li2bpl37;
    call {:si_unique_call 347} vslice_dummy_var_83 := CyyDbgPrintEx(4, Tmp_140);
    call {:si_unique_call 348} status_5 := CyyInitMultiPort(pExtension, PConfig, PDevObj_4);
    Tmp_134 := status_5;
    goto L1;

  anon55_Then:
    goto L107;

  anon54_Then:
    goto L96;

  anon52_Then:
    assume {:partition} sdv_129 != 0;
    goto L85;

  L85:
    call {:si_unique_call 349} Tmp_154 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    call {:si_unique_call 350} sdv_KeAcquireSpinLock(0, Tmp_154);
    assume {:nonnull} Tmp_154 != 0;
    assume Tmp_154 > 0;
    havoc oldIrql;
    assume {:nonnull} pCurDevObj != 0;
    assume pCurDevObj > 0;
    havoc pCurDevObj;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 351} sdv_141 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_141;
    goto L134;

  L134:
    call {:si_unique_call 352} sdv_KeReleaseSpinLock(0, oldIrql);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto anon58_Else_dummy;

  anon58_Else_dummy:
    assume false;
    return;

  anon58_Then:
    goto L81;

  L81:
    Tmp_139 := strConst__li2bpl33;
    call {:si_unique_call 353} vslice_dummy_var_79 := CyyDbgPrintEx(4, Tmp_139);
    call {:si_unique_call 354} status_5 := CyyInitController(PDevObj_4, PConfig);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} status_5 >= 0;
    Tmp_134 := 0;
    goto L1;

  anon59_Then:
    assume {:partition} 0 > status_5;
    Tmp_134 := status_5;
    goto L1;

  anon57_Then:
    goto L81;

  anon60_Then:
    goto L134;

  anon51_Then:
    goto L85;

  anon50_Then:
    goto L85;

  anon49_Then:
    goto L85;

  anon48_Then:
    goto L81;

  anon47_Then:
    assume {:partition} sdv_149 == 0;
    havoc pCurDevObj;
    call {:si_unique_call 355} sdv_132 := sdv_containing_record(pCurDevObj, 4);
    pExtension := sdv_132;
    goto L77;

  anon45_Then:
    assume {:partition} sdv_147 == 0;
    goto L49;

  anon44_Then:
    goto L49;

  anon41_Then:
    goto L20;
}



procedure {:origName "CyyMemCompare"} CyyMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_161: int);
  modifies alloc;
  free ensures Tmp_161 == 0 || Tmp_161 == 2 || Tmp_161 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyMemCompare"} CyyMemCompare(actual_structPtr888A: int, actual_SpanOfA: int, actual_structPtr888B: int, actual_SpanOfB: int) returns (Tmp_161: int)
{
  var {:scalar} A: int;
  var {:scalar} B: int;
  var {:scalar} b: int;
  var {:scalar} higher: int;
  var {:scalar} lowerSpan: int;
  var {:scalar} lower: int;
  var {:scalar} a: int;
  var {:pointer} structPtr888A: int;
  var {:scalar} SpanOfA: int;
  var {:pointer} structPtr888B: int;
  var {:scalar} SpanOfB: int;

  anon0:
    call {:si_unique_call 356} A := __HAVOC_malloc(20);
    call {:si_unique_call 357} B := __HAVOC_malloc(20);
    call {:si_unique_call 358} b := __HAVOC_malloc(20);
    call {:si_unique_call 359} higher := __HAVOC_malloc(20);
    call {:si_unique_call 360} lower := __HAVOC_malloc(20);
    call {:si_unique_call 361} a := __HAVOC_malloc(20);
    structPtr888A := actual_structPtr888A;
    SpanOfA := actual_SpanOfA;
    structPtr888B := actual_structPtr888B;
    SpanOfB := actual_SpanOfB;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} structPtr888A != 0;
    assume structPtr888A > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} structPtr888B != 0;
    assume structPtr888B > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} A != 0;
    assume A > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} B != 0;
    assume B > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_161 := 0;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfB;
    goto L17;

  L17:
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_161 := 2;
    goto L1;

  anon8_Then:
    Tmp_161 := 1;
    goto L1;

  anon7_Then:
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} b != 0;
    assume b > 0;
    assume {:nonnull} higher != 0;
    assume higher > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    assume {:nonnull} a != 0;
    assume a > 0;
    assume {:nonnull} lower != 0;
    assume lower > 0;
    lowerSpan := SpanOfA;
    goto L17;
}



procedure {:origName "_sdv_init11"} _sdv_init11();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init11"} _sdv_init11()
{
  var vslice_dummy_var_84: int;

  anon0:
    call {:si_unique_call 362} vslice_dummy_var_84 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyInitController"} CyyInitController(actual_PDevObj_5: int, actual_PConfigData_1: int) returns (Tmp_165: int);
  modifies alloc;
  free ensures Tmp_165 == -1073741709 || Tmp_165 == 0 || Tmp_165 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyInitController"} CyyInitController(actual_PDevObj_5: int, actual_PConfigData_1: int) returns (Tmp_165: int)
{
  var {:pointer} Tmp_166: int;
  var {:pointer} Tmp_167: int;
  var {:scalar} Tmp_169: int;
  var {:scalar} Tmp_170: int;
  var {:scalar} Tmp_171: int;
  var {:pointer} Tmp_172: int;
  var {:scalar} Tmp_173: int;
  var {:pointer} pDevExt_3: int;
  var {:pointer} Tmp_175: int;
  var {:scalar} Tmp_176: int;
  var {:scalar} Tmp_177: int;
  var {:pointer} Tmp_178: int;
  var {:scalar} sdv_152: int;
  var {:scalar} allocedDispatch: int;
  var {:scalar} Tmp_179: int;
  var {:scalar} Tmp_180: int;
  var {:pointer} sdv_155: int;
  var {:pointer} sdv_156: int;
  var {:pointer} Tmp_181: int;
  var {:scalar} Tmp_182: int;
  var {:pointer} Tmp_183: int;
  var {:scalar} Tmp_184: int;
  var {:scalar} Tmp_185: int;
  var {:pointer} Tmp_186: int;
  var {:scalar} Tmp_187: int;
  var {:scalar} status_6: int;
  var {:pointer} pDispatch: int;
  var {:pointer} PDevObj_5: int;
  var {:pointer} PConfigData_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_85: int;
  var vslice_dummy_var_86: int;
  var vslice_dummy_var_87: int;
  var vslice_dummy_var_88: int;
  var vslice_dummy_var_89: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;

  anon0:
    call {:si_unique_call 363} Tmp_169 := __HAVOC_malloc(20);
    call {:si_unique_call 364} Tmp_171 := __HAVOC_malloc(20);
    call {:si_unique_call 365} Tmp_176 := __HAVOC_malloc(20);
    call {:si_unique_call 366} vslice_dummy_var_85 := __HAVOC_malloc(20);
    call {:si_unique_call 367} Tmp_180 := __HAVOC_malloc(20);
    PDevObj_5 := actual_PDevObj_5;
    PConfigData_1 := actual_PConfigData_1;
    call {:si_unique_call 368} Tmp_166 := __HAVOC_malloc(128);
    call {:si_unique_call 369} Tmp_167 := __HAVOC_malloc(236);
    call {:si_unique_call 370} Tmp_172 := __HAVOC_malloc(840);
    call {:si_unique_call 371} Tmp_175 := __HAVOC_malloc(128);
    call {:si_unique_call 372} Tmp_178 := __HAVOC_malloc(128);
    call {:si_unique_call 373} Tmp_181 := __HAVOC_malloc(128);
    call {:si_unique_call 374} Tmp_183 := __HAVOC_malloc(228);
    call {:si_unique_call 375} Tmp_186 := __HAVOC_malloc(184);
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    havoc pDevExt_3;
    status_6 := 0;
    allocedDispatch := 0;
    pDispatch := 0;
    call {:si_unique_call 376} sdv_do_paged_code_check();
    Tmp_186 := strConst__li2bpl40;
    call {:si_unique_call 377} vslice_dummy_var_86 := CyyDbgPrintEx(4, Tmp_186);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto L21;

  L21:
    call {:si_unique_call 378} KeInitializeTimer(0);
    call {:si_unique_call 379} KeInitializeTimer(0);
    call {:si_unique_call 380} KeInitializeTimer(0);
    call {:si_unique_call 381} KeInitializeTimer(0);
    call {:si_unique_call 382} KeInitializeTimer(0);
    call {:si_unique_call 383} KeInitializeTimer(0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 384} KeInitializeDpc(CompleteWriteDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant201, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 385} KeInitializeDpc(CompleteReadDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant334, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 386} KeInitializeDpc(TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant335, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 387} KeInitializeDpc(IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant336, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 388} KeInitializeDpc(TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant203, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 389} KeInitializeDpc(CommErrorDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant337, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 390} KeInitializeDpc(CompleteImmediateDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant127, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 391} KeInitializeDpc(TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant129, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 392} KeInitializeDpc(CommWaitDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant182, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 393} KeInitializeDpc(XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant205, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 394} KeInitializeDpc(XoffCountCompleteDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant204, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 395} KeInitializeDpc(StartTimerLowerRTSDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant338, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 396} KeInitializeDpc(PerhapsLowerRTSDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant339, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 397} KeInitializeDpc(IsrUnlockPagesDpc__CYY_DEVICE_EXTENSION(pDevExt_3), li2bplFunctionConstant161, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_171 != 0;
    assume Tmp_171 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_103;
    call {:si_unique_call 398} sdv_155 := MmMapIoSpace(Tmp_171, vslice_dummy_var_103, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_187;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc Tmp_173;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} Tmp_180 != 0;
    assume Tmp_180 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_104;
    havoc vslice_dummy_var_105;
    havoc vslice_dummy_var_106;
    havoc vslice_dummy_var_107;
    call {:si_unique_call 399} CyyLogError(vslice_dummy_var_104, vslice_dummy_var_105, vslice_dummy_var_106, Tmp_180, 0, 0, 0, Tmp_173, 0, -1073475573, Tmp_187, vslice_dummy_var_107, 0, 0);
    Tmp_167 := strConst__li2bpl41;
    call {:si_unique_call 400} vslice_dummy_var_89 := CyyDbgPrintEx(1, Tmp_167);
    status_6 := -1073741709;
    goto L100;

  L100:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} status_6 >= 0;
    goto L102;

  L102:
    Tmp_165 := status_6;
    return;

  anon37_Then:
    assume {:partition} 0 > status_6;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} pDispatch != 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_170;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_166;
    assume {:nonnull} Tmp_166 != 0;
    assume Tmp_166 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_179;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_178;
    assume {:nonnull} Tmp_178 != 0;
    assume Tmp_178 > 0;
    goto L103;

  L103:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} allocedDispatch != 0;
    call {:si_unique_call 401} sdv_ExFreePool(0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L106;

  L106:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_108;
    call {:si_unique_call 402} MmUnmapIoSpace(0, vslice_dummy_var_108);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L111;

  L111:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_109;
    call {:si_unique_call 403} MmUnmapIoSpace(0, vslice_dummy_var_109);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L102;

  anon41_Then:
    goto L102;

  anon40_Then:
    goto L111;

  anon39_Then:
    assume {:partition} allocedDispatch == 0;
    goto L106;

  anon38_Then:
    assume {:partition} pDispatch == 0;
    goto L103;

  anon49_Then:
    goto L82;

  L82:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} Tmp_176 != 0;
    assume Tmp_176 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc vslice_dummy_var_110;
    call {:si_unique_call 404} sdv_156 := MmMapIoSpace(Tmp_176, vslice_dummy_var_110, 0);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L148;

  L148:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    goto L150;

  L150:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L151;

  L151:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_111;
    havoc vslice_dummy_var_112;
    havoc vslice_dummy_var_113;
    call {:si_unique_call 405} boogieTmp := GetMyPhysicalCD1400Address(vslice_dummy_var_111, vslice_dummy_var_112, vslice_dummy_var_113);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_114;
    havoc vslice_dummy_var_115;
    havoc vslice_dummy_var_116;
    call {:si_unique_call 406} boogieTmp := GetMyMappedCD1400Address(vslice_dummy_var_114, vslice_dummy_var_115, vslice_dummy_var_116);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 407} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 408} boogieTmp := corral_nondet();
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 409} boogieTmp := corral_nondet();
    Tmp_172 := strConst__li2bpl43;
    call {:si_unique_call 410} vslice_dummy_var_87 := CyyDbgPrintEx(4, Tmp_172);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 411} sdv_152 := corral_nondet();
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_152 > 70;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L185;

  L185:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc pDispatch;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_182;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_175;
    assume {:nonnull} Tmp_175 != 0;
    assume Tmp_175 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_184;
    assume {:nonnull} pDispatch != 0;
    assume pDispatch > 0;
    havoc Tmp_181;
    assume {:nonnull} Tmp_181 != 0;
    assume Tmp_181 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L100;

  anon44_Then:
    assume {:partition} 70 >= sdv_152;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L185;

  anon42_Then:
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L151;

  anon43_Then:
    goto L150;

  anon46_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L148;

  anon47_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L148;

  anon48_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L148;

  anon51_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto L148;

  anon50_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc Tmp_185;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    havoc Tmp_177;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} Tmp_169 != 0;
    assume Tmp_169 > 0;
    assume {:nonnull} PConfigData_1 != 0;
    assume PConfigData_1 > 0;
    assume {:nonnull} PDevObj_5 != 0;
    assume PDevObj_5 > 0;
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    havoc vslice_dummy_var_117;
    havoc vslice_dummy_var_118;
    havoc vslice_dummy_var_119;
    havoc vslice_dummy_var_120;
    call {:si_unique_call 412} CyyLogError(vslice_dummy_var_117, vslice_dummy_var_118, vslice_dummy_var_119, Tmp_169, 0, 0, 0, Tmp_177, 0, -1073475574, Tmp_185, vslice_dummy_var_120, 0, 0);
    Tmp_183 := strConst__li2bpl42;
    call {:si_unique_call 413} vslice_dummy_var_88 := CyyDbgPrintEx(1, Tmp_183);
    status_6 := -1073741709;
    goto L100;

  anon36_Then:
    goto L82;

  anon35_Then:
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    call {:si_unique_call 414} boogieTmp := ExAllocatePoolWithTag(0, 260, -797345469);
    assume {:nonnull} pDevExt_3 != 0;
    assume pDevExt_3 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    call {:si_unique_call 415} sdv_RtlZeroMemory(0, 260);
    allocedDispatch := 1;
    goto L21;

  anon45_Then:
    status_6 := -1073741670;
    goto L100;
}



procedure {:origName "CyyRemoveDevObj"} CyyRemoveDevObj(actual_PDevObj_6: int) returns (Tmp_188: int);
  modifies alloc;
  free ensures Tmp_188 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyRemoveDevObj"} CyyRemoveDevObj(actual_PDevObj_6: int) returns (Tmp_188: int)
{
  var {:pointer} pDevExt_4: int;
  var {:pointer} Tmp_193: int;
  var {:pointer} Tmp_196: int;
  var {:pointer} PDevObj_6: int;
  var vslice_dummy_var_90: int;
  var vslice_dummy_var_91: int;

  anon0:
    PDevObj_6 := actual_PDevObj_6;
    call {:si_unique_call 416} Tmp_193 := __HAVOC_malloc(84);
    call {:si_unique_call 417} Tmp_196 := __HAVOC_malloc(88);
    assume {:nonnull} PDevObj_6 != 0;
    assume PDevObj_6 > 0;
    havoc pDevExt_4;
    call {:si_unique_call 418} sdv_do_paged_code_check();
    Tmp_196 := strConst__li2bpl44;
    call {:si_unique_call 419} vslice_dummy_var_90 := CyyDbgPrintEx(2, Tmp_196);
    call {:si_unique_call 420} IoDetachDevice(0);
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 421} sdv_ExFreePool(0);
    goto L15;

  L15:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 422} sdv_ExFreePool(0);
    goto L19;

  L19:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 423} sdv_ExFreePool(0);
    goto L23;

  L23:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 424} sdv_ExFreePool(0);
    goto L27;

  L27:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} pDevExt_4 != 0;
    assume pDevExt_4 > 0;
    call {:si_unique_call 425} sdv_ExFreePool(0);
    goto L31;

  L31:
    call {:si_unique_call 426} IoDeleteDevice(0);
    Tmp_193 := strConst__li2bpl45;
    call {:si_unique_call 427} vslice_dummy_var_91 := CyyDbgPrintEx(2, Tmp_193);
    Tmp_188 := 0;
    return;

  anon15_Then:
    goto L31;

  anon14_Then:
    goto L27;

  anon13_Then:
    goto L23;

  anon12_Then:
    goto L19;

  anon11_Then:
    goto L15;
}



procedure {:origName "GetMyPhysicalCD1400Address"} GetMyPhysicalCD1400Address(actual_structPtr888BoardMemory: int, actual_PortIndex_1: int, actual_IsPci_1: int) returns (SD2: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "GetMyPhysicalCD1400Address"} GetMyPhysicalCD1400Address(actual_structPtr888BoardMemory: int, actual_PortIndex_1: int, actual_IsPci_1: int) returns (SD2: int)
{
  var {:scalar} BoardMemory: int;
  var {:scalar} Tmp_2: int;
  var {:pointer} CyyCDOffset_2: int;
  var {:scalar} chipIndex_1: int;
  var {:pointer} structPtr888BoardMemory: int;
  var {:scalar} PortIndex_1: int;
  var boogieTmp: int;

  anon0:
    call {:si_unique_call 428} BoardMemory := __HAVOC_malloc(20);
    call {:si_unique_call 429} Tmp_2 := __HAVOC_malloc(20);
    structPtr888BoardMemory := actual_structPtr888BoardMemory;
    PortIndex_1 := actual_PortIndex_1;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} structPtr888BoardMemory != 0;
    assume structPtr888BoardMemory > 0;
    call {:si_unique_call 430} CyyCDOffset_2 := __HAVOC_malloc(32);
    assume {:nonnull} CyyCDOffset_2 != 0;
    assume CyyCDOffset_2 > 0;
    chipIndex_1 := INTDIV(PortIndex_1, 4);
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    call {:si_unique_call 431} boogieTmp := corral_nondet();
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    assume {:nonnull} BoardMemory != 0;
    assume BoardMemory > 0;
    assume {:nonnull} Tmp_2 != 0;
    assume Tmp_2 > 0;
    SD2 := Tmp_2;
    return;
}



procedure {:origName "CyyKillPendingIrps"} CyyKillPendingIrps(actual_PDevObj_7: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyKillPendingIrps"} CyyKillPendingIrps(actual_PDevObj_7: int)
{
  var {:pointer} Tmp_199: int;
  var {:pointer} pDevExt_5: int;
  var {:pointer} Tmp_201: int;
  var {:pointer} Tmp_202: int;
  var {:pointer} Tmp_203: int;
  var {:scalar} cancelRoutine: int;
  var {:scalar} oldIrql_1: int;
  var {:pointer} Tmp_204: int;
  var {:pointer} Tmp_205: int;
  var {:pointer} Tmp_206: int;
  var {:pointer} PDevObj_7: int;
  var vslice_dummy_var_92: int;
  var vslice_dummy_var_93: int;
  var vslice_dummy_var_94: int;
  var vslice_dummy_var_95: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 432} vslice_dummy_var_92 := __HAVOC_malloc(4);
    PDevObj_7 := actual_PDevObj_7;
    call {:si_unique_call 433} Tmp_203 := __HAVOC_malloc(100);
    call {:si_unique_call 434} Tmp_204 := __HAVOC_malloc(84);
    assume {:nonnull} PDevObj_7 != 0;
    assume PDevObj_7 > 0;
    havoc pDevExt_5;
    Tmp_203 := strConst__li2bpl47;
    call {:si_unique_call 435} vslice_dummy_var_94 := CyyDbgPrintEx(2, Tmp_203);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 436} CyyKillAllReadsOrWrites(PDevObj_7, WriteQueue__CYY_DEVICE_EXTENSION(pDevExt_5), CurrentWriteIrp__CYY_DEVICE_EXTENSION(pDevExt_5));
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 437} CyyKillAllReadsOrWrites(PDevObj_7, ReadQueue__CYY_DEVICE_EXTENSION(pDevExt_5), CurrentReadIrp__CYY_DEVICE_EXTENSION(pDevExt_5));
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 438} CyyKillAllReadsOrWrites(PDevObj_7, PurgeQueue__CYY_DEVICE_EXTENSION(pDevExt_5), CurrentPurgeIrp__CYY_DEVICE_EXTENSION(pDevExt_5));
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    call {:si_unique_call 439} CyyKillAllReadsOrWrites(PDevObj_7, MaskQueue__CYY_DEVICE_EXTENSION(pDevExt_5), CurrentMaskIrp__CYY_DEVICE_EXTENSION(pDevExt_5));
    call {:si_unique_call 440} Tmp_205 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    call {:si_unique_call 441} IoAcquireCancelSpinLock(Tmp_205);
    assume {:nonnull} Tmp_205 != 0;
    assume Tmp_205 > 0;
    havoc oldIrql_1;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_201;
    assume {:nonnull} Tmp_201 != 0;
    assume Tmp_201 > 0;
    havoc cancelRoutine;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_206;
    assume {:nonnull} Tmp_206 != 0;
    assume Tmp_206 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} cancelRoutine != 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_202;
    assume {:nonnull} Tmp_202 != 0;
    assume Tmp_202 > 0;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc Tmp_199;
    assume {:nonnull} Tmp_199 != 0;
    assume Tmp_199 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant196;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_121;
    call {:si_unique_call 442} CyyCancelCurrentWrite(PDevObj_7, vslice_dummy_var_121);
    goto L40;

  L40:
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 443} vslice_dummy_var_93 := IoCancelIrp(0);
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    goto L41;

  L41:
    call {:si_unique_call 444} CyyKillAllStalled(PDevObj_7);
    Tmp_204 := strConst__li2bpl46;
    call {:si_unique_call 445} vslice_dummy_var_95 := CyyDbgPrintEx(2, Tmp_204);
    return;

  anon18_Then:
    goto L41;

  anon22_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant199;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_122;
    call {:si_unique_call 446} CyyCancelCurrentXoff(PDevObj_7, vslice_dummy_var_122);
    goto L40;

  anon21_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant125;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_123;
    call {:si_unique_call 447} CyyCancelImmediate(PDevObj_7, vslice_dummy_var_123);
    goto L40;

  anon20_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant149;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_124;
    call {:si_unique_call 448} CyyCancelQueued(PDevObj_7, vslice_dummy_var_124);
    goto L40;

  anon19_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant179;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_125;
    call {:si_unique_call 449} CyyCancelWait(PDevObj_7, vslice_dummy_var_125);
    goto L40;

  anon24_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine == li2bplFunctionConstant151;
    assume {:nonnull} pDevExt_5 != 0;
    assume pDevExt_5 > 0;
    havoc vslice_dummy_var_126;
    call {:si_unique_call 450} CyyFilterCancelQueued(PDevObj_7, vslice_dummy_var_126);
    goto L40;

  anon23_Then:
    assume {:partition} cancelRoutine == 0;
    call {:si_unique_call 451} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;

  anon17_Then:
    call {:si_unique_call 452} IoReleaseCancelSpinLock(oldIrql_1);
    goto L40;
}



procedure {:origName "CyyReleaseResources"} CyyReleaseResources(actual_PDevExt_3: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyReleaseResources"} CyyReleaseResources(actual_PDevExt_3: int)
{
  var {:scalar} sdv_165: int;
  var {:scalar} sdv_167: int;
  var {:scalar} sdv_169: int;
  var {:scalar} sdv_173: int;
  var {:pointer} Tmp_209: int;
  var {:scalar} plx: int;
  var {:pointer} Tmp_211: int;
  var {:scalar} sdv_181: int;
  var {:pointer} Tmp_213: int;
  var {:pointer} Tmp_214: int;
  var {:scalar} sdv_184: int;
  var {:scalar} sdv_188: int;
  var {:scalar} oldIrql_2: int;
  var {:scalar} sdv_197: int;
  var {:scalar} sdv_198: int;
  var {:scalar} sdv_199: int;
  var {:scalar} sdv_201: int;
  var {:scalar} sdv_203: int;
  var {:scalar} value_1: int;
  var {:pointer} Tmp_217: int;
  var {:scalar} sdv_205: int;
  var {:pointer} PDevExt_3: int;
  var vslice_dummy_var_96: int;
  var vslice_dummy_var_97: int;
  var vslice_dummy_var_98: int;
  var vslice_dummy_var_99: int;
  var vslice_dummy_var_100: int;
  var vslice_dummy_var_101: int;
  var vslice_dummy_var_102: int;
  var vslice_dummy_var_103: int;
  var vslice_dummy_var_104: int;
  var vslice_dummy_var_105: int;
  var vslice_dummy_var_106: int;
  var vslice_dummy_var_107: int;
  var vslice_dummy_var_108: int;
  var vslice_dummy_var_109: int;
  var vslice_dummy_var_110: int;
  var vslice_dummy_var_111: int;
  var vslice_dummy_var_112: int;
  var vslice_dummy_var_113: int;
  var vslice_dummy_var_114: int;
  var vslice_dummy_var_115: int;
  var vslice_dummy_var_116: int;
  var vslice_dummy_var_117: int;
  var vslice_dummy_var_118: int;
  var vslice_dummy_var_119: int;
  var vslice_dummy_var_120: int;
  var vslice_dummy_var_121: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;

  anon0:
    call {:si_unique_call 453} vslice_dummy_var_96 := __HAVOC_malloc(4);
    PDevExt_3 := actual_PDevExt_3;
    call {:si_unique_call 454} Tmp_209 := __HAVOC_malloc(152);
    call {:si_unique_call 455} Tmp_211 := __HAVOC_malloc(132);
    call {:si_unique_call 456} Tmp_213 := __HAVOC_malloc(104);
    call {:si_unique_call 457} Tmp_214 := __HAVOC_malloc(88);
    Tmp_213 := strConst__li2bpl48;
    call {:si_unique_call 458} vslice_dummy_var_105 := CyyDbgPrintEx(2, Tmp_213);
    call {:si_unique_call 459} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 460} sdv_KeAcquireSpinLock(0, Tmp_217);
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    havoc oldIrql_2;
    call {:si_unique_call 461} vslice_dummy_var_97 := sdv_RemoveEntryList(0);
    call {:si_unique_call 462} sdv_KeReleaseSpinLock(0, oldIrql_2);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 463} InitializeListHead(AllDevObjs__CYY_DEVICE_EXTENSION(PDevExt_3));
    call {:si_unique_call 464} vslice_dummy_var_98 := KeSynchronizeExecution(0, li2bplFunctionConstant327, 0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 465} plx := corral_nondet();
    plx := BAND(plx, BOR(BOR(BOR(1, 2), 4), 8));
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} plx != 11;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 466} value_1 := corral_nondet();
    value_1 := BAND(value_1, BNOT(BOR(256, 2048)));
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  L27:
    Tmp_209 := strConst__li2bpl49;
    call {:si_unique_call 467} vslice_dummy_var_106 := CyyDbgPrintEx(12, Tmp_209);
    call {:si_unique_call 468} IoDisconnectInterrupt(0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    Tmp_211 := strConst__li2bpl51;
    call {:si_unique_call 469} vslice_dummy_var_107 := CyyDbgPrintEx(12, Tmp_211);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 470} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L23;

  L23:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 471} vslice_dummy_var_99 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 472} vslice_dummy_var_100 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 473} vslice_dummy_var_101 := CyyCancelTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 474} vslice_dummy_var_102 := CyyCancelTimer(ImmediateTotalTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 475} vslice_dummy_var_103 := CyyCancelTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 476} vslice_dummy_var_104 := CyyCancelTimer(LowerRTSTimer__CYY_DEVICE_EXTENSION(PDevExt_3), PDevExt_3);
    call {:si_unique_call 477} sdv_198 := KeRemoveQueueDpc(0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_198 != 0;
    call {:si_unique_call 478} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 479} vslice_dummy_var_108 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L92;

  L92:
    call {:si_unique_call 480} sdv_201 := KeRemoveQueueDpc(0);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_201 != 0;
    call {:si_unique_call 481} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 482} vslice_dummy_var_109 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L99;

  L99:
    call {:si_unique_call 483} sdv_181 := KeRemoveQueueDpc(0);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_181 != 0;
    call {:si_unique_call 484} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 485} vslice_dummy_var_110 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L106;

  L106:
    call {:si_unique_call 486} sdv_184 := KeRemoveQueueDpc(0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_184 != 0;
    call {:si_unique_call 487} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 488} vslice_dummy_var_111 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L113;

  L113:
    call {:si_unique_call 489} sdv_203 := KeRemoveQueueDpc(0);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} sdv_203 != 0;
    call {:si_unique_call 490} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 491} vslice_dummy_var_112 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L120;

  L120:
    call {:si_unique_call 492} sdv_205 := KeRemoveQueueDpc(0);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} sdv_205 != 0;
    call {:si_unique_call 493} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 494} vslice_dummy_var_113 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L127;

  L127:
    call {:si_unique_call 495} sdv_197 := KeRemoveQueueDpc(0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} sdv_197 != 0;
    call {:si_unique_call 496} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 497} vslice_dummy_var_114 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L134;

  L134:
    call {:si_unique_call 498} sdv_167 := KeRemoveQueueDpc(0);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} sdv_167 != 0;
    call {:si_unique_call 499} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 500} vslice_dummy_var_115 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L141;

  L141:
    call {:si_unique_call 501} sdv_199 := KeRemoveQueueDpc(0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} sdv_199 != 0;
    call {:si_unique_call 502} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 503} vslice_dummy_var_116 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L148;

  L148:
    call {:si_unique_call 504} sdv_188 := KeRemoveQueueDpc(0);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} sdv_188 != 0;
    call {:si_unique_call 505} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 506} vslice_dummy_var_117 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L155;

  L155:
    call {:si_unique_call 507} sdv_165 := KeRemoveQueueDpc(0);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} sdv_165 != 0;
    call {:si_unique_call 508} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 509} vslice_dummy_var_118 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L162;

  L162:
    call {:si_unique_call 510} sdv_169 := KeRemoveQueueDpc(0);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} sdv_169 != 0;
    call {:si_unique_call 511} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 512} vslice_dummy_var_119 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L169;

  L169:
    call {:si_unique_call 513} sdv_173 := KeRemoveQueueDpc(0);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} sdv_173 != 0;
    call {:si_unique_call 514} Tmp_217 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    call {:si_unique_call 515} vslice_dummy_var_120 := sdv_InterlockedDecrement(Tmp_217);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    assume {:nonnull} Tmp_217 != 0;
    assume Tmp_217 > 0;
    goto L176;

  L176:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    havoc vslice_dummy_var_127;
    call {:si_unique_call 516} MmUnmapIoSpace(0, vslice_dummy_var_127);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L180;

  L180:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    havoc vslice_dummy_var_128;
    call {:si_unique_call 517} MmUnmapIoSpace(0, vslice_dummy_var_128);
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L185;

  L185:
    Tmp_214 := strConst__li2bpl50;
    call {:si_unique_call 518} vslice_dummy_var_121 := CyyDbgPrintEx(2, Tmp_214);
    return;

  anon56_Then:
    goto L185;

  anon55_Then:
    goto L180;

  anon54_Then:
    assume {:partition} sdv_173 == 0;
    goto L176;

  anon53_Then:
    assume {:partition} sdv_169 == 0;
    goto L169;

  anon52_Then:
    assume {:partition} sdv_165 == 0;
    goto L162;

  anon51_Then:
    assume {:partition} sdv_188 == 0;
    goto L155;

  anon50_Then:
    assume {:partition} sdv_199 == 0;
    goto L148;

  anon49_Then:
    assume {:partition} sdv_167 == 0;
    goto L141;

  anon48_Then:
    assume {:partition} sdv_197 == 0;
    goto L134;

  anon47_Then:
    assume {:partition} sdv_205 == 0;
    goto L127;

  anon46_Then:
    assume {:partition} sdv_203 == 0;
    goto L120;

  anon45_Then:
    assume {:partition} sdv_184 == 0;
    goto L113;

  anon44_Then:
    assume {:partition} sdv_181 == 0;
    goto L106;

  anon43_Then:
    assume {:partition} sdv_201 == 0;
    goto L99;

  anon42_Then:
    assume {:partition} sdv_198 == 0;
    goto L92;

  anon41_Then:
    goto L23;

  anon57_Then:
    assume {:partition} plx == 11;
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    call {:si_unique_call 519} value_1 := corral_nondet();
    value_1 := BAND(value_1, BNOT(BOR(BOR(1, 2), 64)));
    assume {:nonnull} PDevExt_3 != 0;
    assume PDevExt_3 > 0;
    goto L27;

  anon40_Then:
    goto L27;

  anon39_Then:
    goto L23;
}



procedure {:origName "CyyDisableInterfacesResources"} CyyDisableInterfacesResources(actual_PDevObj_8: int, actual_DisableCD1400: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyDisableInterfacesResources"} CyyDisableInterfacesResources(actual_PDevObj_8: int, actual_DisableCD1400: int)
{
  var {:pointer} pDevExt_6: int;
  var {:pointer} Tmp_221: int;
  var {:pointer} Tmp_223: int;
  var {:pointer} Tmp_225: int;
  var {:pointer} PDevObj_8: int;
  var {:scalar} DisableCD1400: int;
  var vslice_dummy_var_122: int;
  var vslice_dummy_var_123: int;
  var vslice_dummy_var_124: int;
  var vslice_dummy_var_125: int;

  anon0:
    call {:si_unique_call 520} vslice_dummy_var_122 := __HAVOC_malloc(4);
    PDevObj_8 := actual_PDevObj_8;
    DisableCD1400 := actual_DisableCD1400;
    call {:si_unique_call 521} Tmp_221 := __HAVOC_malloc(124);
    call {:si_unique_call 522} Tmp_225 := __HAVOC_malloc(92);
    assume {:nonnull} PDevObj_8 != 0;
    assume PDevObj_8 > 0;
    havoc pDevExt_6;
    call {:si_unique_call 523} sdv_do_paged_code_check();
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} DisableCD1400 != 0;
    Tmp_223 := strConst__li2bpl53;
    goto L11;

  L11:
    Tmp_221 := strConst__li2bpl54;
    call {:si_unique_call 524} vslice_dummy_var_124 := CyyDbgPrintEx(2, Tmp_221);
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L20;

  L20:
    call {:si_unique_call 525} vslice_dummy_var_123 := IoWMIRegistrationControl(0, 2);
    goto L15;

  L15:
    call {:si_unique_call 526} CyyUndoExternalNaming(pDevExt_6);
    Tmp_225 := strConst__li2bpl55;
    call {:si_unique_call 527} vslice_dummy_var_125 := CyyDbgPrintEx(2, Tmp_225);
    return;

  anon11_Then:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} DisableCD1400 != 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    assume {:nonnull} pDevExt_6 != 0;
    assume pDevExt_6 > 0;
    goto L23;

  L23:
    call {:si_unique_call 528} CyyReleaseResources(pDevExt_6);
    goto L20;

  anon12_Then:
    assume {:partition} DisableCD1400 == 0;
    goto L23;

  anon10_Then:
    goto L15;

  anon9_Then:
    assume {:partition} DisableCD1400 == 0;
    Tmp_223 := strConst__li2bpl52;
    goto L11;
}



procedure {:origName "_sdv_init10"} _sdv_init10();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init10"} _sdv_init10()
{
  var vslice_dummy_var_126: int;

  anon0:
    call {:si_unique_call 529} vslice_dummy_var_126 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCreateOpen"} CyyCreateOpen(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_228: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCreateOpen"} CyyCreateOpen(actual_DeviceObject_2: int, actual_Irp_2: int) returns (Tmp_228: int)
{
  var {:scalar} localStatus: int;
  var {:pointer} Tmp_229: int;
  var {:pointer} Tmp_230: int;
  var {:pointer} sdv_212: int;
  var {:pointer} Tmp_231: int;
  var {:pointer} Tmp_232: int;
  var {:pointer} sdv_216: int;
  var {:pointer} Tmp_233: int;
  var {:pointer} sdv_218: int;
  var {:scalar} sdv_219: int;
  var {:pointer} sdv_220: int;
  var {:pointer} Tmp_234: int;
  var {:pointer} sdv_221: int;
  var {:pointer} Tmp_235: int;
  var {:pointer} Tmp_236: int;
  var {:pointer} extension: int;
  var {:pointer} DeviceObject_2: int;
  var {:pointer} Irp_2: int;
  var boogieTmp: int;
  var vslice_dummy_var_127: int;
  var vslice_dummy_var_128: int;
  var vslice_dummy_var_129: int;
  var vslice_dummy_var_130: int;
  var vslice_dummy_var_131: int;
  var vslice_dummy_var_132: int;
  var vslice_dummy_var_133: int;
  var vslice_dummy_var_134: int;
  var vslice_dummy_var_135: int;
  var vslice_dummy_var_136: int;
  var vslice_dummy_var_137: int;
  var vslice_dummy_var_138: int;
  var vslice_dummy_var_139: int;
  var vslice_dummy_var_140: int;
  var vslice_dummy_var_141: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;

  anon0:
    DeviceObject_2 := actual_DeviceObject_2;
    Irp_2 := actual_Irp_2;
    call {:si_unique_call 530} Tmp_229 := __HAVOC_malloc(72);
    call {:si_unique_call 531} Tmp_230 := __HAVOC_malloc(72);
    call {:si_unique_call 532} Tmp_231 := __HAVOC_malloc(72);
    call {:si_unique_call 533} Tmp_232 := __HAVOC_malloc(72);
    call {:si_unique_call 534} Tmp_233 := __HAVOC_malloc(72);
    call {:si_unique_call 535} Tmp_234 := __HAVOC_malloc(96);
    call {:si_unique_call 536} Tmp_235 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_2 != 0;
    assume DeviceObject_2 > 0;
    havoc extension;
    call {:si_unique_call 537} sdv_do_paged_code_check();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 538} sdv_IoCompleteRequest(0, 0);
    Tmp_228 := -1073741670;
    goto L1;

  L1:
    return;

  anon23_Then:
    call {:si_unique_call 539} ExAcquireFastMutex(0);
    call {:si_unique_call 540} localStatus := CyyIRPPrologue(Irp_2, extension);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} localStatus != 0;
    call {:si_unique_call 541} ExReleaseFastMutex(0);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} localStatus != 259;
    Tmp_233 := strConst__li2bpl3;
    call {:si_unique_call 542} vslice_dummy_var_128 := CyyDbgPrintEx(9, Tmp_233);
    call {:si_unique_call 543} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 544} CyyIRPEpilogue(extension);
    goto L30;

  L30:
    Tmp_228 := localStatus;
    goto L1;

  anon25_Then:
    assume {:partition} localStatus == 259;
    goto L30;

  anon24_Then:
    assume {:partition} localStatus == 0;
    call {:si_unique_call 545} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 546} sdv_219 := sdv_InterlockedIncrement(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} sdv_219 != 1;
    call {:si_unique_call 547} ExReleaseFastMutex(0);
    call {:si_unique_call 548} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 549} vslice_dummy_var_129 := sdv_InterlockedDecrement(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    Tmp_230 := strConst__li2bpl3;
    call {:si_unique_call 550} vslice_dummy_var_130 := CyyDbgPrintEx(9, Tmp_230);
    call {:si_unique_call 551} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 552} CyyIRPEpilogue(extension);
    Tmp_228 := -1073741790;
    goto L1;

  anon26_Then:
    assume {:partition} sdv_219 == 1;
    Tmp_234 := strConst__li2bpl6;
    call {:si_unique_call 553} vslice_dummy_var_131 := CyyDbgPrintEx(9, Tmp_234);
    Tmp_232 := strConst__li2bpl56;
    call {:si_unique_call 554} vslice_dummy_var_132 := CyyDbgPrintEx(6, Tmp_232);
    call {:si_unique_call 555} sdv_218 := sdv_IoGetCurrentIrpStackLocation(Irp_2);
    assume {:nonnull} sdv_218 != 0;
    assume sdv_218 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    call {:si_unique_call 556} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 557} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 558} vslice_dummy_var_133 := sdv_InterlockedDecrement(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Tmp_235 := strConst__li2bpl3;
    call {:si_unique_call 559} vslice_dummy_var_134 := CyyDbgPrintEx(9, Tmp_235);
    call {:si_unique_call 560} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 561} CyyIRPEpilogue(extension);
    Tmp_228 := -1073741565;
    goto L1;

  anon27_Then:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_141;
    call {:si_unique_call 562} sdv_220 := ExAllocatePoolWithTag(0, vslice_dummy_var_141, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L95;

  L95:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    call {:si_unique_call 563} MmLockPagableSectionByHandle(0);
    call {:si_unique_call 564} vslice_dummy_var_127 := CyyGotoPowerState(DeviceObject_2, extension, 1);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 565} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 566} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 567} boogieTmp := corral_nondet();
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 568} vslice_dummy_var_135 := KeSynchronizeExecution(0, li2bplFunctionConstant356, 0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 569} vslice_dummy_var_136 := KeSynchronizeExecution(0, li2bplFunctionConstant424, 0);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 570} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    havoc localStatus;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} localStatus >= 0;
    goto L136;

  L136:
    Tmp_231 := strConst__li2bpl3;
    call {:si_unique_call 571} vslice_dummy_var_137 := CyyDbgPrintEx(9, Tmp_231);
    call {:si_unique_call 572} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 573} CyyIRPEpilogue(extension);
    Tmp_228 := localStatus;
    goto L1;

  anon31_Then:
    assume {:partition} 0 > localStatus;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 574} sdv_ExFreePool(0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto L146;

  L146:
    call {:si_unique_call 575} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 576} vslice_dummy_var_138 := sdv_InterlockedDecrement(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto L136;

  anon29_Then:
    goto L146;

  anon28_Then:
    call {:si_unique_call 577} ExReleaseFastMutex(0);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    assume {:nonnull} Irp_2 != 0;
    assume Irp_2 > 0;
    call {:si_unique_call 578} Tmp_236 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    call {:si_unique_call 579} vslice_dummy_var_139 := sdv_InterlockedDecrement(Tmp_236);
    assume {:nonnull} Tmp_236 != 0;
    assume Tmp_236 > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    Tmp_229 := strConst__li2bpl3;
    call {:si_unique_call 580} vslice_dummy_var_140 := CyyDbgPrintEx(9, Tmp_229);
    call {:si_unique_call 581} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 582} CyyIRPEpilogue(extension);
    Tmp_228 := -1073741670;
    goto L1;

  anon30_Then:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_142;
    call {:si_unique_call 583} sdv_221 := ExAllocatePoolWithTag(0, vslice_dummy_var_142, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_143;
    call {:si_unique_call 584} sdv_216 := ExAllocatePoolWithTag(0, vslice_dummy_var_143, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:nonnull} extension != 0;
    assume extension > 0;
    assume {:nonnull} extension != 0;
    assume extension > 0;
    havoc vslice_dummy_var_144;
    call {:si_unique_call 585} sdv_212 := ExAllocatePoolWithTag(0, vslice_dummy_var_144, -797345469);
    assume {:nonnull} extension != 0;
    assume extension > 0;
    goto L95;

  anon33_Then:
    goto L95;

  anon32_Then:
    goto L95;
}



procedure {:origName "_sdv_init15"} _sdv_init15();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init15"} _sdv_init15()
{
  var vslice_dummy_var_141: int;

  anon0:
    call {:si_unique_call 586} vslice_dummy_var_141 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetCharTime"} CyyGetCharTime(actual_Extension_6: int) returns (SD1_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetCharTime"} CyyGetCharTime(actual_Extension_6: int) returns (SD1_1: int)
{
  var {:scalar} dataSize: int;
  var {:scalar} charTime: int;
  var {:scalar} Tmp_239: int;
  var {:scalar} bitTime: int;
  var {:scalar} paritySize: int;
  var {:scalar} Tmp_240: int;
  var {:scalar} Tmp_1: int;
  var {:scalar} tmp: int;
  var {:scalar} stopSize: int;
  var {:scalar} Tmp_241: int;
  var {:pointer} Extension_6: int;

  anon0:
    call {:si_unique_call 587} Tmp_1 := __HAVOC_malloc(20);
    call {:si_unique_call 588} tmp := __HAVOC_malloc(20);
    Extension_6 := actual_Extension_6;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_240;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} Tmp_240 == 1;
    dataSize := 6;
    goto L15;

  L15:
    paritySize := 1;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_239;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Tmp_239 == 16;
    paritySize := 0;
    goto L18;

  L18:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    stopSize := 2;
    goto L22;

  L22:
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc bitTime;
    charTime := bitTime + (dataSize + paritySize + stopSize) * bitTime;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    assume {:nonnull} Tmp_1 != 0;
    assume Tmp_1 > 0;
    assume {:nonnull} tmp != 0;
    assume tmp > 0;
    SD1_1 := Tmp_1;
    return;

  anon12_Then:
    stopSize := 1;
    goto L22;

  anon14_Then:
    assume {:partition} Tmp_239 != 16;
    goto L18;

  anon13_Then:
    assume {:partition} Tmp_240 != 1;
    assume {:nonnull} Extension_6 != 0;
    assume Extension_6 > 0;
    havoc Tmp_241;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} Tmp_241 == 2;
    dataSize := 7;
    goto L15;

  anon15_Then:
    assume {:partition} Tmp_241 != 2;
    dataSize := 8;
    goto L15;

  anon11_Then:
    dataSize := 5;
    goto L15;
}



procedure {:origName "CyyCleanup"} CyyCleanup(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_243: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCleanup"} CyyCleanup(actual_DeviceObject_3: int, actual_Irp_3: int) returns (Tmp_243: int)
{
  var {:pointer} Tmp_245: int;
  var {:pointer} Tmp_246: int;
  var {:pointer} Tmp_247: int;
  var {:scalar} status_7: int;
  var {:pointer} extension_1: int;
  var {:pointer} DeviceObject_3: int;
  var {:pointer} Irp_3: int;
  var vslice_dummy_var_142: int;
  var vslice_dummy_var_143: int;
  var vslice_dummy_var_144: int;

  anon0:
    DeviceObject_3 := actual_DeviceObject_3;
    Irp_3 := actual_Irp_3;
    call {:si_unique_call 589} Tmp_245 := __HAVOC_malloc(72);
    call {:si_unique_call 590} Tmp_246 := __HAVOC_malloc(72);
    call {:si_unique_call 591} Tmp_247 := __HAVOC_malloc(96);
    assume {:nonnull} DeviceObject_3 != 0;
    assume DeviceObject_3 > 0;
    havoc extension_1;
    call {:si_unique_call 592} sdv_do_paged_code_check();
    call {:si_unique_call 593} status_7 := CyyIRPPrologue(Irp_3, extension_1);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_7 != 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} status_7 == -1073741738;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    havoc status_7;
    goto L18;

  L18:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_7 != 259;
    Tmp_246 := strConst__li2bpl3;
    call {:si_unique_call 594} vslice_dummy_var_142 := CyyDbgPrintEx(9, Tmp_246);
    call {:si_unique_call 595} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 596} CyyIRPEpilogue(extension_1);
    goto L21;

  L21:
    Tmp_243 := status_7;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} status_7 == 259;
    goto L21;

  anon8_Then:
    assume {:partition} status_7 != -1073741738;
    goto L18;

  anon7_Then:
    assume {:partition} status_7 == 0;
    Tmp_247 := strConst__li2bpl6;
    call {:si_unique_call 597} vslice_dummy_var_143 := CyyDbgPrintEx(9, Tmp_247);
    call {:si_unique_call 598} CyyKillPendingIrps(DeviceObject_3);
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    assume {:nonnull} Irp_3 != 0;
    assume Irp_3 > 0;
    Tmp_245 := strConst__li2bpl3;
    call {:si_unique_call 599} vslice_dummy_var_144 := CyyDbgPrintEx(9, Tmp_245);
    call {:si_unique_call 600} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 601} CyyIRPEpilogue(extension_1);
    Tmp_243 := 0;
    goto L1;
}



procedure {:origName "CyyClose"} CyyClose(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_248: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyClose"} CyyClose(actual_DeviceObject_4: int, actual_Irp_4: int) returns (Tmp_248: int)
{
  var {:pointer} structPtr888sdv: int;
  var {:scalar} i: int;
  var {:pointer} Tmp_249: int;
  var {:pointer} Tmp_250: int;
  var {:pointer} Tmp_251: int;
  var {:scalar} sdv_238: int;
  var {:pointer} Tmp_252: int;
  var {:scalar} charTime_1: int;
  var {:pointer} chip_1: int;
  var {:scalar} pendingDPCs: int;
  var {:scalar} tenCharDelay: int;
  var {:pointer} Tmp_255: int;
  var {:pointer} Tmp_256: int;
  var {:pointer} Tmp_257: int;
  var {:pointer} Tmp_258: int;
  var {:pointer} Tmp_259: int;
  var {:scalar} status_8: int;
  var {:pointer} extension_2: int;
  var {:pointer} Tmp_260: int;
  var {:scalar} sdv: int;
  var {:pointer} Tmp_261: int;
  var {:pointer} DeviceObject_4: int;
  var {:pointer} Irp_4: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;

  anon0:
    call {:si_unique_call 602} charTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 603} tenCharDelay := __HAVOC_malloc(20);
    call {:si_unique_call 604} sdv := __HAVOC_malloc(20);
    DeviceObject_4 := actual_DeviceObject_4;
    Irp_4 := actual_Irp_4;
    call {:si_unique_call 605} Tmp_249 := __HAVOC_malloc(124);
    call {:si_unique_call 606} Tmp_250 := __HAVOC_malloc(92);
    call {:si_unique_call 607} Tmp_252 := __HAVOC_malloc(80);
    call {:si_unique_call 608} Tmp_255 := __HAVOC_malloc(128);
    call {:si_unique_call 609} Tmp_256 := __HAVOC_malloc(96);
    call {:si_unique_call 610} Tmp_257 := __HAVOC_malloc(52);
    call {:si_unique_call 611} Tmp_258 := __HAVOC_malloc(72);
    call {:si_unique_call 612} Tmp_259 := __HAVOC_malloc(72);
    call {:si_unique_call 613} Tmp_260 := __HAVOC_malloc(76);
    call {:si_unique_call 614} Tmp_261 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_4 != 0;
    assume DeviceObject_4 > 0;
    havoc extension_2;
    call {:si_unique_call 615} ExAcquireFastMutex(0);
    call {:si_unique_call 616} status_8 := CyyIRPPrologue(Irp_4, extension_2);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} status_8 != 0;
    Tmp_249 := strConst__li2bpl57;
    call {:si_unique_call 617} vslice_dummy_var_154 := CyyDbgPrintEx(3, Tmp_249);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_8 == -1073741738;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 618} sdv_ExFreePool(0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    havoc status_8;
    goto L25;

  L25:
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_8 != 259;
    Tmp_258 := strConst__li2bpl3;
    call {:si_unique_call 619} vslice_dummy_var_155 := CyyDbgPrintEx(9, Tmp_258);
    call {:si_unique_call 620} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 621} CyyIRPEpilogue(extension_2);
    call {:si_unique_call 622} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 623} vslice_dummy_var_156 := sdv_InterlockedDecrement(Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto L33;

  L33:
    call {:si_unique_call 624} ExReleaseFastMutex(0);
    Tmp_248 := status_8;
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} status_8 == 259;
    goto L33;

  anon25_Then:
    assume {:partition} status_8 != -1073741738;
    goto L25;

  anon23_Then:
    assume {:partition} status_8 == 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    Tmp_255 := strConst__li2bpl58;
    call {:si_unique_call 625} vslice_dummy_var_157 := CyyDbgPrintEx(0, Tmp_255);
    Tmp_250 := strConst__li2bpl59;
    call {:si_unique_call 626} vslice_dummy_var_158 := CyyDbgPrintEx(0, Tmp_250);
    call {:si_unique_call 627} ExReleaseFastMutex(0);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Tmp_259 := strConst__li2bpl3;
    call {:si_unique_call 628} vslice_dummy_var_159 := CyyDbgPrintEx(9, Tmp_259);
    call {:si_unique_call 629} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 630} CyyIRPEpilogue(extension_2);
    Tmp_248 := -1073741808;
    goto L1;

  anon24_Then:
    Tmp_256 := strConst__li2bpl6;
    call {:si_unique_call 631} vslice_dummy_var_160 := CyyDbgPrintEx(9, Tmp_256);
    Tmp_257 := strConst__li2bpl60;
    call {:si_unique_call 632} vslice_dummy_var_161 := CyyDbgPrintEx(6, Tmp_257);
    call {:si_unique_call 633} structPtr888sdv := CyyGetCharTime(extension_2);
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} structPtr888sdv != 0;
    assume structPtr888sdv > 0;
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} sdv != 0;
    assume sdv > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    i := 0;
    goto L82;

  L82:
    call {:si_unique_call 634} i, vslice_dummy_var_146 := CyyClose_loop_L82(i, vslice_dummy_var_146);
    goto L82_last;

  L82_last:
    assume {:CounterLoop 12} {:Counter "i"} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} 12 > i;
    call {:si_unique_call 635} vslice_dummy_var_146 := KeDelayExecutionThread(0, 0, 0);
    i := i + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    assume false;
    return;

  anon27_Then:
    assume {:partition} i >= 12;
    call {:si_unique_call 636} vslice_dummy_var_145 := KeSynchronizeExecution(0, li2bplFunctionConstant231, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    havoc chip_1;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 637} CyyCDCmd(extension_2, 33);
    goto L91;

  L91:
    assume {:nonnull} charTime_1 != 0;
    assume charTime_1 > 0;
    assume {:nonnull} tenCharDelay != 0;
    assume tenCharDelay > 0;
    call {:si_unique_call 638} vslice_dummy_var_162 := KeDelayExecutionThread(0, 1, 0);
    call {:si_unique_call 639} vslice_dummy_var_147 := CyyClrDTR(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto L114;

  L114:
    call {:si_unique_call 640} vslice_dummy_var_149 := CyyClose_loop_L114(extension_2, vslice_dummy_var_149);
    goto L114_last;

  L114_last:
    call {:si_unique_call 660} vslice_dummy_var_149 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    call {:si_unique_call 641} vslice_dummy_var_150 := KeSynchronizeExecution(0, li2bplFunctionConstant423, 0);
    goto L111;

  L111:
    call {:si_unique_call 642} vslice_dummy_var_148 := CyyClrRTS(extension_2);
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    call {:si_unique_call 643} sdv_ExFreePool(0);
    goto L126;

  L126:
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 644} vslice_dummy_var_152 := IoCancelIrp(0);
    goto L132;

  L132:
    call {:si_unique_call 645} vslice_dummy_var_151 := CyyGotoPowerState(DeviceObject_4, extension_2, 4);
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    assume {:nonnull} Irp_4 != 0;
    assume Irp_4 > 0;
    Tmp_261 := strConst__li2bpl3;
    call {:si_unique_call 646} vslice_dummy_var_163 := CyyDbgPrintEx(9, Tmp_261);
    call {:si_unique_call 647} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 648} CyyIRPEpilogue(extension_2);
    call {:si_unique_call 649} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 650} sdv_238 := sdv_InterlockedDecrement(Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    pendingDPCs := sdv_238;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} pendingDPCs != 0;
    Tmp_252 := strConst__li2bpl62;
    call {:si_unique_call 651} vslice_dummy_var_164 := CyyDbgPrintEx(4, Tmp_252);
    call {:si_unique_call 652} vslice_dummy_var_153 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L154;

  L154:
    Tmp_260 := strConst__li2bpl61;
    call {:si_unique_call 653} vslice_dummy_var_165 := CyyDbgPrintEx(4, Tmp_260);
    call {:si_unique_call 654} ExReleaseFastMutex(0);
    call {:si_unique_call 655} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 656} vslice_dummy_var_166 := sdv_InterlockedIncrement(Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 657} Tmp_251 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 658} vslice_dummy_var_167 := sdv_InterlockedDecrement(Tmp_251);
    assume {:nonnull} Tmp_251 != 0;
    assume Tmp_251 > 0;
    assume {:nonnull} extension_2 != 0;
    assume extension_2 > 0;
    call {:si_unique_call 659} MmUnlockPagableImageSection(0);
    Tmp_248 := 0;
    goto L1;

  anon33_Then:
    assume {:partition} pendingDPCs == 0;
    goto L154;

  anon32_Then:
    goto L132;

  anon31_Then:
    goto L126;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon29_Then:
    goto L111;

  anon28_Then:
    goto L91;
}



procedure {:origName "CyyGetPortInfo"} CyyGetPortInfo(actual_PDevObj_9: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_262: int);
  modifies alloc;
  free ensures Tmp_262 == -1073741670 || Tmp_262 == 0 || Tmp_262 == -1073741811 || Tmp_262 == -1073741808 || Tmp_262 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetPortInfo"} CyyGetPortInfo(actual_PDevObj_9: int, actual_PResList: int, actual_PTrResList: int, actual_PConfig_1: int) returns (Tmp_262: int)
{
  var {:scalar} i_1: int;
  var {:pointer} pPartialResourceList: int;
  var {:pointer} pFullTrResourceDesc: int;
  var {:pointer} Tmp_263: int;
  var {:scalar} count: int;
  var {:pointer} Tmp_264: int;
  var {:pointer} Tmp_265: int;
  var {:scalar} Tmp_266: int;
  var {:pointer} Tmp_267: int;
  var {:scalar} Tmp_268: int;
  var {:pointer} keyHandle: int;
  var {:scalar} Tmp_269: int;
  var {:pointer} Tmp_270: int;
  var {:scalar} Tmp_271: int;
  var {:pointer} Tmp_272: int;
  var {:pointer} pPartialTrResourceDesc: int;
  var {:scalar} Tmp_273: int;
  var {:scalar} Tmp_274: int;
  var {:pointer} pDevExt_7: int;
  var {:pointer} Tmp_275: int;
  var {:scalar} Tmp_276: int;
  var {:pointer} Tmp_277: int;
  var {:pointer} Tmp_278: int;
  var {:pointer} Tmp_279: int;
  var {:scalar} Tmp_280: int;
  var {:scalar} Tmp_281: int;
  var {:pointer} Tmp_282: int;
  var {:scalar} Tmp_283: int;
  var {:scalar} Tmp_284: int;
  var {:scalar} foundIt: int;
  var {:pointer} Tmp_285: int;
  var {:pointer} Tmp_286: int;
  var {:scalar} Tmp_287: int;
  var {:pointer} pFullResourceDesc: int;
  var {:pointer} Tmp_288: int;
  var {:scalar} Tmp_289: int;
  var {:pointer} Tmp_290: int;
  var {:pointer} Tmp_291: int;
  var {:scalar} Tmp_292: int;
  var {:scalar} Tmp_293: int;
  var {:scalar} Tmp_294: int;
  var {:pointer} Tmp_295: int;
  var {:pointer} Tmp_297: int;
  var {:pointer} Tmp_298: int;
  var {:scalar} status_9: int;
  var {:pointer} Tmp_299: int;
  var {:pointer} Tmp_300: int;
  var {:pointer} Tmp_301: int;
  var {:pointer} pPartialTrResourceList: int;
  var {:scalar} Tmp_302: int;
  var {:pointer} Tmp_303: int;
  var {:pointer} Tmp_304: int;
  var {:pointer} pPartialResourceDesc: int;
  var {:pointer} Tmp_305: int;
  var {:pointer} PDevObj_9: int;
  var {:pointer} PResList: int;
  var {:pointer} PTrResList: int;
  var {:pointer} PConfig_1: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;
  var vslice_dummy_var_172: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_145: int;
  var vslice_dummy_var_146: int;
  var vslice_dummy_var_147: int;
  var vslice_dummy_var_148: int;
  var vslice_dummy_var_149: int;
  var vslice_dummy_var_150: int;
  var vslice_dummy_var_151: int;
  var vslice_dummy_var_152: int;
  var vslice_dummy_var_153: int;
  var vslice_dummy_var_154: int;
  var vslice_dummy_var_155: int;
  var vslice_dummy_var_156: int;
  var vslice_dummy_var_157: int;
  var vslice_dummy_var_158: int;
  var vslice_dummy_var_159: int;
  var vslice_dummy_var_160: int;
  var vslice_dummy_var_161: int;
  var vslice_dummy_var_162: int;
  var vslice_dummy_var_163: int;

  anon0:
    call {:si_unique_call 661} Tmp_268 := __HAVOC_malloc(20);
    call {:si_unique_call 662} Tmp_280 := __HAVOC_malloc(20);
    call {:si_unique_call 663} Tmp_283 := __HAVOC_malloc(20);
    call {:si_unique_call 664} Tmp_293 := __HAVOC_malloc(20);
    call {:si_unique_call 665} Tmp_294 := __HAVOC_malloc(20);
    call {:si_unique_call 666} Tmp_302 := __HAVOC_malloc(20);
    PDevObj_9 := actual_PDevObj_9;
    PResList := actual_PResList;
    PTrResList := actual_PTrResList;
    PConfig_1 := actual_PConfig_1;
    call {:si_unique_call 667} Tmp_263 := __HAVOC_malloc(88);
    call {:si_unique_call 668} Tmp_264 := __HAVOC_malloc(28);
    call {:si_unique_call 669} Tmp_265 := __HAVOC_malloc(96);
    call {:si_unique_call 670} Tmp_267 := __HAVOC_malloc(264);
    call {:si_unique_call 671} Tmp_270 := __HAVOC_malloc(120);
    call {:si_unique_call 672} Tmp_272 := __HAVOC_malloc(92);
    call {:si_unique_call 673} Tmp_275 := __HAVOC_malloc(112);
    call {:si_unique_call 674} Tmp_277 := __HAVOC_malloc(80);
    call {:si_unique_call 675} Tmp_278 := __HAVOC_malloc(108);
    call {:si_unique_call 676} Tmp_279 := __HAVOC_malloc(40);
    call {:si_unique_call 677} Tmp_282 := __HAVOC_malloc(96);
    call {:si_unique_call 678} Tmp_285 := __HAVOC_malloc(96);
    call {:si_unique_call 679} Tmp_286 := __HAVOC_malloc(100);
    call {:si_unique_call 680} Tmp_288 := __HAVOC_malloc(264);
    call {:si_unique_call 681} Tmp_290 := __HAVOC_malloc(68);
    call {:si_unique_call 682} Tmp_291 := __HAVOC_malloc(104);
    call {:si_unique_call 683} Tmp_295 := __HAVOC_malloc(28);
    call {:si_unique_call 684} Tmp_297 := __HAVOC_malloc(112);
    call {:si_unique_call 685} Tmp_298 := __HAVOC_malloc(92);
    call {:si_unique_call 686} Tmp_299 := __HAVOC_malloc(104);
    call {:si_unique_call 687} Tmp_300 := __HAVOC_malloc(96);
    call {:si_unique_call 688} Tmp_301 := __HAVOC_malloc(152);
    call {:si_unique_call 689} Tmp_303 := __HAVOC_malloc(84);
    call {:si_unique_call 690} Tmp_304 := __HAVOC_malloc(232);
    call {:si_unique_call 691} Tmp_305 := __HAVOC_malloc(100);
    assume {:nonnull} PDevObj_9 != 0;
    assume PDevObj_9 > 0;
    havoc pDevExt_7;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    status_9 := -1073741822;
    pFullResourceDesc := 0;
    pFullTrResourceDesc := 0;
    call {:si_unique_call 692} sdv_do_paged_code_check();
    Tmp_305 := strConst__li2bpl63;
    call {:si_unique_call 693} vslice_dummy_var_170 := CyyDbgPrintEx(11, Tmp_305);
    Tmp_300 := strConst__li2bpl64;
    call {:si_unique_call 694} vslice_dummy_var_171 := CyyDbgPrintEx(12, Tmp_300);
    Tmp_278 := strConst__li2bpl65;
    call {:si_unique_call 695} vslice_dummy_var_172 := CyyDbgPrintEx(12, Tmp_278);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} PResList != 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} PTrResList != 0;
    assume {:nonnull} PResList != 0;
    assume PResList > 0;
    havoc Tmp_267;
    pFullResourceDesc := Tmp_267;
    assume {:nonnull} PTrResList != 0;
    assume PTrResList > 0;
    havoc Tmp_288;
    pFullTrResourceDesc := Tmp_288;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume {:partition} pFullResourceDesc != 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    pPartialResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullResourceDesc);
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc pPartialResourceDesc;
    assume {:nonnull} pPartialResourceList != 0;
    assume pPartialResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullResourceDesc != 0;
    assume pFullResourceDesc > 0;
    i_1 := 0;
    goto L52;

  L52:
    call {:si_unique_call 696} i_1 := CyyGetPortInfo_loop_L52(i_1, count, pPartialResourceDesc, PConfig_1);
    goto L52_last;

  L52_last:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L62;

  L62:
    i_1 := i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    assume false;
    return;

  anon66_Then:
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon52_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto L62;

  anon51_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    assume {:nonnull} pPartialResourceDesc != 0;
    assume pPartialResourceDesc > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L62;

  anon69_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L62;

  anon50_Then:
    assume {:partition} i_1 >= count;
    goto L45;

  L45:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} pFullTrResourceDesc != 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    pPartialTrResourceList := PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(pFullTrResourceDesc);
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc pPartialTrResourceDesc;
    assume {:nonnull} pPartialTrResourceList != 0;
    assume pPartialTrResourceList > 0;
    havoc count;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pFullTrResourceDesc != 0;
    assume pFullTrResourceDesc > 0;
    i_1 := 0;
    goto L79;

  L79:
    call {:si_unique_call 697} i_1 := CyyGetPortInfo_loop_L79(i_1, count, pPartialTrResourceDesc, PConfig_1);
    goto L79_last;

  L79_last:
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} count > i_1;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L88;

  L88:
    i_1 := i_1 + 1;
    goto L88_dummy;

  L88_dummy:
    assume false;
    return;

  anon67_Then:
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon55_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon54_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pPartialTrResourceDesc != 0;
    assume pPartialTrResourceDesc > 0;
    goto L88;

  anon53_Then:
    assume {:partition} i_1 >= count;
    goto L72;

  L72:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 698} status_9 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} status_9 >= 0;
    Tmp_295 := strConst__li2bpl67;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 699} status_9 := CyyGetRegistryKeyValue(keyHandle, Tmp_295, 14, RxFIFO__CONFIG_DATA(PConfig_1), 4);
    Tmp_264 := strConst__li2bpl68;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 700} status_9 := CyyGetRegistryKeyValue(keyHandle, Tmp_264, 14, TxFIFO__CONFIG_DATA(PConfig_1), 4);
    Tmp_279 := strConst__li2bpl69;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    call {:si_unique_call 701} status_9 := CyyGetRegistryKeyValue(keyHandle, Tmp_279, 20, PortIndex__CONFIG_DATA(PConfig_1), 4);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} status_9 >= 0;
    goto L118;

  L118:
    call {:si_unique_call 702} vslice_dummy_var_168 := ZwClose(0);
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    goto L123;

  L123:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_281;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} Tmp_280 != 0;
    assume Tmp_280 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_145;
    havoc vslice_dummy_var_146;
    havoc vslice_dummy_var_147;
    havoc vslice_dummy_var_148;
    call {:si_unique_call 703} CyyLogError(vslice_dummy_var_145, 0, vslice_dummy_var_146, Tmp_280, 0, 0, 0, vslice_dummy_var_147, 0, -1073475563, Tmp_281, vslice_dummy_var_148, 0, 0);
    Tmp_286 := strConst__li2bpl70;
    call {:si_unique_call 704} vslice_dummy_var_173 := CyyDbgPrintEx(14, Tmp_286);
    status_9 := -1073741670;
    goto L139;

  L139:
    Tmp_262 := status_9;
    goto L1;

  L1:
    return;

  anon62_Then:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_292;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_289;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} Tmp_294 != 0;
    assume Tmp_294 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_149;
    havoc vslice_dummy_var_150;
    havoc vslice_dummy_var_151;
    call {:si_unique_call 705} CyyLogError(vslice_dummy_var_149, 0, vslice_dummy_var_150, Tmp_294, 0, 0, 0, Tmp_289, 0, -1073475562, Tmp_292, vslice_dummy_var_151, 0, 0);
    Tmp_303 := strConst__li2bpl71;
    call {:si_unique_call 706} vslice_dummy_var_174 := CyyDbgPrintEx(14, Tmp_303);
    status_9 := -1073741670;
    goto L139;

  anon64_Then:
    call {:si_unique_call 707} vslice_dummy_var_169 := IoQueryDeviceDescription(0, 0, 0, 0, 0, 0, li2bplFunctionConstant236, 0);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} foundIt == 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_266;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_284;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} Tmp_293 != 0;
    assume Tmp_293 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_152;
    havoc vslice_dummy_var_153;
    havoc vslice_dummy_var_154;
    call {:si_unique_call 708} CyyLogError(vslice_dummy_var_152, 0, vslice_dummy_var_153, Tmp_293, 0, 0, 0, Tmp_284, 0, -1073475561, Tmp_266, vslice_dummy_var_154, 0, 0);
    Tmp_304 := strConst__li2bpl72;
    call {:si_unique_call 709} vslice_dummy_var_185 := CyyDbgPrintEx(14, Tmp_304);
    status_9 := -1073741670;
    goto L139;

  anon65_Then:
    assume {:partition} foundIt != 0;
    goto L140;

  L140:
    status_9 := 0;
    Tmp_275 := strConst__li2bpl85;
    call {:si_unique_call 710} vslice_dummy_var_175 := CyyDbgPrintEx(4, Tmp_275);
    Tmp_291 := strConst__li2bpl73;
    call {:si_unique_call 711} vslice_dummy_var_176 := CyyDbgPrintEx(4, Tmp_291);
    Tmp_277 := strConst__li2bpl74;
    call {:si_unique_call 712} vslice_dummy_var_177 := CyyDbgPrintEx(4, Tmp_277);
    Tmp_285 := strConst__li2bpl75;
    call {:si_unique_call 713} vslice_dummy_var_178 := CyyDbgPrintEx(4, Tmp_285);
    Tmp_270 := strConst__li2bpl76;
    call {:si_unique_call 714} vslice_dummy_var_179 := CyyDbgPrintEx(4, Tmp_270);
    Tmp_297 := strConst__li2bpl77;
    call {:si_unique_call 715} vslice_dummy_var_180 := CyyDbgPrintEx(4, Tmp_297);
    Tmp_272 := strConst__li2bpl78;
    call {:si_unique_call 716} vslice_dummy_var_181 := CyyDbgPrintEx(4, Tmp_272);
    Tmp_298 := strConst__li2bpl79;
    call {:si_unique_call 717} vslice_dummy_var_182 := CyyDbgPrintEx(4, Tmp_298);
    Tmp_282 := strConst__li2bpl80;
    call {:si_unique_call 718} vslice_dummy_var_183 := CyyDbgPrintEx(4, Tmp_282);
    Tmp_263 := strConst__li2bpl81;
    call {:si_unique_call 719} vslice_dummy_var_184 := CyyDbgPrintEx(4, Tmp_263);
    goto L139;

  anon63_Then:
    goto L140;

  anon61_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_269;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_287;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} Tmp_268 != 0;
    assume Tmp_268 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_155;
    havoc vslice_dummy_var_156;
    havoc vslice_dummy_var_157;
    call {:si_unique_call 720} CyyLogError(vslice_dummy_var_155, 0, vslice_dummy_var_156, Tmp_268, 0, 0, 0, Tmp_287, 0, -1073475566, Tmp_269, vslice_dummy_var_157, 0, 0);
    Tmp_290 := strConst__li2bpl82;
    call {:si_unique_call 721} vslice_dummy_var_186 := CyyDbgPrintEx(14, Tmp_290);
    status_9 := -1073741670;
    goto L139;

  anon60_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_271;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_273;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} Tmp_302 != 0;
    assume Tmp_302 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_9 != 0;
    assume PDevObj_9 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_158;
    havoc vslice_dummy_var_159;
    havoc vslice_dummy_var_160;
    call {:si_unique_call 722} CyyLogError(vslice_dummy_var_158, 0, vslice_dummy_var_159, Tmp_302, 0, 0, 0, Tmp_273, 0, -1073475567, Tmp_271, vslice_dummy_var_160, 0, 0);
    Tmp_265 := strConst__li2bpl83;
    call {:si_unique_call 723} vslice_dummy_var_187 := CyyDbgPrintEx(14, Tmp_265);
    status_9 := -1073741670;
    goto L139;

  anon58_Then:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc Tmp_274;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    havoc Tmp_276;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} Tmp_283 != 0;
    assume Tmp_283 > 0;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    assume {:nonnull} PDevObj_9 != 0;
    assume PDevObj_9 > 0;
    assume {:nonnull} pDevExt_7 != 0;
    assume pDevExt_7 > 0;
    havoc vslice_dummy_var_161;
    havoc vslice_dummy_var_162;
    havoc vslice_dummy_var_163;
    call {:si_unique_call 724} CyyLogError(vslice_dummy_var_161, 0, vslice_dummy_var_162, Tmp_283, 0, 0, 0, Tmp_276, 0, -1073475568, Tmp_274, vslice_dummy_var_163, 0, 0);
    Tmp_299 := strConst__li2bpl84;
    call {:si_unique_call 725} vslice_dummy_var_188 := CyyDbgPrintEx(14, Tmp_299);
    status_9 := -1073741670;
    goto L139;

  anon59_Then:
    goto L123;

  anon57_Then:
    assume {:partition} 0 > status_9;
    assume {:nonnull} PConfig_1 != 0;
    assume PConfig_1 > 0;
    goto L118;

  anon56_Then:
    assume {:partition} 0 > status_9;
    Tmp_301 := strConst__li2bpl66;
    call {:si_unique_call 726} vslice_dummy_var_189 := CyyDbgPrintEx(14, Tmp_301);
    goto L139;

  anon49_Then:
    assume {:partition} pFullTrResourceDesc == 0;
    goto L72;

  anon68_Then:
    assume {:partition} pFullResourceDesc == 0;
    goto L45;

  anon48_Then:
    assume {:partition} PTrResList == 0;
    goto L40;

  L40:
    Tmp_262 := -1073741670;
    goto L1;

  anon47_Then:
    assume {:partition} PResList == 0;
    goto L40;
}



procedure {:origName "CyyDoExternalNaming"} CyyDoExternalNaming(actual_PDevExt_4: int, actual_PDrvObj: int) returns (Tmp_306: int);
  modifies alloc;
  free ensures Tmp_306 == -1073741811 || Tmp_306 == -1073741808 || Tmp_306 == -1073741823 || Tmp_306 == 0 || Tmp_306 == 5 || Tmp_306 == -1073741789 || Tmp_306 == -1073741670 || Tmp_306 == -1073741772 || Tmp_306 == -1073741824;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyDoExternalNaming"} CyyDoExternalNaming(actual_PDevExt_4: int, actual_PDrvObj: int) returns (Tmp_306: int)
{
  var {:pointer} Tmp_307: int;
  var {:scalar} Tmp_308: int;
  var {:pointer} Tmp_309: int;
  var {:scalar} Tmp_310: int;
  var {:scalar} Tmp_311: int;
  var {:scalar} bufLen: int;
  var {:scalar} Tmp_313: int;
  var {:pointer} Tmp_315: int;
  var {:scalar} Tmp_317: int;
  var {:scalar} linkName: int;
  var {:scalar} Tmp_319: int;
  var {:pointer} keyHandle_1: int;
  var {:pointer} Tmp_321: int;
  var {:scalar} Tmp_323: int;
  var {:scalar} Tmp_324: int;
  var {:pointer} Tmp_325: int;
  var {:pointer} Tmp_327: int;
  var {:scalar} Tmp_328: int;
  var {:pointer} sdv_300: int;
  var {:pointer} pRegName: int;
  var {:pointer} Tmp_330: int;
  var {:pointer} Tmp_331: int;
  var {:scalar} Tmp_334: int;
  var {:pointer} Tmp_335: int;
  var {:scalar} Tmp_336: int;
  var {:scalar} Tmp_337: int;
  var {:scalar} sdv_304: int;
  var {:scalar} Tmp_338: int;
  var {:scalar} Tmp_339: int;
  var {:pointer} Tmp_340: int;
  var {:scalar} Tmp_341: int;
  var {:scalar} Tmp_342: int;
  var {:scalar} Tmp_343: int;
  var {:scalar} Tmp_344: int;
  var {:pointer} sdv_311: int;
  var {:pointer} sdv_312: int;
  var {:scalar} Tmp_346: int;
  var {:pointer} Tmp_348: int;
  var {:scalar} Tmp_349: int;
  var {:pointer} Tmp_350: int;
  var {:pointer} Tmp_351: int;
  var {:scalar} Tmp_352: int;
  var {:scalar} Tmp_353: int;
  var {:pointer} Tmp_354: int;
  var {:pointer} Tmp_355: int;
  var {:scalar} status_10: int;
  var {:pointer} sdv_321: int;
  var {:pointer} pDevObj: int;
  var {:scalar} Tmp_357: int;
  var {:scalar} Tmp_358: int;
  var {:pointer} sdv_323: int;
  var {:pointer} PDevExt_4: int;
  var {:pointer} PDrvObj: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;
  var vslice_dummy_var_192: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;
  var vslice_dummy_var_197: int;
  var vslice_dummy_var_198: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;
  var vslice_dummy_var_206: int;
  var vslice_dummy_var_207: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;
  var vslice_dummy_var_212: int;
  var vslice_dummy_var_213: int;
  var vslice_dummy_var_214: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_164: int;
  var vslice_dummy_var_165: int;

  anon0:
    call {:si_unique_call 727} linkName := __HAVOC_malloc(12);
    call {:si_unique_call 728} Tmp_319 := __HAVOC_malloc(20);
    call {:si_unique_call 729} Tmp_323 := __HAVOC_malloc(20);
    call {:si_unique_call 730} Tmp_324 := __HAVOC_malloc(20);
    call {:si_unique_call 731} Tmp_328 := __HAVOC_malloc(20);
    call {:si_unique_call 732} Tmp_334 := __HAVOC_malloc(20);
    call {:si_unique_call 733} Tmp_336 := __HAVOC_malloc(20);
    call {:si_unique_call 734} Tmp_337 := __HAVOC_malloc(20);
    call {:si_unique_call 735} Tmp_339 := __HAVOC_malloc(20);
    call {:si_unique_call 736} Tmp_341 := __HAVOC_malloc(20);
    call {:si_unique_call 737} Tmp_342 := __HAVOC_malloc(20);
    call {:si_unique_call 738} Tmp_343 := __HAVOC_malloc(20);
    call {:si_unique_call 739} Tmp_344 := __HAVOC_malloc(20);
    call {:si_unique_call 740} Tmp_353 := __HAVOC_malloc(20);
    call {:si_unique_call 741} Tmp_358 := __HAVOC_malloc(20);
    PDevExt_4 := actual_PDevExt_4;
    PDrvObj := actual_PDrvObj;
    call {:si_unique_call 742} Tmp_307 := __HAVOC_malloc(148);
    call {:si_unique_call 743} vslice_dummy_var_198 := __HAVOC_malloc(44);
    call {:si_unique_call 744} Tmp_315 := __HAVOC_malloc(156);
    call {:si_unique_call 745} vslice_dummy_var_199 := __HAVOC_malloc(44);
    call {:si_unique_call 746} vslice_dummy_var_200 := __HAVOC_malloc(8);
    call {:si_unique_call 747} Tmp_321 := __HAVOC_malloc(196);
    call {:si_unique_call 748} Tmp_325 := __HAVOC_malloc(164);
    call {:si_unique_call 749} Tmp_327 := __HAVOC_malloc(168);
    call {:si_unique_call 750} Tmp_330 := __HAVOC_malloc(192);
    call {:si_unique_call 751} Tmp_331 := __HAVOC_malloc(36);
    call {:si_unique_call 752} vslice_dummy_var_201 := __HAVOC_malloc(44);
    call {:si_unique_call 753} Tmp_335 := __HAVOC_malloc(200);
    call {:si_unique_call 754} Tmp_340 := __HAVOC_malloc(44);
    call {:si_unique_call 755} vslice_dummy_var_202 := __HAVOC_malloc(8);
    call {:si_unique_call 756} Tmp_348 := __HAVOC_malloc(88);
    call {:si_unique_call 757} Tmp_350 := __HAVOC_malloc(156);
    call {:si_unique_call 758} Tmp_351 := __HAVOC_malloc(64);
    call {:si_unique_call 759} Tmp_354 := __HAVOC_malloc(180);
    call {:si_unique_call 760} Tmp_355 := __HAVOC_malloc(236);
    status_10 := 0;
    pRegName := 0;
    call {:si_unique_call 761} sdv_do_paged_code_check();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc pDevObj;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 762} status_10 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} status_10 != 0;
    Tmp_306 := status_10;
    goto L1;

  L1:
    return;

  anon45_Then:
    assume {:partition} status_10 == 0;
    Tmp_348 := strConst__li2bpl86;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 763} vslice_dummy_var_203 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_348, 44, SkipNaming__CYY_DEVICE_EXTENSION(PDevExt_4), 4);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    call {:si_unique_call 764} vslice_dummy_var_190 := ZwClose(0);
    Tmp_306 := 0;
    goto L1;

  anon46_Then:
    call {:si_unique_call 765} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_338;
    call {:si_unique_call 766} sdv_311 := ExAllocatePoolWithTag(1, Tmp_338, -797345469);
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    havoc Tmp_311;
    call {:si_unique_call 767} sdv_RtlZeroMemory(0, Tmp_311);
    call {:si_unique_call 768} sdv_312 := ExAllocatePoolWithTag(1, 258, -797345469);
    pRegName := sdv_312;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} pRegName != 0;
    Tmp_331 := strConst__li2bpl87;
    call {:si_unique_call 769} status_10 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_331, 18, pRegName, 256);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} status_10 >= 0;
    goto L60;

  L60:
    call {:si_unique_call 770} vslice_dummy_var_191 := ZwClose(0);
    bufLen := sdv_304 * 2 + 2;
    call {:si_unique_call 771} sdv_323 := ExAllocatePoolWithTag(1, bufLen, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    call {:si_unique_call 772} sdv_RtlZeroMemory(0, bufLen);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 773} vslice_dummy_var_204 := corral_nondet();
    call {:si_unique_call 774} vslice_dummy_var_205 := corral_nondet();
    call {:si_unique_call 775} vslice_dummy_var_206 := corral_nondet();
    call {:si_unique_call 776} vslice_dummy_var_207 := corral_nondet();
    call {:si_unique_call 777} vslice_dummy_var_192 := corral_nondet();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_352;
    call {:si_unique_call 778} sdv_321 := ExAllocatePoolWithTag(1, Tmp_352, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_317;
    call {:si_unique_call 779} sdv_RtlZeroMemory(0, Tmp_317);
    call {:si_unique_call 780} vslice_dummy_var_193 := corral_nondet();
    call {:si_unique_call 781} sdv_300 := ExAllocatePoolWithTag(1, 66, -797345469);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_357;
    call {:si_unique_call 782} sdv_RtlZeroMemory(0, Tmp_357);
    call {:si_unique_call 783} vslice_dummy_var_194 := corral_nondet();
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_309;
    call {:si_unique_call 784} sdv_RtlZeroMemory(0, 2);
    Tmp_351 := strConst__li2bpl91;
    call {:si_unique_call 785} vslice_dummy_var_208 := CyyDbgPrintEx(4, Tmp_351);
    call {:si_unique_call 786} status_10 := IoCreateSymbolicLink(0, 0);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} status_10 >= 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_346;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 787} status_10 := RtlWriteRegistryValue(4, 0, 0, 1, 0, Tmp_346);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} status_10 >= 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 788} status_10 := IoRegisterDeviceInterface(0, 0, 0, DeviceClassSymbolicName__CYY_DEVICE_EXTENSION(PDevExt_4));
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} status_10 >= 0;
    call {:si_unique_call 789} status_10 := IoSetDeviceInterfaceState(0, 1);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} status_10 >= 0;
    goto L162;

  L162:
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} status_10 >= 0;
    goto L164;

  L164:
    assume {:nonnull} linkName != 0;
    assume linkName > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    call {:si_unique_call 790} sdv_ExFreePool(0);
    goto L165;

  L165:
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} pRegName != 0;
    call {:si_unique_call 791} sdv_ExFreePool(0);
    goto L169;

  L169:
    Tmp_306 := status_10;
    goto L1;

  anon55_Then:
    assume {:partition} pRegName == 0;
    goto L169;

  anon54_Then:
    goto L165;

  anon52_Then:
    assume {:partition} 0 > status_10;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 792} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L173;

  L173:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    call {:si_unique_call 793} vslice_dummy_var_195 := IoDeleteSymbolicLink(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L178;

  L178:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 794} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L183;

  L183:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 795} vslice_dummy_var_209 := RtlDeleteRegistryValue(4, 0, 0);
    goto L188;

  L188:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    call {:si_unique_call 796} vslice_dummy_var_196 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 797} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L192;

  L192:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    call {:si_unique_call 798} sdv_ExFreePool(0);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L164;

  anon60_Then:
    goto L164;

  anon59_Then:
    goto L192;

  anon58_Then:
    goto L188;

  anon57_Then:
    goto L183;

  anon56_Then:
    goto L178;

  anon53_Then:
    goto L173;

  anon51_Then:
    assume {:partition} 0 > status_10;
    Tmp_354 := strConst__li2bpl93;
    call {:si_unique_call 799} vslice_dummy_var_210 := CyyDbgPrintEx(14, Tmp_354);
    goto L162;

  anon50_Then:
    assume {:partition} 0 > status_10;
    Tmp_335 := strConst__li2bpl92;
    call {:si_unique_call 800} vslice_dummy_var_211 := CyyDbgPrintEx(14, Tmp_335);
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    goto L162;

  anon49_Then:
    assume {:partition} 0 > status_10;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_349;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_310;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_324 != 0;
    assume Tmp_324 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} Tmp_341 != 0;
    assume Tmp_341 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc vslice_dummy_var_164;
    call {:si_unique_call 801} CyyLogError(PDrvObj, pDevObj, Tmp_341, Tmp_324, 0, 0, 0, Tmp_310, status_10, 266245, Tmp_349, vslice_dummy_var_164, 0, 0);
    Tmp_355 := strConst__li2bpl95;
    call {:si_unique_call 802} vslice_dummy_var_212 := CyyDbgPrintEx(14, Tmp_355);
    goto L162;

  anon48_Then:
    assume {:partition} 0 > status_10;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_308;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc Tmp_313;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_334 != 0;
    assume Tmp_334 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} Tmp_343 != 0;
    assume Tmp_343 > 0;
    assume {:nonnull} PDevExt_4 != 0;
    assume PDevExt_4 > 0;
    havoc vslice_dummy_var_165;
    call {:si_unique_call 803} CyyLogError(PDrvObj, pDevObj, Tmp_343, Tmp_334, 0, 0, 0, Tmp_313, status_10, 266244, Tmp_308, vslice_dummy_var_165, 0, 0);
    Tmp_330 := strConst__li2bpl96;
    call {:si_unique_call 804} vslice_dummy_var_213 := CyyDbgPrintEx(14, Tmp_330);
    goto L162;

  anon66_Then:
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_319 != 0;
    assume Tmp_319 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    assume {:nonnull} Tmp_323 != 0;
    assume Tmp_323 > 0;
    call {:si_unique_call 805} CyyLogError(PDrvObj, pDevObj, Tmp_323, Tmp_319, 0, 0, 0, 75, 0, -1073475576, 0, 0, 0, 0);
    Tmp_350 := strConst__li2bpl97;
    call {:si_unique_call 806} vslice_dummy_var_214 := CyyDbgPrintEx(14, Tmp_350);
    status_10 := -1073741670;
    goto L162;

  anon65_Then:
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_337 != 0;
    assume Tmp_337 > 0;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    assume {:nonnull} Tmp_342 != 0;
    assume Tmp_342 > 0;
    call {:si_unique_call 807} CyyLogError(PDrvObj, pDevObj, Tmp_342, Tmp_337, 0, 0, 0, 74, 0, -1073475576, 0, 0, 0, 0);
    Tmp_321 := strConst__li2bpl98;
    call {:si_unique_call 808} vslice_dummy_var_215 := CyyDbgPrintEx(14, Tmp_321);
    status_10 := -1073741670;
    goto L162;

  anon64_Then:
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_336 != 0;
    assume Tmp_336 > 0;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    assume {:nonnull} Tmp_344 != 0;
    assume Tmp_344 > 0;
    call {:si_unique_call 809} CyyLogError(PDrvObj, pDevObj, Tmp_344, Tmp_336, 0, 0, 0, 73, 0, -1073475576, 0, 0, 0, 0);
    Tmp_315 := strConst__li2bpl99;
    call {:si_unique_call 810} vslice_dummy_var_216 := CyyDbgPrintEx(14, Tmp_315);
    status_10 := -1073741670;
    goto L162;

  anon47_Then:
    assume {:partition} 0 > status_10;
    Tmp_340 := strConst__li2bpl88;
    call {:si_unique_call 811} status_10 := CyyGetRegistryKeyValue(keyHandle_1, Tmp_340, 22, pRegName, 256);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} status_10 < 0;
    Tmp_325 := strConst__li2bpl100;
    call {:si_unique_call 812} vslice_dummy_var_217 := CyyDbgPrintEx(14, Tmp_325);
    call {:si_unique_call 813} vslice_dummy_var_197 := ZwClose(0);
    goto L162;

  anon61_Then:
    assume {:partition} 0 <= status_10;
    goto L60;

  anon63_Then:
    assume {:partition} pRegName == 0;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_328 != 0;
    assume Tmp_328 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    assume {:nonnull} Tmp_353 != 0;
    assume Tmp_353 > 0;
    call {:si_unique_call 814} CyyLogError(PDrvObj, pDevObj, Tmp_353, Tmp_328, 0, 0, 0, 72, 0, -1073475576, 0, 0, 0, 0);
    Tmp_307 := strConst__li2bpl101;
    call {:si_unique_call 815} vslice_dummy_var_218 := CyyDbgPrintEx(14, Tmp_307);
    status_10 := -1073741670;
    call {:si_unique_call 816} vslice_dummy_var_219 := ZwClose(0);
    goto L162;

  anon62_Then:
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} Tmp_339 != 0;
    assume Tmp_339 > 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    assume {:nonnull} Tmp_358 != 0;
    assume Tmp_358 > 0;
    call {:si_unique_call 817} CyyLogError(PDrvObj, pDevObj, Tmp_358, Tmp_339, 0, 0, 0, 71, 0, -1073475576, 0, 0, 0, 0);
    Tmp_327 := strConst__li2bpl102;
    call {:si_unique_call 818} vslice_dummy_var_220 := CyyDbgPrintEx(14, Tmp_327);
    status_10 := -1073741670;
    call {:si_unique_call 819} vslice_dummy_var_221 := ZwClose(0);
    goto L162;
}



procedure {:origName "CyyReportMaxBaudRate"} CyyReportMaxBaudRate(actual_Bauds: int) returns (Tmp_361: int);
  modifies alloc;
  free ensures Tmp_361 == 131072 || Tmp_361 == 115200 || Tmp_361 == 57344 || Tmp_361 == 57600 || Tmp_361 == 38400 || Tmp_361 == 19200 || Tmp_361 == 14400 || Tmp_361 == 9600 || Tmp_361 == 7200 || Tmp_361 == 4800 || Tmp_361 == 2400 || Tmp_361 == 1800 || Tmp_361 == 1200 || Tmp_361 == 600 || Tmp_361 == 300 || Tmp_361 == 150 || Tmp_361 == 135 || Tmp_361 == 110 || Tmp_361 == 75 || Tmp_361 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyReportMaxBaudRate"} CyyReportMaxBaudRate(actual_Bauds: int) returns (Tmp_361: int)
{
  var {:scalar} Bauds: int;

  anon0:
    Bauds := actual_Bauds;
    call {:si_unique_call 820} sdv_do_paged_code_check();
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} BAND(Bauds, 65536) != 0;
    Tmp_361 := 131072;
    goto L1;

  L1:
    return;

  anon39_Then:
    assume {:partition} BAND(Bauds, 65536) == 0;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} BAND(Bauds, 131072) != 0;
    Tmp_361 := 115200;
    goto L1;

  anon40_Then:
    assume {:partition} BAND(Bauds, 131072) == 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} BAND(Bauds, 32768) != 0;
    Tmp_361 := 57344;
    goto L1;

  anon41_Then:
    assume {:partition} BAND(Bauds, 32768) == 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} BAND(Bauds, 262144) != 0;
    Tmp_361 := 57600;
    goto L1;

  anon42_Then:
    assume {:partition} BAND(Bauds, 262144) == 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} BAND(Bauds, 16384) != 0;
    Tmp_361 := 38400;
    goto L1;

  anon43_Then:
    assume {:partition} BAND(Bauds, 16384) == 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} BAND(Bauds, 8192) != 0;
    Tmp_361 := 19200;
    goto L1;

  anon44_Then:
    assume {:partition} BAND(Bauds, 8192) == 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} BAND(Bauds, 4096) != 0;
    Tmp_361 := 14400;
    goto L1;

  anon45_Then:
    assume {:partition} BAND(Bauds, 4096) == 0;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} BAND(Bauds, 2048) != 0;
    Tmp_361 := 9600;
    goto L1;

  anon46_Then:
    assume {:partition} BAND(Bauds, 2048) == 0;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} BAND(Bauds, 1024) != 0;
    Tmp_361 := 7200;
    goto L1;

  anon47_Then:
    assume {:partition} BAND(Bauds, 1024) == 0;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} BAND(Bauds, 512) != 0;
    Tmp_361 := 4800;
    goto L1;

  anon48_Then:
    assume {:partition} BAND(Bauds, 512) == 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} BAND(Bauds, 256) != 0;
    Tmp_361 := 2400;
    goto L1;

  anon49_Then:
    assume {:partition} BAND(Bauds, 256) == 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} BAND(Bauds, 128) != 0;
    Tmp_361 := 1800;
    goto L1;

  anon50_Then:
    assume {:partition} BAND(Bauds, 128) == 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} BAND(Bauds, 64) != 0;
    Tmp_361 := 1200;
    goto L1;

  anon51_Then:
    assume {:partition} BAND(Bauds, 64) == 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} BAND(Bauds, 32) != 0;
    Tmp_361 := 600;
    goto L1;

  anon52_Then:
    assume {:partition} BAND(Bauds, 32) == 0;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} BAND(Bauds, 16) != 0;
    Tmp_361 := 300;
    goto L1;

  anon53_Then:
    assume {:partition} BAND(Bauds, 16) == 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} BAND(Bauds, 8) != 0;
    Tmp_361 := 150;
    goto L1;

  anon54_Then:
    assume {:partition} BAND(Bauds, 8) == 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} BAND(Bauds, 4) != 0;
    Tmp_361 := 135;
    goto L1;

  anon55_Then:
    assume {:partition} BAND(Bauds, 4) == 0;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} BAND(Bauds, 2) != 0;
    Tmp_361 := 110;
    goto L1;

  anon56_Then:
    assume {:partition} BAND(Bauds, 2) == 0;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} BAND(Bauds, 1) != 0;
    Tmp_361 := 75;
    goto L1;

  anon57_Then:
    assume {:partition} BAND(Bauds, 1) == 0;
    Tmp_361 := 0;
    goto L1;
}



procedure {:origName "CyyUndoExternalNaming"} CyyUndoExternalNaming(actual_Extension_7: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyUndoExternalNaming"} CyyUndoExternalNaming(actual_Extension_7: int)
{
  var {:pointer} Tmp_363: int;
  var {:pointer} keyHandle_2: int;
  var {:pointer} pRegName_1: int;
  var {:scalar} Tmp_365: int;
  var {:scalar} symLinkName: int;
  var {:pointer} Tmp_369: int;
  var {:pointer} Tmp_370: int;
  var {:scalar} status_11: int;
  var {:scalar} Tmp_372: int;
  var {:scalar} Tmp_373: int;
  var {:pointer} Tmp_374: int;
  var {:pointer} Extension_7: int;
  var vslice_dummy_var_222: int;
  var vslice_dummy_var_223: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_166: int;
  var vslice_dummy_var_167: int;
  var vslice_dummy_var_168: int;
  var vslice_dummy_var_169: int;

  anon0:
    call {:si_unique_call 821} vslice_dummy_var_222 := __HAVOC_malloc(4);
    call {:si_unique_call 822} pRegName_1 := __HAVOC_malloc(4);
    call {:si_unique_call 823} symLinkName := __HAVOC_malloc(12);
    call {:si_unique_call 824} Tmp_372 := __HAVOC_malloc(20);
    Extension_7 := actual_Extension_7;
    call {:si_unique_call 825} Tmp_363 := __HAVOC_malloc(76);
    call {:si_unique_call 826} Tmp_369 := __HAVOC_malloc(132);
    call {:si_unique_call 827} vslice_dummy_var_225 := __HAVOC_malloc(44);
    call {:si_unique_call 828} Tmp_374 := __HAVOC_malloc(224);
    call {:si_unique_call 829} sdv_do_paged_code_check();
    Tmp_374 := strConst__li2bpl103;
    call {:si_unique_call 830} vslice_dummy_var_226 := CyyDbgPrintEx(6, Tmp_374);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    call {:si_unique_call 831} status_11 := IoSetDeviceInterfaceState(0, 0);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 832} sdv_ExFreePool(0);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto L17;

  L17:
    call {:si_unique_call 833} status_11 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} status_11 == 0;
    call {:si_unique_call 834} RtlInitUnicodeString(symLinkName, 0);
    call {:si_unique_call 835} status_11 := CyyReadSymName(Extension_7, keyHandle_2, symLinkName, pRegName_1);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} status_11 != 0;
    goto L43;

  L43:
    call {:si_unique_call 836} vslice_dummy_var_223 := ZwClose(0);
    goto L14;

  L14:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 837} sdv_ExFreePool(0);
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto L55;

  L55:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    call {:si_unique_call 838} status_11 := RtlDeleteRegistryValue(4, 0, 0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} status_11 < 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_365;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_373;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    assume {:nonnull} Tmp_372 != 0;
    assume Tmp_372 > 0;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    havoc Tmp_370;
    assume {:nonnull} Extension_7 != 0;
    assume Extension_7 > 0;
    assume {:nonnull} Tmp_370 != 0;
    assume Tmp_370 > 0;
    havoc vslice_dummy_var_166;
    havoc vslice_dummy_var_167;
    havoc vslice_dummy_var_168;
    havoc vslice_dummy_var_169;
    call {:si_unique_call 839} CyyLogError(vslice_dummy_var_166, vslice_dummy_var_167, vslice_dummy_var_168, Tmp_372, 0, 0, 0, Tmp_373, status_11, 266246, Tmp_365, vslice_dummy_var_169, 0, 0);
    Tmp_369 := strConst__li2bpl105;
    call {:si_unique_call 840} vslice_dummy_var_227 := CyyDbgPrintEx(14, Tmp_369);
    goto L1;

  L1:
    return;

  anon30_Then:
    assume {:partition} 0 <= status_11;
    goto L1;

  anon29_Then:
    goto L1;

  anon28_Then:
    goto L1;

  anon23_Then:
    goto L55;

  anon27_Then:
    assume {:partition} status_11 == 0;
    Tmp_363 := strConst__li2bpl104;
    call {:si_unique_call 841} vslice_dummy_var_228 := CyyDbgPrintEx(4, Tmp_363);
    call {:si_unique_call 842} vslice_dummy_var_224 := IoDeleteSymbolicLink(0);
    call {:si_unique_call 843} sdv_ExFreePool(0);
    call {:si_unique_call 844} sdv_ExFreePool(0);
    goto L43;

  anon26_Then:
    assume {:partition} status_11 != 0;
    goto L14;

  anon25_Then:
    goto L17;

  anon24_Then:
    goto L14;

  anon22_Then:
    goto L14;

  anon21_Then:
    goto L1;
}



procedure {:origName "CyyReadSymName"} CyyReadSymName(actual_PDevExt_5: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_376: int);
  modifies alloc;
  free ensures Tmp_376 == -1073741811 || Tmp_376 == -1073741823 || Tmp_376 == 0 || Tmp_376 == 5 || Tmp_376 == -1073741789 || Tmp_376 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyReadSymName"} CyyReadSymName(actual_PDevExt_5: int, actual_hRegKey: int, actual_PSymName: int, actual_PpRegName: int) returns (Tmp_376: int)
{
  var {:scalar} Tmp_378: int;
  var {:scalar} Tmp_379: int;
  var {:pointer} Tmp_380: int;
  var {:scalar} linkName_1: int;
  var {:scalar} Tmp_381: int;
  var {:scalar} Tmp_382: int;
  var {:pointer} Tmp_383: int;
  var {:pointer} sdv_336: int;
  var {:pointer} Tmp_385: int;
  var {:pointer} sdv_338: int;
  var {:scalar} Tmp_386: int;
  var {:pointer} sdv_340: int;
  var {:pointer} Tmp_387: int;
  var {:pointer} Tmp_388: int;
  var {:scalar} Tmp_389: int;
  var {:scalar} status_12: int;
  var {:pointer} Tmp_390: int;
  var {:pointer} pDevObj_1: int;
  var {:pointer} pDrvObj: int;
  var {:scalar} Tmp_393: int;
  var {:scalar} Tmp_394: int;
  var {:pointer} PDevExt_5: int;
  var {:pointer} hRegKey: int;
  var {:pointer} PSymName: int;
  var {:pointer} PpRegName: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_170: int;
  var vslice_dummy_var_171: int;

  anon0:
    call {:si_unique_call 845} Tmp_379 := __HAVOC_malloc(20);
    call {:si_unique_call 846} linkName_1 := __HAVOC_malloc(12);
    call {:si_unique_call 847} Tmp_382 := __HAVOC_malloc(20);
    call {:si_unique_call 848} Tmp_393 := __HAVOC_malloc(20);
    call {:si_unique_call 849} Tmp_394 := __HAVOC_malloc(20);
    PDevExt_5 := actual_PDevExt_5;
    hRegKey := actual_hRegKey;
    PSymName := actual_PSymName;
    PpRegName := actual_PpRegName;
    call {:si_unique_call 850} Tmp_380 := __HAVOC_malloc(168);
    call {:si_unique_call 851} Tmp_383 := __HAVOC_malloc(148);
    call {:si_unique_call 852} vslice_dummy_var_231 := __HAVOC_malloc(8);
    call {:si_unique_call 853} Tmp_385 := __HAVOC_malloc(164);
    call {:si_unique_call 854} Tmp_387 := __HAVOC_malloc(60);
    call {:si_unique_call 855} Tmp_388 := __HAVOC_malloc(36);
    call {:si_unique_call 856} Tmp_390 := __HAVOC_malloc(44);
    call {:si_unique_call 857} vslice_dummy_var_232 := __HAVOC_malloc(8);
    call {:si_unique_call 858} vslice_dummy_var_233 := __HAVOC_malloc(44);
    assume {:nonnull} PDevExt_5 != 0;
    assume PDevExt_5 > 0;
    havoc pDevObj_1;
    assume {:nonnull} pDevObj_1 != 0;
    assume pDevObj_1 > 0;
    havoc pDrvObj;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    call {:si_unique_call 859} sdv_RtlZeroMemory(0, 8);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_386;
    call {:si_unique_call 860} sdv_336 := ExAllocatePoolWithTag(257, Tmp_386, -797345469);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    havoc Tmp_389;
    call {:si_unique_call 861} sdv_RtlZeroMemory(0, Tmp_389);
    call {:si_unique_call 862} sdv_340 := ExAllocatePoolWithTag(257, 258, -797345469);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_388 := strConst__li2bpl87;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_170;
    call {:si_unique_call 863} status_12 := CyyGetRegistryKeyValue(hRegKey, Tmp_388, 18, vslice_dummy_var_170, 256);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} status_12 >= 0;
    goto L39;

  L39:
    call {:si_unique_call 864} vslice_dummy_var_234 := corral_nondet();
    call {:si_unique_call 865} vslice_dummy_var_235 := corral_nondet();
    call {:si_unique_call 866} vslice_dummy_var_236 := corral_nondet();
    call {:si_unique_call 867} vslice_dummy_var_229 := corral_nondet();
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_381;
    call {:si_unique_call 868} sdv_338 := ExAllocatePoolWithTag(257, Tmp_381, -797345469);
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} PSymName != 0;
    assume PSymName > 0;
    havoc Tmp_378;
    call {:si_unique_call 869} sdv_RtlZeroMemory(0, Tmp_378);
    call {:si_unique_call 870} vslice_dummy_var_230 := corral_nondet();
    Tmp_387 := strConst__li2bpl106;
    call {:si_unique_call 871} vslice_dummy_var_237 := CyyDbgPrintEx(4, Tmp_387);
    goto L69;

  L69:
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 872} sdv_ExFreePool(0);
    assume {:nonnull} linkName_1 != 0;
    assume linkName_1 > 0;
    goto L70;

  L70:
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_12 >= 0;
    goto L76;

  L76:
    Tmp_376 := status_12;
    return;

  anon19_Then:
    assume {:partition} 0 > status_12;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 873} sdv_ExFreePool(0);
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    goto L76;

  anon20_Then:
    goto L76;

  anon18_Then:
    goto L70;

  anon24_Then:
    status_12 := -1073741670;
    goto L69;

  anon17_Then:
    assume {:partition} 0 > status_12;
    Tmp_390 := strConst__li2bpl88;
    assume {:nonnull} PpRegName != 0;
    assume PpRegName > 0;
    havoc vslice_dummy_var_171;
    call {:si_unique_call 874} status_12 := CyyGetRegistryKeyValue(hRegKey, Tmp_390, 22, vslice_dummy_var_171, 256);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_12 < 0;
    Tmp_385 := strConst__li2bpl100;
    call {:si_unique_call 875} vslice_dummy_var_238 := CyyDbgPrintEx(14, Tmp_385);
    goto L69;

  anon21_Then:
    assume {:partition} 0 <= status_12;
    goto L39;

  anon23_Then:
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_379 != 0;
    assume Tmp_379 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    assume {:nonnull} Tmp_393 != 0;
    assume Tmp_393 > 0;
    call {:si_unique_call 876} CyyLogError(pDrvObj, pDevObj_1, Tmp_393, Tmp_379, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_383 := strConst__li2bpl101;
    call {:si_unique_call 877} vslice_dummy_var_239 := CyyDbgPrintEx(14, Tmp_383);
    status_12 := -1073741670;
    goto L69;

  anon22_Then:
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_394 != 0;
    assume Tmp_394 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    assume {:nonnull} Tmp_382 != 0;
    assume Tmp_382 > 0;
    call {:si_unique_call 878} CyyLogError(pDrvObj, pDevObj_1, Tmp_382, Tmp_394, 0, 0, 0, 19, 0, -1073475576, 0, 0, 0, 0);
    Tmp_380 := strConst__li2bpl102;
    call {:si_unique_call 879} vslice_dummy_var_240 := CyyDbgPrintEx(14, Tmp_380);
    status_12 := -1073741670;
    goto L69;
}



procedure {:origName "_sdv_init6"} _sdv_init6();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init6"} _sdv_init6()
{
  var vslice_dummy_var_241: int;

  anon0:
    call {:si_unique_call 880} vslice_dummy_var_241 := __HAVOC_malloc(4);
    assume currentInstance_sdv_static_local_variable_117 == 0;
    return;
}



procedure {:origName "CyyAddToAllDevs"} CyyAddToAllDevs(actual_PListEntry: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyAddToAllDevs"} CyyAddToAllDevs(actual_PListEntry: int)
{
  var {:pointer} Tmp_397: int;
  var {:scalar} oldIrql_3: int;
  var {:pointer} PListEntry: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;

  anon0:
    call {:si_unique_call 881} vslice_dummy_var_242 := __HAVOC_malloc(4);
    PListEntry := actual_PListEntry;
    call {:si_unique_call 882} Tmp_397 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    call {:si_unique_call 883} sdv_KeAcquireSpinLock(0, Tmp_397);
    assume {:nonnull} Tmp_397 != 0;
    assume Tmp_397 > 0;
    havoc oldIrql_3;
    call {:si_unique_call 884} vslice_dummy_var_243 := sdv_InsertTailList(AllDevObjs__CYY_GLOBALS(CyyGlobals), PListEntry);
    call {:si_unique_call 885} sdv_KeReleaseSpinLock(0, oldIrql_3);
    return;
}



procedure {:origName "CyyStartDevice"} CyyStartDevice(actual_PDevObj_10: int, actual_PIrp_2: int) returns (Tmp_399: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartDevice"} CyyStartDevice(actual_PDevObj_10: int, actual_PIrp_2: int) returns (Tmp_399: int)
{
  var {:pointer} Tmp_400: int;
  var {:pointer} Tmp_401: int;
  var {:pointer} keyHandle_3: int;
  var {:pointer} portResourcesTr: int;
  var {:pointer} Tmp_402: int;
  var {:pointer} pDevExt_8: int;
  var {:pointer} Tmp_404: int;
  var {:pointer} portResources: int;
  var {:pointer} Tmp_405: int;
  var {:pointer} Tmp_406: int;
  var {:pointer} sdv_353: int;
  var {:scalar} dataLength: int;
  var {:pointer} sdv_360: int;
  var {:pointer} pLowerDevObj_3: int;
  var {:pointer} Tmp_407: int;
  var {:pointer} Tmp_408: int;
  var {:scalar} status_13: int;
  var {:pointer} Tmp_409: int;
  var {:scalar} Tmp_410: int;
  var {:scalar} Tmp_411: int;
  var {:pointer} PDevObj_10: int;
  var {:pointer} PIrp_2: int;
  var vslice_dummy_var_244: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;
  var vslice_dummy_var_172: int;

  anon0:
    call {:si_unique_call 886} Tmp_410 := __HAVOC_malloc(20);
    call {:si_unique_call 887} Tmp_411 := __HAVOC_malloc(20);
    PDevObj_10 := actual_PDevObj_10;
    PIrp_2 := actual_PIrp_2;
    call {:si_unique_call 888} Tmp_400 := __HAVOC_malloc(64);
    call {:si_unique_call 889} Tmp_401 := __HAVOC_malloc(112);
    call {:si_unique_call 890} Tmp_402 := __HAVOC_malloc(56);
    call {:si_unique_call 891} Tmp_404 := __HAVOC_malloc(152);
    call {:si_unique_call 892} Tmp_405 := __HAVOC_malloc(208);
    call {:si_unique_call 893} Tmp_406 := __HAVOC_malloc(200);
    call {:si_unique_call 894} Tmp_407 := __HAVOC_malloc(56);
    call {:si_unique_call 895} Tmp_408 := __HAVOC_malloc(100);
    call {:si_unique_call 896} Tmp_409 := __HAVOC_malloc(64);
    call {:si_unique_call 897} vslice_dummy_var_244 := sdv_IoGetCurrentIrpStackLocation(PIrp_2);
    status_13 := -1073741822;
    assume {:nonnull} PDevObj_10 != 0;
    assume PDevObj_10 > 0;
    havoc pDevExt_8;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc pLowerDevObj_3;
    portResources := 0;
    portResourcesTr := 0;
    call {:si_unique_call 898} sdv_do_paged_code_check();
    Tmp_408 := strConst__li2bpl107;
    call {:si_unique_call 899} vslice_dummy_var_247 := CyyDbgPrintEx(11, Tmp_408);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 900} KeInitializeEvent(CyyStartEvent__CYY_DEVICE_EXTENSION(pDevExt_8), 1, 0);
    call {:si_unique_call 901} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_2);
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    call {:si_unique_call 902} sdv_IoSetCompletionRoutine(PIrp_2, li2bplFunctionConstant218, CyyStartEvent__CYY_DEVICE_EXTENSION(pDevExt_8), 1, 1, 1);
    call {:si_unique_call 903} status_13 := sdv_IoCallDriver(pLowerDevObj_3, PIrp_2);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} status_13 == 259;
    call {:si_unique_call 904} vslice_dummy_var_245 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    assume {:nonnull} PIrp_2 != 0;
    assume PIrp_2 > 0;
    havoc status_13;
    goto L40;

  L40:
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} status_13 >= 0;
    call {:si_unique_call 905} status_13 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} status_13 >= 0;
    Tmp_402 := strConst__li2bpl109;
    call {:si_unique_call 906} dataLength := CyyGetRegistryKeyValueLength(keyHandle_3, Tmp_402, 28);
    call {:si_unique_call 907} sdv_353 := ExAllocatePoolWithTag(1, dataLength, -797345469);
    portResources := sdv_353;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} portResources != 0;
    Tmp_407 := strConst__li2bpl109;
    call {:si_unique_call 908} status_13 := CyyGetRegistryKeyValue(keyHandle_3, Tmp_407, 28, portResources, dataLength);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} status_13 < 0;
    Tmp_406 := strConst__li2bpl111;
    call {:si_unique_call 909} vslice_dummy_var_249 := CyyDbgPrintEx(14, Tmp_406);
    goto L77;

  L77:
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} portResources != 0;
    call {:si_unique_call 910} sdv_ExFreePool(0);
    goto L78;

  L78:
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} portResourcesTr != 0;
    call {:si_unique_call 911} sdv_ExFreePool(0);
    goto L82;

  L82:
    call {:si_unique_call 912} vslice_dummy_var_246 := ZwClose(0);
    goto L88;

  L88:
    Tmp_399 := status_13;
    goto L1;

  L1:
    return;

  anon24_Then:
    assume {:partition} portResourcesTr == 0;
    goto L82;

  anon23_Then:
    assume {:partition} portResources == 0;
    goto L78;

  anon22_Then:
    assume {:partition} 0 <= status_13;
    goto L65;

  L65:
    Tmp_400 := strConst__li2bpl110;
    call {:si_unique_call 913} dataLength := CyyGetRegistryKeyValueLength(keyHandle_3, Tmp_400, 32);
    call {:si_unique_call 914} sdv_360 := ExAllocatePoolWithTag(1, dataLength, -797345469);
    portResourcesTr := sdv_360;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} portResourcesTr != 0;
    Tmp_409 := strConst__li2bpl110;
    call {:si_unique_call 915} status_13 := CyyGetRegistryKeyValue(keyHandle_3, Tmp_409, 32, portResourcesTr, dataLength);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} status_13 < 0;
    Tmp_405 := strConst__li2bpl112;
    call {:si_unique_call 916} vslice_dummy_var_248 := CyyDbgPrintEx(14, Tmp_405);
    goto L77;

  anon25_Then:
    assume {:partition} 0 <= status_13;
    goto L95;

  L95:
    call {:si_unique_call 917} status_13 := CyyFinishStartDevice(PDevObj_10, portResources, portResourcesTr);
    goto L77;

  anon27_Then:
    assume {:partition} portResourcesTr == 0;
    goto L95;

  anon26_Then:
    assume {:partition} portResources == 0;
    goto L65;

  anon21_Then:
    assume {:partition} 0 > status_13;
    Tmp_404 := strConst__li2bpl66;
    call {:si_unique_call 918} vslice_dummy_var_250 := CyyDbgPrintEx(14, Tmp_404);
    goto L88;

  anon20_Then:
    assume {:partition} 0 > status_13;
    Tmp_401 := strConst__li2bpl108;
    call {:si_unique_call 919} vslice_dummy_var_251 := CyyDbgPrintEx(14, Tmp_401);
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_411 != 0;
    assume Tmp_411 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} Tmp_410 != 0;
    assume Tmp_410 > 0;
    assume {:nonnull} pDevExt_8 != 0;
    assume pDevExt_8 > 0;
    havoc vslice_dummy_var_172;
    call {:si_unique_call 920} CyyLogError(vslice_dummy_var_172, 0, Tmp_410, Tmp_411, 0, 0, 0, 0, status_13, -1073475530, 0, 0, 0, 0);
    Tmp_399 := status_13;
    goto L1;

  anon19_Then:
    assume {:partition} status_13 != 259;
    goto L40;
}



procedure {:origName "CyyFinishStartDevice"} CyyFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_412: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures Tmp_412 == -1073741670 || Tmp_412 == 0 || Tmp_412 == -1073741811 || Tmp_412 == -1073741808 || Tmp_412 == -1073741823 || Tmp_412 == -1073741584 || Tmp_412 == 259 || Tmp_412 == -1073741810 || Tmp_412 == -1073741709 || Tmp_412 == 5 || Tmp_412 == -1073741789 || Tmp_412 == -1073741772 || Tmp_412 == -1073741824;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyFinishStartDevice"} CyyFinishStartDevice(actual_PDevObj_11: int, actual_PResList_1: int, actual_PTrResList_1: int) returns (Tmp_412: int)
{
  var {:scalar} Tmp_415: int;
  var {:scalar} Tmp_416: int;
  var {:scalar} Tmp_417: int;
  var {:dopa} {:scalar} powerPolicy: int;
  var {:pointer} Tmp_418: int;
  var {:pointer} pDevExt_9: int;
  var {:pointer} Tmp_419: int;
  var {:pointer} Tmp_420: int;
  var {:pointer} Tmp_421: int;
  var {:pointer} pnpKey: int;
  var {:pointer} Tmp_422: int;
  var {:pointer} Tmp_423: int;
  var {:pointer} Tmp_424: int;
  var {:pointer} sdv_376: int;
  var {:pointer} pConfig: int;
  var {:pointer} sdv_378: int;
  var {:scalar} Tmp_425: int;
  var {:pointer} Tmp_426: int;
  var {:pointer} Tmp_428: int;
  var {:pointer} Tmp_429: int;
  var {:pointer} Tmp_430: int;
  var {:pointer} Tmp_431: int;
  var {:pointer} Tmp_432: int;
  var {:scalar} Tmp_433: int;
  var {:scalar} status_14: int;
  var {:scalar} Tmp_434: int;
  var {:scalar} Tmp_435: int;
  var {:pointer} Tmp_436: int;
  var {:pointer} countSoFar: int;
  var {:scalar} Tmp_438: int;
  var {:pointer} PDevObj_11: int;
  var {:pointer} PResList_1: int;
  var {:pointer} PTrResList_1: int;
  var boogieTmp: int;
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;
  var vslice_dummy_var_259: int;
  var vslice_dummy_var_260: int;
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_173: int;
  var vslice_dummy_var_174: int;
  var vslice_dummy_var_175: int;
  var vslice_dummy_var_176: int;
  var vslice_dummy_var_177: int;
  var vslice_dummy_var_178: int;
  var vslice_dummy_var_179: int;
  var vslice_dummy_var_180: int;
  var vslice_dummy_var_181: int;
  var vslice_dummy_var_182: int;
  var vslice_dummy_var_183: int;
  var vslice_dummy_var_184: int;
  var vslice_dummy_var_185: int;
  var vslice_dummy_var_186: int;
  var vslice_dummy_var_187: int;
  var vslice_dummy_var_188: int;

  anon0:
    call {:si_unique_call 921} powerPolicy := __HAVOC_malloc(4);
    call {:si_unique_call 922} Tmp_425 := __HAVOC_malloc(20);
    call {:si_unique_call 923} Tmp_434 := __HAVOC_malloc(20);
    call {:si_unique_call 924} Tmp_435 := __HAVOC_malloc(20);
    PDevObj_11 := actual_PDevObj_11;
    PResList_1 := actual_PResList_1;
    PTrResList_1 := actual_PTrResList_1;
    call {:si_unique_call 925} Tmp_418 := __HAVOC_malloc(104);
    call {:si_unique_call 926} Tmp_419 := __HAVOC_malloc(144);
    call {:si_unique_call 927} Tmp_420 := __HAVOC_malloc(168);
    call {:si_unique_call 928} Tmp_421 := __HAVOC_malloc(316);
    call {:si_unique_call 929} Tmp_422 := __HAVOC_malloc(100);
    call {:si_unique_call 930} Tmp_423 := __HAVOC_malloc(156);
    call {:si_unique_call 931} Tmp_424 := __HAVOC_malloc(884);
    call {:si_unique_call 932} Tmp_426 := __HAVOC_malloc(156);
    call {:si_unique_call 933} Tmp_429 := __HAVOC_malloc(120);
    call {:si_unique_call 934} Tmp_430 := __HAVOC_malloc(220);
    call {:si_unique_call 935} Tmp_431 := __HAVOC_malloc(272);
    call {:si_unique_call 936} Tmp_432 := __HAVOC_malloc(884);
    call {:si_unique_call 937} Tmp_436 := __HAVOC_malloc(104);
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    havoc pDevExt_9;
    call {:si_unique_call 938} sdv_do_paged_code_check();
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 939} CyySetDeviceFlags(pDevExt_9, Flags__CYY_DEVICE_EXTENSION(pDevExt_9), 2, 0);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L34;

  L34:
    call {:si_unique_call 940} sdv_378 := ExAllocatePoolWithTag(1, 96, -797345469);
    pConfig := sdv_378;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 941} sdv_RtlZeroMemory(0, 96);
    call {:si_unique_call 942} status_14 := CyyGetPortInfo(PDevObj_11, PResList_1, PTrResList_1, pConfig);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} status_14 < 0;
    goto L59;

  L59:
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    Tmp_433 := 0;
    goto L70;

  L70:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_417;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    Tmp_415 := 1;
    goto L78;

  L78:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  L87:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L93;

  L93:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_173;
    call {:si_unique_call 943} boogieTmp := CyyReportMaxBaudRate(vslice_dummy_var_173);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 944} sdv_RtlZeroMemory(0, 24);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    call {:si_unique_call 945} sdv_376 := IoGetConfigurationInformation();
    assume {:nonnull} sdv_376 != 0;
    assume sdv_376 > 0;
    countSoFar := SerialCount__CONFIGURATION_INFORMATION(sdv_376);
    assume {:nonnull} countSoFar != 0;
    assume countSoFar > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 946} vslice_dummy_var_259 := IoWMIRegistrationControl(0, 1);
    goto L121;

  L121:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    call {:si_unique_call 947} CyyUnstallIrps(pDevExt_9);
    goto L122;

  L122:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 948} CyySetDeviceFlags(pDevExt_9, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_9), -1, 0);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 949} CyySetDeviceFlags(pDevExt_9, Flags__CYY_DEVICE_EXTENSION(pDevExt_9), 1, 1);
    goto L132;

  L132:
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:partition} pConfig != 0;
    call {:si_unique_call 950} sdv_ExFreePool(0);
    goto L133;

  L133:
    Tmp_429 := strConst__li2bpl114;
    call {:si_unique_call 951} vslice_dummy_var_258 := CyyDbgPrintEx(11, Tmp_429);
    Tmp_412 := status_14;
    return;

  anon70_Then:
    assume {:partition} pConfig == 0;
    goto L133;

  anon69_Then:
    goto L122;

  anon68_Then:
    goto L121;

  anon85_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L93;

  anon86_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L93;

  anon67_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L93;

  anon81_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  anon82_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  anon83_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  anon84_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  anon90_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto L87;

  anon89_Then:
    Tmp_415 := 0;
    goto L78;

  anon88_Then:
    Tmp_433 := 1;
    goto L70;

  anon66_Then:
    assume {:partition} 0 > status_14;
    Tmp_436 := strConst__li2bpl113;
    call {:si_unique_call 952} vslice_dummy_var_260 := CyyDbgPrintEx(4, Tmp_436);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    call {:si_unique_call 953} CyyKillPendingIrps(PDevObj_11);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 954} CyySetDeviceFlags(pDevExt_9, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_9), 1, 1);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 955} CyySetDeviceFlags(pDevExt_9, Flags__CYY_DEVICE_EXTENSION(pDevExt_9), 1, 0);
    goto L132;

  anon71_Then:
    goto L132;

  anon63_Then:
    assume {:partition} 0 <= status_14;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_174;
    call {:si_unique_call 956} status_14 := CyyGotoPowerState(vslice_dummy_var_174, pDevExt_9, 1);
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} status_14 < 0;
    goto L59;

  anon65_Then:
    assume {:partition} 0 <= status_14;
    goto L50;

  L50:
    call {:si_unique_call 957} status_14 := CyyFindInitController(PDevObj_11, pConfig);
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume {:partition} status_14 >= 0;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} pDevExt_9 != 0;
    Tmp_430 := strConst__li2bpl116;
    call {:si_unique_call 958} vslice_dummy_var_256 := CyyDbgPrintEx(8, Tmp_430);
    goto L184;

  L184:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    goto L186;

  L186:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 959} CyyAddToAllDevs(AllDevObjs__CYY_DEVICE_EXTENSION(pDevExt_9));
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 960} vslice_dummy_var_252 := KeSynchronizeExecution(0, li2bplFunctionConstant230, 0);
    call {:si_unique_call 961} vslice_dummy_var_253 := KeSynchronizeExecution(0, li2bplFunctionConstant231, 0);
    call {:si_unique_call 962} vslice_dummy_var_254 := KeSynchronizeExecution(0, li2bplFunctionConstant232, 0);
    call {:si_unique_call 963} vslice_dummy_var_255 := KeSynchronizeExecution(0, li2bplFunctionConstant233, 0);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    Tmp_420 := strConst__li2bpl117;
    call {:si_unique_call 964} vslice_dummy_var_257 := CyyDbgPrintEx(12, Tmp_420);
    goto L59;

  anon76_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_428;
    assume {:nonnull} Tmp_428 != 0;
    assume Tmp_428 > 0;
    havoc vslice_dummy_var_175;
    call {:si_unique_call 965} status_14 := CyyDoExternalNaming(pDevExt_9, vslice_dummy_var_175);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} status_14 < 0;
    Tmp_419 := strConst__li2bpl118;
    call {:si_unique_call 966} vslice_dummy_var_261 := CyyDbgPrintEx(14, Tmp_419);
    status_14 := 0;
    goto L59;

  anon77_Then:
    assume {:partition} 0 <= status_14;
    goto L59;

  anon74_Then:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    Tmp_421 := strConst__li2bpl119;
    call {:si_unique_call 967} vslice_dummy_var_262 := CyyDbgPrintEx(8, Tmp_421);
    Tmp_432 := strConst__li2bpl120;
    call {:si_unique_call 968} vslice_dummy_var_263 := CyyDbgPrintEx(8, Tmp_432);
    assume {:nonnull} pConfig != 0;
    assume pConfig > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_176;
    havoc vslice_dummy_var_177;
    havoc vslice_dummy_var_178;
    havoc vslice_dummy_var_179;
    havoc vslice_dummy_var_180;
    havoc vslice_dummy_var_181;
    havoc vslice_dummy_var_182;
    havoc vslice_dummy_var_183;
    call {:si_unique_call 969} status_14 := IoConnectInterrupt(0, vslice_dummy_var_176, vslice_dummy_var_177, 0, vslice_dummy_var_178, vslice_dummy_var_179, vslice_dummy_var_180, vslice_dummy_var_181, vslice_dummy_var_182, vslice_dummy_var_183, 0);
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} status_14 >= 0;
    Tmp_418 := strConst__li2bpl122;
    call {:si_unique_call 970} vslice_dummy_var_264 := CyyDbgPrintEx(8, Tmp_418);
    goto L186;

  anon78_Then:
    assume {:partition} 0 > status_14;
    Tmp_423 := strConst__li2bpl121;
    call {:si_unique_call 971} vslice_dummy_var_265 := CyyDbgPrintEx(14, Tmp_423);
    Tmp_424 := strConst__li2bpl120;
    call {:si_unique_call 972} vslice_dummy_var_266 := CyyDbgPrintEx(14, Tmp_424);
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc Tmp_438;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} Tmp_425 != 0;
    assume Tmp_425 > 0;
    assume {:nonnull} PDevObj_11 != 0;
    assume PDevObj_11 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_184;
    havoc vslice_dummy_var_185;
    havoc vslice_dummy_var_186;
    havoc vslice_dummy_var_187;
    call {:si_unique_call 973} CyyLogError(vslice_dummy_var_184, PDevObj_11, vslice_dummy_var_185, Tmp_425, 0, 0, 0, vslice_dummy_var_186, status_14, -1073475577, Tmp_438, vslice_dummy_var_187, 0, 0);
    goto L59;

  anon75_Then:
    goto L186;

  anon73_Then:
    assume {:partition} pDevExt_9 == 0;
    Tmp_426 := strConst__li2bpl115;
    call {:si_unique_call 974} vslice_dummy_var_267 := CyyDbgPrintEx(14, Tmp_426);
    goto L184;

  anon72_Then:
    assume {:partition} 0 > status_14;
    goto L59;

  anon64_Then:
    goto L50;

  anon87_Then:
    assume {:partition} pConfig == 0;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} Tmp_434 != 0;
    assume Tmp_434 > 0;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} Tmp_435 != 0;
    assume Tmp_435 > 0;
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    havoc vslice_dummy_var_188;
    call {:si_unique_call 975} CyyLogError(vslice_dummy_var_188, 0, Tmp_435, Tmp_434, 0, 0, 0, 31, 0, -1073475576, 0, 0, 0, 0);
    Tmp_431 := strConst__li2bpl123;
    call {:si_unique_call 976} vslice_dummy_var_268 := CyyDbgPrintEx(14, Tmp_431);
    status_14 := -1073741670;
    goto L59;

  anon62_Then:
    goto L17;

  L17:
    call {:si_unique_call 977} status_14 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} status_14 >= 0;
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    Tmp_422 := strConst__li2bpl124;
    call {:si_unique_call 978} vslice_dummy_var_269 := CyyGetRegistryKeyValue(pnpKey, Tmp_422, 50, powerPolicy, 4);
    assume {:nonnull} powerPolicy != 0;
    assume powerPolicy > 0;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    Tmp_416 := 0;
    goto L268;

  L268:
    assume {:nonnull} pDevExt_9 != 0;
    assume pDevExt_9 > 0;
    call {:si_unique_call 979} vslice_dummy_var_270 := ZwClose(0);
    goto L34;

  anon80_Then:
    Tmp_416 := 1;
    goto L268;

  anon79_Then:
    assume {:partition} 0 > status_14;
    goto L34;

  anon61_Then:
    goto L17;
}



procedure {:origName "CyyPnpDispatch"} CyyPnpDispatch(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_439: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyPnpDispatch"} CyyPnpDispatch(actual_PDevObj_12: int, actual_PIrp_3: int) returns (Tmp_439: int)
{
  var {:pointer} sdv_393: int;
  var {:scalar} pIdBuf: int;
  var {:pointer} Tmp_440: int;
  var {:scalar} Tmp_441: int;
  var {:scalar} sdv_397: int;
  var {:scalar} gotMemory: int;
  var {:pointer} Tmp_442: int;
  var {:pointer} Tmp_443: int;
  var {:pointer} Tmp_444: int;
  var {:pointer} pResList: int;
  var {:dopa} {:scalar} portIndex: int;
  var {:pointer} Tmp_445: int;
  var {:pointer} Tmp_446: int;
  var {:pointer} Tmp_447: int;
  var {:pointer} Tmp_448: int;
  var {:pointer} Tmp_449: int;
  var {:pointer} Tmp_450: int;
  var {:pointer} pDevExt_10: int;
  var {:scalar} Tmp_451: int;
  var {:pointer} Tmp_452: int;
  var {:scalar} Tmp_453: int;
  var {:pointer} WideString: int;
  var {:pointer} Tmp_454: int;
  var {:pointer} Tmp_455: int;
  var {:pointer} Tmp_456: int;
  var {:pointer} Tmp_457: int;
  var {:scalar} cap: int;
  var {:pointer} Tmp_458: int;
  var {:scalar} Tmp_459: int;
  var {:scalar} pnpIdStrLen: int;
  var {:pointer} Tmp_460: int;
  var {:scalar} pendingIRPs: int;
  var {:pointer} pQueryCapsEvent: int;
  var {:pointer} Tmp_461: int;
  var {:pointer} Tmp_462: int;
  var {:pointer} pIrpStack_3: int;
  var {:pointer} Tmp_464: int;
  var {:pointer} Tmp_465: int;
  var {:pointer} Tmp_466: int;
  var {:pointer} pLowerDevObj_4: int;
  var {:pointer} Tmp_467: int;
  var {:pointer} sdv_431: int;
  var {:pointer} sdv_434: int;
  var {:scalar} gotInt: int;
  var {:pointer} pResDesc: int;
  var {:scalar} allocLen: int;
  var {:pointer} Tmp_468: int;
  var {:pointer} sdv_438: int;
  var {:pointer} Tmp_470: int;
  var {:scalar} listNum: int;
  var {:pointer} Tmp_472: int;
  var {:scalar} Tmp_473: int;
  var {:pointer} Tmp_474: int;
  var {:scalar} pendingIRPs_1: int;
  var {:pointer} Tmp_476: int;
  var {:pointer} Tmp_477: int;
  var {:pointer} Tmp_478: int;
  var {:pointer} pReqList: int;
  var {:pointer} Tmp_479: int;
  var {:pointer} Tmp_480: int;
  var {:pointer} Tmp_481: int;
  var {:pointer} Tmp_483: int;
  var {:pointer} Tmp_484: int;
  var {:scalar} pendingIRPs_2: int;
  var {:pointer} Tmp_485: int;
  var {:pointer} Tmp_486: int;
  var {:pointer} Tmp_487: int;
  var {:pointer} Tmp_488: int;
  var {:pointer} Tmp_489: int;
  var {:pointer} Tmp_490: int;
  var {:pointer} Tmp_491: int;
  var {:scalar} j: int;
  var {:pointer} Tmp_492: int;
  var {:pointer} Tmp_493: int;
  var {:pointer} Tmp_494: int;
  var {:pointer} Tmp_495: int;
  var {:scalar} Tmp_496: int;
  var {:pointer} Tmp_498: int;
  var {:scalar} sdv_461: int;
  var {:pointer} pnpKey_1: int;
  var {:pointer} Tmp_499: int;
  var {:pointer} Tmp_500: int;
  var {:pointer} Tmp_501: int;
  var {:pointer} pResFiltEvent: int;
  var {:pointer} Tmp_502: int;
  var {:pointer} Tmp_503: int;
  var {:pointer} Tmp_504: int;
  var {:pointer} Tmp_505: int;
  var {:pointer} Tmp_506: int;
  var {:pointer} Tmp_507: int;
  var {:pointer} Tmp_508: int;
  var {:scalar} curStrLen: int;
  var {:pointer} curStr: int;
  var {:scalar} gotRuntime: int;
  var {:scalar} sdv_479: int;
  var {:pointer} Tmp_509: int;
  var {:pointer} pDevCaps: int;
  var {:pointer} Tmp_510: int;
  var {:pointer} Tmp_511: int;
  var {:pointer} Tmp_512: int;
  var {:pointer} Tmp_513: int;
  var {:scalar} sdv_483: int;
  var {:scalar} status_15: int;
  var {:scalar} sdv_484: int;
  var {:pointer} Tmp_514: int;
  var {:pointer} Tmp_515: int;
  var {:scalar} Tmp_516: int;
  var {:pointer} PDevObj_12: int;
  var {:pointer} PIrp_3: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;
  var vslice_dummy_var_280: int;
  var vslice_dummy_var_281: int;
  var vslice_dummy_var_282: int;
  var vslice_dummy_var_283: int;
  var vslice_dummy_var_284: int;
  var vslice_dummy_var_285: int;
  var vslice_dummy_var_286: int;
  var vslice_dummy_var_287: int;
  var vslice_dummy_var_288: int;
  var vslice_dummy_var_289: int;
  var vslice_dummy_var_290: int;
  var vslice_dummy_var_291: int;
  var vslice_dummy_var_292: int;
  var vslice_dummy_var_293: int;
  var vslice_dummy_var_294: int;
  var vslice_dummy_var_295: int;
  var vslice_dummy_var_296: int;
  var vslice_dummy_var_297: int;
  var vslice_dummy_var_298: int;
  var vslice_dummy_var_299: int;
  var vslice_dummy_var_300: int;
  var vslice_dummy_var_301: int;
  var vslice_dummy_var_302: int;
  var vslice_dummy_var_303: int;
  var vslice_dummy_var_304: int;
  var vslice_dummy_var_305: int;
  var vslice_dummy_var_306: int;
  var vslice_dummy_var_307: int;
  var vslice_dummy_var_308: int;
  var vslice_dummy_var_309: int;
  var vslice_dummy_var_310: int;
  var vslice_dummy_var_311: int;
  var vslice_dummy_var_312: int;
  var vslice_dummy_var_313: int;
  var vslice_dummy_var_314: int;
  var vslice_dummy_var_315: int;
  var vslice_dummy_var_316: int;
  var vslice_dummy_var_317: int;
  var vslice_dummy_var_318: int;
  var vslice_dummy_var_319: int;
  var vslice_dummy_var_320: int;
  var vslice_dummy_var_321: int;
  var vslice_dummy_var_322: int;
  var vslice_dummy_var_323: int;
  var vslice_dummy_var_324: int;
  var vslice_dummy_var_325: int;
  var vslice_dummy_var_326: int;
  var vslice_dummy_var_327: int;
  var vslice_dummy_var_328: int;
  var vslice_dummy_var_329: int;
  var vslice_dummy_var_330: int;
  var vslice_dummy_var_331: int;
  var vslice_dummy_var_332: int;
  var vslice_dummy_var_333: int;
  var vslice_dummy_var_334: int;
  var vslice_dummy_var_335: int;
  var vslice_dummy_var_336: int;
  var vslice_dummy_var_337: int;
  var vslice_dummy_var_338: int;
  var vslice_dummy_var_339: int;
  var vslice_dummy_var_340: int;
  var vslice_dummy_var_341: int;
  var vslice_dummy_var_342: int;
  var vslice_dummy_var_343: int;

  anon0:
    call {:si_unique_call 980} pIdBuf := __HAVOC_malloc(12);
    call {:si_unique_call 981} portIndex := __HAVOC_malloc(4);
    PDevObj_12 := actual_PDevObj_12;
    PIrp_3 := actual_PIrp_3;
    call {:si_unique_call 982} Tmp_440 := __HAVOC_malloc(60);
    call {:si_unique_call 983} Tmp_442 := __HAVOC_malloc(176);
    call {:si_unique_call 984} Tmp_443 := __HAVOC_malloc(72);
    call {:si_unique_call 985} Tmp_444 := __HAVOC_malloc(28);
    call {:si_unique_call 986} Tmp_445 := __HAVOC_malloc(72);
    call {:si_unique_call 987} Tmp_446 := __HAVOC_malloc(60);
    call {:si_unique_call 988} Tmp_447 := __HAVOC_malloc(72);
    call {:si_unique_call 989} Tmp_448 := __HAVOC_malloc(72);
    call {:si_unique_call 990} Tmp_449 := __HAVOC_malloc(144);
    call {:si_unique_call 991} Tmp_450 := __HAVOC_malloc(72);
    call {:si_unique_call 992} Tmp_452 := __HAVOC_malloc(116);
    call {:si_unique_call 993} WideString := __HAVOC_malloc(800);
    call {:si_unique_call 994} Tmp_454 := __HAVOC_malloc(164);
    call {:si_unique_call 995} Tmp_455 := __HAVOC_malloc(100);
    call {:si_unique_call 996} Tmp_456 := __HAVOC_malloc(112);
    call {:si_unique_call 997} Tmp_457 := __HAVOC_malloc(40);
    call {:si_unique_call 998} Tmp_458 := __HAVOC_malloc(92);
    call {:si_unique_call 999} Tmp_460 := __HAVOC_malloc(116);
    call {:si_unique_call 1000} Tmp_461 := __HAVOC_malloc(168);
    call {:si_unique_call 1001} Tmp_462 := __HAVOC_malloc(120);
    call {:si_unique_call 1002} Tmp_464 := __HAVOC_malloc(128);
    call {:si_unique_call 1003} Tmp_465 := __HAVOC_malloc(72);
    call {:si_unique_call 1004} Tmp_466 := __HAVOC_malloc(176);
    call {:si_unique_call 1005} Tmp_468 := __HAVOC_malloc(72);
    call {:si_unique_call 1006} vslice_dummy_var_281 := __HAVOC_malloc(20);
    call {:si_unique_call 1007} Tmp_470 := __HAVOC_malloc(60);
    call {:si_unique_call 1008} Tmp_472 := __HAVOC_malloc(60);
    call {:si_unique_call 1009} Tmp_474 := __HAVOC_malloc(120);
    call {:si_unique_call 1010} vslice_dummy_var_282 := __HAVOC_malloc(56);
    call {:si_unique_call 1011} Tmp_476 := __HAVOC_malloc(128);
    call {:si_unique_call 1012} Tmp_477 := __HAVOC_malloc(28);
    call {:si_unique_call 1013} Tmp_478 := __HAVOC_malloc(28);
    call {:si_unique_call 1014} Tmp_479 := __HAVOC_malloc(112);
    call {:si_unique_call 1015} Tmp_480 := __HAVOC_malloc(88);
    call {:si_unique_call 1016} Tmp_481 := __HAVOC_malloc(120);
    call {:si_unique_call 1017} Tmp_483 := __HAVOC_malloc(132);
    call {:si_unique_call 1018} Tmp_484 := __HAVOC_malloc(392);
    call {:si_unique_call 1019} Tmp_485 := __HAVOC_malloc(152);
    call {:si_unique_call 1020} Tmp_486 := __HAVOC_malloc(72);
    call {:si_unique_call 1021} Tmp_487 := __HAVOC_malloc(112);
    call {:si_unique_call 1022} Tmp_488 := __HAVOC_malloc(144);
    call {:si_unique_call 1023} Tmp_489 := __HAVOC_malloc(136);
    call {:si_unique_call 1024} Tmp_490 := __HAVOC_malloc(72);
    call {:si_unique_call 1025} Tmp_491 := __HAVOC_malloc(140);
    call {:si_unique_call 1026} Tmp_492 := __HAVOC_malloc(60);
    call {:si_unique_call 1027} Tmp_493 := __HAVOC_malloc(168);
    call {:si_unique_call 1028} Tmp_494 := __HAVOC_malloc(132);
    call {:si_unique_call 1029} Tmp_495 := __HAVOC_malloc(60);
    call {:si_unique_call 1030} Tmp_498 := __HAVOC_malloc(144);
    call {:si_unique_call 1031} Tmp_499 := __HAVOC_malloc(60);
    call {:si_unique_call 1032} Tmp_500 := __HAVOC_malloc(380);
    call {:si_unique_call 1033} Tmp_501 := __HAVOC_malloc(180);
    call {:si_unique_call 1034} Tmp_502 := __HAVOC_malloc(72);
    call {:si_unique_call 1035} Tmp_503 := __HAVOC_malloc(88);
    call {:si_unique_call 1036} Tmp_504 := __HAVOC_malloc(60);
    call {:si_unique_call 1037} Tmp_505 := __HAVOC_malloc(72);
    call {:si_unique_call 1038} Tmp_506 := __HAVOC_malloc(100);
    call {:si_unique_call 1039} Tmp_507 := __HAVOC_malloc(116);
    call {:si_unique_call 1040} Tmp_508 := __HAVOC_malloc(148);
    call {:si_unique_call 1041} Tmp_509 := __HAVOC_malloc(112);
    call {:si_unique_call 1042} Tmp_510 := __HAVOC_malloc(28);
    call {:si_unique_call 1043} Tmp_511 := __HAVOC_malloc(60);
    call {:si_unique_call 1044} Tmp_512 := __HAVOC_malloc(88);
    call {:si_unique_call 1045} Tmp_513 := __HAVOC_malloc(156);
    call {:si_unique_call 1046} Tmp_514 := __HAVOC_malloc(72);
    call {:si_unique_call 1047} Tmp_515 := __HAVOC_malloc(72);
    assume {:nonnull} PDevObj_12 != 0;
    assume PDevObj_12 > 0;
    havoc pDevExt_10;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc pLowerDevObj_4;
    call {:si_unique_call 1048} pIrpStack_3 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1049} sdv_do_paged_code_check();
    call {:si_unique_call 1050} status_15 := CyyIRPPrologue(PIrp_3, pDevExt_10);
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} status_15 != 0;
    Tmp_486 := strConst__li2bpl3;
    call {:si_unique_call 1051} vslice_dummy_var_283 := CyyDbgPrintEx(9, Tmp_486);
    call {:si_unique_call 1052} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1053} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;

  L1:
    return;

  anon125_Then:
    assume {:partition} status_15 == 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon168_Then, anon168_Else;

  anon168_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon167_Then, anon167_Else;

  anon167_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon166_Then, anon166_Else;

  anon166_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon165_Then, anon165_Else;

  anon165_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon164_Then, anon164_Else;

  anon164_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon163_Then, anon163_Else;

  anon163_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon162_Then, anon162_Else;

  anon162_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon161_Then, anon161_Else;

  anon161_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon160_Then, anon160_Else;

  anon160_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon159_Then, anon159_Else;

  anon159_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon158_Then, anon158_Else;

  anon158_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon157_Then, anon157_Else;

  anon157_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon156_Then, anon156_Else;

  anon156_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon155_Then, anon155_Else;

  anon155_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon154_Then, anon154_Else;

  anon154_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon153_Then, anon153_Else;

  anon153_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon152_Then, anon152_Else;

  anon152_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon151_Then, anon151_Else;

  anon151_Else:
    goto L280;

  L280:
    call {:si_unique_call 1054} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1055} status_15 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    Tmp_439 := status_15;
    goto L1;

  anon151_Then:
    Tmp_494 := strConst__li2bpl134;
    call {:si_unique_call 1056} vslice_dummy_var_340 := CyyDbgPrintEx(12, Tmp_494);
    Tmp_440 := strConst__li2bpl135;
    call {:si_unique_call 1057} vslice_dummy_var_341 := CyyDbgPrintEx(12, Tmp_440);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1058} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 8, 1);
    call {:si_unique_call 1059} CyyKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1060} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1061} vslice_dummy_var_342 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1062} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1063} sdv_483 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    pendingIRPs_1 := sdv_483;
    goto anon186_Then, anon186_Else;

  anon186_Else:
    assume {:partition} pendingIRPs_1 != 0;
    call {:si_unique_call 1064} vslice_dummy_var_271 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L92;

  L92:
    call {:si_unique_call 1065} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1066} vslice_dummy_var_343 := sdv_InterlockedIncrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1067} CyyDisableInterfacesResources(PDevObj_12, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1068} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1069} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon186_Then:
    assume {:partition} pendingIRPs_1 == 0;
    goto L92;

  anon152_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto L109;

  L109:
    call {:si_unique_call 1070} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1071} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon127_Then:
    goto L109;

  anon153_Then:
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    Tmp_455 := strConst__li2bpl159;
    call {:si_unique_call 1072} vslice_dummy_var_334 := CyyDbgPrintEx(12, Tmp_455);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    call {:si_unique_call 1073} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1074} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon130_Then:
    goto L128;

  L128:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1075} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1076} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon129_Then:
    call {:si_unique_call 1077} status_15 := IoOpenDeviceRegistryKey(0, 1, 131072, 0);
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} status_15 >= 0;
    Tmp_457 := strConst__li2bpl69;
    call {:si_unique_call 1078} status_15 := CyyGetRegistryKeyValue(pnpKey_1, Tmp_457, 20, portIndex, 4);
    call {:si_unique_call 1079} vslice_dummy_var_272 := ZwClose(0);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} status_15 >= 0;
    assume {:nonnull} portIndex != 0;
    assume portIndex > 0;
    call {:si_unique_call 1080} sdv_484 := corral_nondet();
    pnpIdStrLen := sdv_484;
    pnpIdStrLen := pnpIdStrLen * 2 + 2;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon182_Then, anon182_Else;

  anon182_Else:
    allocLen := 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc curStr;
    goto L179;

  L179:
    call {:si_unique_call 1081} allocLen, curStrLen := CyyPnpDispatch_loop_L179(allocLen, sdv_461, curStrLen, curStr);
    goto L179_last;

  L179_last:
    curStrLen := sdv_461;
    goto anon183_Then, anon183_Else;

  anon183_Else:
    assume {:partition} curStrLen != 0;
    allocLen := allocLen + curStrLen * 2 + 2;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    assume false;
    return;

  anon183_Then:
    assume {:partition} curStrLen == 0;
    allocLen := allocLen + 2;
    Tmp_473 := allocLen + pnpIdStrLen + 2;
    call {:si_unique_call 1082} sdv_431 := ExAllocatePoolWithTag(1, Tmp_473, -797345469);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon184_Then, anon184_Else;

  anon184_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_453;
    call {:si_unique_call 1083} sdv_RtlZeroMemory(0, Tmp_453);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1084} sdv_RtlCopyMemory(0, 0, allocLen);
    call {:si_unique_call 1085} vslice_dummy_var_273 := corral_nondet();
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1086} sdv_ExFreePool(0);
    goto L208;

  L208:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1087} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1088} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon184_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1089} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_514 := strConst__li2bpl3;
    call {:si_unique_call 1090} vslice_dummy_var_335 := CyyDbgPrintEx(9, Tmp_514);
    call {:si_unique_call 1091} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1092} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := -1073741670;
    goto L1;

  anon182_Then:
    Tmp_492 := strConst__li2bpl136;
    call {:si_unique_call 1093} vslice_dummy_var_336 := CyyDbgPrintEx(12, Tmp_492);
    Tmp_451 := pnpIdStrLen + 4;
    call {:si_unique_call 1094} sdv_393 := ExAllocatePoolWithTag(1, Tmp_451, -797345469);
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    goto anon185_Then, anon185_Else;

  anon185_Else:
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    assume {:nonnull} pIdBuf != 0;
    assume pIdBuf > 0;
    havoc Tmp_496;
    call {:si_unique_call 1095} sdv_RtlZeroMemory(0, Tmp_496);
    call {:si_unique_call 1096} vslice_dummy_var_274 := corral_nondet();
    goto L208;

  anon185_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_445 := strConst__li2bpl3;
    call {:si_unique_call 1097} vslice_dummy_var_337 := CyyDbgPrintEx(9, Tmp_445);
    call {:si_unique_call 1098} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1099} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := -1073741670;
    goto L1;

  anon132_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_468 := strConst__li2bpl3;
    call {:si_unique_call 1100} vslice_dummy_var_338 := CyyDbgPrintEx(9, Tmp_468);
    call {:si_unique_call 1101} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1102} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;

  anon131_Then:
    assume {:partition} 0 > status_15;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_515 := strConst__li2bpl3;
    call {:si_unique_call 1103} vslice_dummy_var_339 := CyyDbgPrintEx(9, Tmp_515);
    call {:si_unique_call 1104} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1105} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;

  anon128_Then:
    goto L128;

  anon154_Then:
    Tmp_506 := strConst__li2bpl133;
    call {:si_unique_call 1106} vslice_dummy_var_333 := CyyDbgPrintEx(12, Tmp_506);
    goto L280;

  anon155_Then:
    Tmp_503 := strConst__li2bpl132;
    call {:si_unique_call 1107} vslice_dummy_var_332 := CyyDbgPrintEx(12, Tmp_503);
    goto L280;

  anon156_Then:
    Tmp_460 := strConst__li2bpl131;
    call {:si_unique_call 1108} vslice_dummy_var_331 := CyyDbgPrintEx(12, Tmp_460);
    goto L280;

  anon157_Then:
    Tmp_509 := strConst__li2bpl130;
    call {:si_unique_call 1109} vslice_dummy_var_330 := CyyDbgPrintEx(12, Tmp_509);
    goto L280;

  anon158_Then:
    Tmp_501 := strConst__li2bpl153;
    call {:si_unique_call 1110} vslice_dummy_var_318 := CyyDbgPrintEx(12, Tmp_501);
    Tmp_470 := strConst__li2bpl135;
    call {:si_unique_call 1111} vslice_dummy_var_319 := CyyDbgPrintEx(12, Tmp_470);
    call {:si_unique_call 1112} sdv_438 := ExAllocatePoolWithTag(0, 16, -797345469);
    pResFiltEvent := sdv_438;
    goto anon179_Then, anon179_Else;

  anon179_Else:
    assume {:partition} pResFiltEvent != 0;
    call {:si_unique_call 1113} KeInitializeEvent(pResFiltEvent, 1, 0);
    call {:si_unique_call 1114} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1115} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant218, pResFiltEvent, 1, 1, 1);
    call {:si_unique_call 1116} status_15 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_3);
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1117} vslice_dummy_var_275 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L330;

  L330:
    call {:si_unique_call 1118} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    goto L338;

  L338:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc pReqList;
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    havoc Tmp_484;
    pResList := Tmp_484;
    Tmp_442 := strConst__li2bpl154;
    call {:si_unique_call 1119} vslice_dummy_var_320 := CyyDbgPrintEx(12, Tmp_442);
    listNum := 0;
    goto L344;

  L344:
    call {:si_unique_call 1120} gotMemory, Tmp_452, Tmp_454, Tmp_459, Tmp_461, gotInt, pResDesc, listNum, Tmp_485, Tmp_488, j, Tmp_500, gotRuntime, vslice_dummy_var_321, vslice_dummy_var_322, vslice_dummy_var_323, vslice_dummy_var_324, vslice_dummy_var_325 := CyyPnpDispatch_loop_L344(gotMemory, pResList, pDevExt_10, Tmp_452, Tmp_454, Tmp_459, Tmp_461, pLowerDevObj_4, gotInt, pResDesc, listNum, pReqList, Tmp_485, Tmp_488, j, Tmp_500, gotRuntime, vslice_dummy_var_321, vslice_dummy_var_322, vslice_dummy_var_323, vslice_dummy_var_324, vslice_dummy_var_325);
    goto L344_last;

  L344_last:
    assume {:nonnull} pReqList != 0;
    assume pReqList > 0;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    gotRuntime := 0;
    gotMemory := 0;
    gotInt := 0;
    Tmp_452 := strConst__li2bpl155;
    call {:si_unique_call 1121} vslice_dummy_var_321 := CyyDbgPrintEx(12, Tmp_452);
    j := 0;
    goto L353;

  L353:
    call {:si_unique_call 1122} gotMemory, Tmp_454, Tmp_459, Tmp_461, gotInt, pResDesc, Tmp_485, Tmp_488, j, Tmp_500, gotRuntime, vslice_dummy_var_322, vslice_dummy_var_323, vslice_dummy_var_324, vslice_dummy_var_325 := CyyPnpDispatch_loop_L353(gotMemory, pResList, pDevExt_10, Tmp_454, Tmp_459, Tmp_461, pLowerDevObj_4, gotInt, pResDesc, Tmp_485, Tmp_488, j, Tmp_500, gotRuntime, vslice_dummy_var_322, vslice_dummy_var_323, vslice_dummy_var_324, vslice_dummy_var_325);
    goto L353_last;

  L353_last:
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    Tmp_459 := j;
    assume {:nonnull} pResList != 0;
    assume pResList > 0;
    havoc Tmp_500;
    pResDesc := Tmp_500 + Tmp_459 * 380;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L370;

  L370:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} gotRuntime != 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} gotMemory != 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} gotInt == 0;
    goto L371;

  L371:
    j := j + 1;
    goto L371_dummy;

  L371_dummy:
    assume false;
    return;

  anon141_Then:
    assume {:partition} gotInt != 0;
    goto L354;

  L354:
    listNum := listNum + 1;
    goto L354_dummy;

  L354_dummy:
    assume false;
    return;

  anon140_Then:
    assume {:partition} gotMemory == 0;
    goto L371;

  anon139_Then:
    assume {:partition} gotRuntime == 0;
    goto L371;

  anon173_Then:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    gotRuntime := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_485 := strConst__li2bpl157;
    call {:si_unique_call 1123} vslice_dummy_var_324 := CyyDbgPrintEx(12, Tmp_485);
    goto L370;

  anon138_Then:
    gotMemory := 1;
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_488 := strConst__li2bpl158;
    call {:si_unique_call 1124} vslice_dummy_var_325 := CyyDbgPrintEx(12, Tmp_488);
    goto L370;

  anon174_Then:
    gotInt := 1;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} pResDesc != 0;
    assume pResDesc > 0;
    Tmp_454 := strConst__li2bpl156;
    call {:si_unique_call 1125} vslice_dummy_var_323 := CyyDbgPrintEx(12, Tmp_454);
    goto L370;

  anon181_Then:
    goto L370;

  anon180_Then:
    Tmp_461 := strConst__li2bpl137;
    call {:si_unique_call 1126} vslice_dummy_var_322 := CyyDbgPrintEx(12, Tmp_461);
    goto L370;

  anon137_Then:
    goto L354;

  anon136_Then:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_450 := strConst__li2bpl3;
    call {:si_unique_call 1127} vslice_dummy_var_326 := CyyDbgPrintEx(9, Tmp_450);
    call {:si_unique_call 1128} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1129} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := 0;
    goto L1;

  anon134_Then:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto L338;

  anon135_Then:
    Tmp_474 := strConst__li2bpl138;
    call {:si_unique_call 1130} vslice_dummy_var_327 := CyyDbgPrintEx(12, Tmp_474);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_15;
    Tmp_447 := strConst__li2bpl3;
    call {:si_unique_call 1131} vslice_dummy_var_328 := CyyDbgPrintEx(9, Tmp_447);
    call {:si_unique_call 1132} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1133} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;

  anon133_Then:
    assume {:partition} status_15 != 259;
    goto L330;

  anon179_Then:
    assume {:partition} pResFiltEvent == 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_490 := strConst__li2bpl3;
    call {:si_unique_call 1134} vslice_dummy_var_329 := CyyDbgPrintEx(9, Tmp_490);
    call {:si_unique_call 1135} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1136} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := -1073741670;
    goto L1;

  anon159_Then:
    Tmp_466 := strConst__li2bpl129;
    call {:si_unique_call 1137} vslice_dummy_var_317 := CyyDbgPrintEx(12, Tmp_466);
    goto L280;

  anon160_Then:
    Tmp_493 := strConst__li2bpl139;
    call {:si_unique_call 1138} vslice_dummy_var_313 := CyyDbgPrintEx(12, Tmp_493);
    call {:si_unique_call 1139} sdv_434 := ExAllocatePoolWithTag(0, 16, -797345469);
    pQueryCapsEvent := sdv_434;
    goto anon177_Then, anon177_Else;

  anon177_Else:
    assume {:partition} pQueryCapsEvent != 0;
    call {:si_unique_call 1140} KeInitializeEvent(pQueryCapsEvent, 1, 0);
    call {:si_unique_call 1141} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1142} sdv_IoSetCompletionRoutine(PIrp_3, li2bplFunctionConstant218, pQueryCapsEvent, 1, 1, 1);
    call {:si_unique_call 1143} status_15 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_3);
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} status_15 == 259;
    call {:si_unique_call 1144} vslice_dummy_var_276 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L447;

  L447:
    call {:si_unique_call 1145} sdv_ExFreePool(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    havoc status_15;
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon178_Then, anon178_Else;

  anon178_Else:
    goto L472;

  L472:
    Tmp_448 := strConst__li2bpl3;
    call {:si_unique_call 1146} vslice_dummy_var_315 := CyyDbgPrintEx(9, Tmp_448);
    call {:si_unique_call 1147} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1148} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;

  anon178_Then:
    Tmp_487 := strConst__li2bpl140;
    call {:si_unique_call 1149} vslice_dummy_var_314 := CyyDbgPrintEx(12, Tmp_487);
    call {:si_unique_call 1150} pIrpStack_3 := sdv_IoGetCurrentIrpStackLocation(PIrp_3);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    havoc pDevCaps;
    cap := 2;
    goto L465;

  L465:
    call {:si_unique_call 1151} Tmp_441, cap, Tmp_477, Tmp_478, Tmp_516 := CyyPnpDispatch_loop_L465(Tmp_441, pDevExt_10, cap, Tmp_477, Tmp_478, pDevCaps, Tmp_516);
    goto L465_last;

  L465_last:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} 7 > cap;
    Tmp_516 := cap;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_478;
    Tmp_441 := cap;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    havoc Tmp_477;
    assume {:nonnull} Tmp_477 != 0;
    assume Tmp_477 > 0;
    assume {:nonnull} Tmp_478 != 0;
    assume Tmp_478 > 0;
    cap := cap + 1;
    goto anon143_Else_dummy;

  anon143_Else_dummy:
    assume false;
    return;

  anon143_Then:
    assume {:partition} cap >= 7;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_510;
    assume {:nonnull} Tmp_510 != 0;
    assume Tmp_510 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    havoc Tmp_444;
    assume {:nonnull} Tmp_444 != 0;
    assume Tmp_444 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevCaps != 0;
    assume pDevCaps > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto L472;

  anon142_Then:
    assume {:partition} status_15 != 259;
    goto L447;

  anon177_Then:
    assume {:partition} pQueryCapsEvent == 0;
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_502 := strConst__li2bpl3;
    call {:si_unique_call 1152} vslice_dummy_var_316 := CyyDbgPrintEx(9, Tmp_502);
    call {:si_unique_call 1153} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1154} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := -1073741670;
    goto L1;

  anon161_Then:
    Tmp_464 := strConst__li2bpl128;
    call {:si_unique_call 1155} vslice_dummy_var_312 := CyyDbgPrintEx(12, Tmp_464);
    goto L280;

  anon162_Then:
    Tmp_513 := strConst__li2bpl127;
    call {:si_unique_call 1156} vslice_dummy_var_305 := CyyDbgPrintEx(12, Tmp_513);
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon172_Then, anon172_Else;

  anon172_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon171_Then, anon171_Else;

  anon171_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon170_Then, anon170_Else;

  anon170_Else:
    assume {:nonnull} pIrpStack_3 != 0;
    assume pIrpStack_3 > 0;
    goto anon169_Then, anon169_Else;

  anon169_Else:
    Tmp_449 := strConst__li2bpl146;
    call {:si_unique_call 1157} vslice_dummy_var_310 := CyyDbgPrintEx(12, Tmp_449);
    goto L513;

  L513:
    call {:si_unique_call 1158} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1159} status_15 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    Tmp_439 := status_15;
    goto L1;

  anon169_Then:
    Tmp_458 := strConst__li2bpl141;
    call {:si_unique_call 1160} vslice_dummy_var_311 := CyyDbgPrintEx(12, Tmp_458);
    goto L513;

  anon170_Then:
    Tmp_476 := strConst__li2bpl145;
    call {:si_unique_call 1161} vslice_dummy_var_309 := CyyDbgPrintEx(12, Tmp_476);
    goto L513;

  anon171_Then:
    Tmp_462 := strConst__li2bpl144;
    call {:si_unique_call 1162} vslice_dummy_var_308 := CyyDbgPrintEx(12, Tmp_462);
    goto L513;

  anon172_Then:
    Tmp_483 := strConst__li2bpl143;
    call {:si_unique_call 1163} vslice_dummy_var_307 := CyyDbgPrintEx(12, Tmp_483);
    goto L513;

  anon144_Then:
    Tmp_479 := strConst__li2bpl142;
    call {:si_unique_call 1164} vslice_dummy_var_306 := CyyDbgPrintEx(12, Tmp_479);
    goto L513;

  anon163_Then:
    Tmp_491 := strConst__li2bpl126;
    call {:si_unique_call 1165} vslice_dummy_var_303 := CyyDbgPrintEx(12, Tmp_491);
    Tmp_511 := strConst__li2bpl135;
    call {:si_unique_call 1166} vslice_dummy_var_304 := CyyDbgPrintEx(12, Tmp_511);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon145_Then, anon145_Else;

  anon145_Else:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1167} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 2, 0);
    goto L530;

  L530:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1168} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1169} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon145_Then:
    goto L530;

  anon164_Then:
    Tmp_489 := strConst__li2bpl147;
    call {:si_unique_call 1170} vslice_dummy_var_299 := CyyDbgPrintEx(12, Tmp_489);
    Tmp_495 := strConst__li2bpl135;
    call {:si_unique_call 1171} vslice_dummy_var_300 := CyyDbgPrintEx(12, Tmp_495);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon146_Then, anon146_Else;

  anon146_Else:
    call {:si_unique_call 1172} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1173} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon146_Then:
    call {:si_unique_call 1174} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon147_Then, anon147_Else;

  anon147_Else:
    call {:si_unique_call 1175} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_512 := strConst__li2bpl152;
    call {:si_unique_call 1176} vslice_dummy_var_301 := CyyDbgPrintEx(12, Tmp_512);
    Tmp_465 := strConst__li2bpl3;
    call {:si_unique_call 1177} vslice_dummy_var_302 := CyyDbgPrintEx(9, Tmp_465);
    call {:si_unique_call 1178} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1179} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := 17;
    goto L1;

  anon147_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1180} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 2, 1);
    call {:si_unique_call 1181} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1182} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1183} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon165_Then:
    Tmp_456 := strConst__li2bpl148;
    call {:si_unique_call 1184} vslice_dummy_var_295 := CyyDbgPrintEx(12, Tmp_456);
    Tmp_499 := strConst__li2bpl135;
    call {:si_unique_call 1185} vslice_dummy_var_296 := CyyDbgPrintEx(12, Tmp_499);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1186} CyySetDeviceFlags(pDevExt_10, Flags__CYY_DEVICE_EXTENSION(pDevExt_10), 2, 1);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1187} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 4, 1);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1188} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 2, 0);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1189} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1190} vslice_dummy_var_297 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1191} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1192} sdv_397 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    pendingIRPs := sdv_397;
    goto anon176_Then, anon176_Else;

  anon176_Else:
    assume {:partition} pendingIRPs != 0;
    call {:si_unique_call 1193} vslice_dummy_var_277 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L617;

  L617:
    call {:si_unique_call 1194} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1195} vslice_dummy_var_298 := sdv_InterlockedIncrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon148_Then, anon148_Else;

  anon148_Else:
    call {:si_unique_call 1196} CyyReleaseResources(pDevExt_10);
    goto L624;

  L624:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1197} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1198} Tmp_439 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_3);
    goto L1;

  anon148_Then:
    goto L624;

  anon176_Then:
    assume {:partition} pendingIRPs == 0;
    goto L617;

  anon166_Then:
    Tmp_508 := strConst__li2bpl125;
    call {:si_unique_call 1199} vslice_dummy_var_293 := CyyDbgPrintEx(12, Tmp_508);
    Tmp_504 := strConst__li2bpl135;
    call {:si_unique_call 1200} vslice_dummy_var_294 := CyyDbgPrintEx(12, Tmp_504);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1201} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 1, 0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1202} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1203} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon167_Then:
    Tmp_481 := strConst__li2bpl149;
    call {:si_unique_call 1204} vslice_dummy_var_290 := CyyDbgPrintEx(12, Tmp_481);
    Tmp_472 := strConst__li2bpl135;
    call {:si_unique_call 1205} vslice_dummy_var_291 := CyyDbgPrintEx(12, Tmp_472);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1206} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 1, 1);
    call {:si_unique_call 1207} CyyKillPendingIrps(PDevObj_12);
    call {:si_unique_call 1208} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1209} vslice_dummy_var_292 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1210} Tmp_467 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1211} sdv_479 := sdv_InterlockedDecrement(Tmp_467);
    assume {:nonnull} Tmp_467 != 0;
    assume Tmp_467 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    pendingIRPs_2 := sdv_479;
    goto anon175_Then, anon175_Else;

  anon175_Else:
    assume {:partition} pendingIRPs_2 != 0;
    call {:si_unique_call 1212} vslice_dummy_var_278 := KeWaitForSingleObject(0, 0, 0, 0, 0);
    goto L671;

  L671:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon149_Then, anon149_Else;

  anon149_Else:
    goto L678;

  L678:
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1213} sdv_IoSkipCurrentIrpStackLocation(PIrp_3);
    call {:si_unique_call 1214} status_15 := sdv_IoCallDriver(pLowerDevObj_4, PIrp_3);
    call {:si_unique_call 1215} vslice_dummy_var_279 := CyyRemoveDevObj(PDevObj_12);
    Tmp_439 := status_15;
    goto L1;

  anon149_Then:
    call {:si_unique_call 1216} CyyDisableInterfacesResources(PDevObj_12, 1);
    goto L678;

  anon175_Then:
    assume {:partition} pendingIRPs_2 == 0;
    goto L671;

  anon168_Then:
    Tmp_498 := strConst__li2bpl150;
    call {:si_unique_call 1217} vslice_dummy_var_286 := CyyDbgPrintEx(12, Tmp_498);
    Tmp_446 := strConst__li2bpl135;
    call {:si_unique_call 1218} vslice_dummy_var_287 := CyyDbgPrintEx(12, Tmp_446);
    call {:si_unique_call 1219} ExAcquireFastMutex(0);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    goto anon150_Then, anon150_Else;

  anon150_Else:
    call {:si_unique_call 1220} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_480 := strConst__li2bpl152;
    call {:si_unique_call 1221} vslice_dummy_var_288 := CyyDbgPrintEx(12, Tmp_480);
    Tmp_443 := strConst__li2bpl3;
    call {:si_unique_call 1222} vslice_dummy_var_289 := CyyDbgPrintEx(9, Tmp_443);
    call {:si_unique_call 1223} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1224} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := 17;
    goto L1;

  anon150_Then:
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1225} CyySetDeviceFlags(pDevExt_10, DevicePNPAccept__CYY_DEVICE_EXTENSION(pDevExt_10), 1, 1);
    call {:si_unique_call 1226} ExReleaseFastMutex(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    call {:si_unique_call 1227} sdv_IoCopyCurrentIrpStackLocationToNext(PIrp_3);
    call {:si_unique_call 1228} Tmp_439 := CyyIoCallDriver(pDevExt_10, pLowerDevObj_4, PIrp_3);
    goto L1;

  anon126_Then:
    Tmp_507 := strConst__li2bpl151;
    call {:si_unique_call 1229} vslice_dummy_var_284 := CyyDbgPrintEx(12, Tmp_507);
    call {:si_unique_call 1230} MmLockPagableSectionByHandle(0);
    assume {:nonnull} pDevExt_10 != 0;
    assume pDevExt_10 > 0;
    call {:si_unique_call 1231} status_15 := CyyStartDevice(PDevObj_12, PIrp_3);
    call {:si_unique_call 1232} vslice_dummy_var_280 := CyyGotoPowerState(PDevObj_12, pDevExt_10, 4);
    call {:si_unique_call 1233} MmUnlockPagableImageSection(0);
    assume {:nonnull} PIrp_3 != 0;
    assume PIrp_3 > 0;
    Tmp_505 := strConst__li2bpl3;
    call {:si_unique_call 1234} vslice_dummy_var_285 := CyyDbgPrintEx(9, Tmp_505);
    call {:si_unique_call 1235} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1236} CyyIRPEpilogue(pDevExt_10);
    Tmp_439 := status_15;
    goto L1;
}



procedure {:origName "SLIC_CyyPnpDispatch_exit"} {:osmodel} SLIC_CyyPnpDispatch_exit(actual_caller: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyPnpDispatch_exit"} {:osmodel} SLIC_CyyPnpDispatch_exit(actual_caller: int)
{
  var {:pointer} caller: int;

  anon0:
    caller := actual_caller;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1237} SLIC_ABORT_6_0(caller);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_CyyWrite_exit"} {:osmodel} SLIC_CyyWrite_exit(actual_caller_1: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyWrite_exit"} {:osmodel} SLIC_CyyWrite_exit(actual_caller_1: int)
{
  var {:pointer} caller_1: int;

  anon0:
    caller_1 := actual_caller_1;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1238} SLIC_ABORT_16_0(caller_1);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_CyyCleanup_exit"} {:osmodel} SLIC_CyyCleanup_exit(actual_caller_2: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyCleanup_exit"} {:osmodel} SLIC_CyyCleanup_exit(actual_caller_2: int)
{
  var {:pointer} caller_2: int;

  anon0:
    caller_2 := actual_caller_2;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1239} SLIC_ABORT_10_0(caller_2);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_3: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_14_0"} SLIC_ABORT_14_0(actual_caller_3: int)
{
  var {:pointer} caller_3: int;

  anon0:
    caller_3 := actual_caller_3;
    call {:si_unique_call 1240} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "_sdv_init21"} {:osmodel} _sdv_init21();
  modifies SLAM_guard_S_1, SLAM_guard_S_0, IoSetCancelRoutineCalled, IrpPended, IrpCancelChecked, yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 1;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 1;
  free ensures old(IrpPended) == 0 ==> IrpPended != 1;
  free ensures old(IrpPended) == 1 ==> IrpPended != 1;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> yogi_error == old(yogi_error);
  free ensures yogi_error == 0;
  free ensures IoSetCancelRoutineCalled == 0;
  free ensures IrpPended == 0;
  free ensures yogi_error == 0;
  free ensures IrpCancelChecked == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init21"} {:osmodel} _sdv_init21()
{

  anon0:
    SLAM_guard_S_1 := SLAM_guard_S_1_init;
    SLAM_guard_S_0 := SLAM_guard_S_0_init;
    IoSetCancelRoutineCalled := 0;
    IrpPended := 0;
    IrpCancelChecked := 0;
    yogi_error := 0;
    assume sdv_cancelFptr == 0;
    return;
}



procedure {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_4: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_20_0"} SLIC_ABORT_20_0(actual_caller_4: int)
{
  var {:pointer} caller_4: int;

  anon0:
    caller_4 := actual_caller_4;
    call {:si_unique_call 1241} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_5: int);
  modifies IrpPended;
  free ensures old(IrpPended) == 0 ==> IrpPended != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures IrpPended == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_sdv_IoMarkIrpPending_entry"} {:osmodel} SLIC_sdv_IoMarkIrpPending_entry(actual_caller_5: int)
{

  anon0:
    IrpPended := 1;
    return;
}



procedure {:origName "SLIC_CyyPowerDispatch_exit"} {:osmodel} SLIC_CyyPowerDispatch_exit(actual_caller_6: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyPowerDispatch_exit"} {:osmodel} SLIC_CyyPowerDispatch_exit(actual_caller_6: int)
{
  var {:pointer} caller_6: int;

  anon0:
    caller_6 := actual_caller_6;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1242} SLIC_ABORT_8_0(caller_6);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC__read_via_variable_1"} {:osmodel} SLIC__read_via_variable_1(actual_caller_7: int, actual_SLIC: int);
  modifies IrpCancelChecked;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures IrpCancelChecked == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC__read_via_variable_1"} {:osmodel} SLIC__read_via_variable_1(actual_caller_7: int, actual_SLIC: int)
{

  anon0:
    IrpCancelChecked := 1;
    return;
}



procedure {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_8: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_16_0"} SLIC_ABORT_16_0(actual_caller_8: int)
{
  var {:pointer} caller_8: int;

  anon0:
    caller_8 := actual_caller_8;
    call {:si_unique_call 1243} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_9: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_18_0"} SLIC_ABORT_18_0(actual_caller_9: int)
{
  var {:pointer} caller_9: int;

  anon0:
    caller_9 := actual_caller_9;
    call {:si_unique_call 1244} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_10: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_10_0"} SLIC_ABORT_10_0(actual_caller_10: int)
{
  var {:pointer} caller_10: int;

  anon0:
    caller_10 := actual_caller_10;
    call {:si_unique_call 1245} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_CyyFlush_exit"} {:osmodel} SLIC_CyyFlush_exit(actual_caller_11: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyFlush_exit"} {:osmodel} SLIC_CyyFlush_exit(actual_caller_11: int)
{
  var {:pointer} caller_11: int;

  anon0:
    caller_11 := actual_caller_11;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1246} SLIC_ABORT_14_0(caller_11);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_13: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_22_0"} SLIC_ABORT_22_0(actual_caller_13: int)
{
  var {:pointer} caller_13: int;

  anon0:
    caller_13 := actual_caller_13;
    call {:si_unique_call 1247} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_ABORT_8_0"} SLIC_ABORT_8_0(actual_caller_14: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_8_0"} SLIC_ABORT_8_0(actual_caller_14: int)
{
  var {:pointer} caller_14: int;

  anon0:
    caller_14 := actual_caller_14;
    call {:si_unique_call 1248} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_15: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_12_0"} SLIC_ABORT_12_0(actual_caller_15: int)
{
  var {:pointer} caller_15: int;

  anon0:
    caller_15 := actual_caller_15;
    call {:si_unique_call 1249} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_CyyIoControl_exit"} {:osmodel} SLIC_CyyIoControl_exit(actual_caller_16: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyIoControl_exit"} {:osmodel} SLIC_CyyIoControl_exit(actual_caller_16: int)
{
  var {:pointer} caller_16: int;

  anon0:
    caller_16 := actual_caller_16;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1250} SLIC_ABORT_12_0(caller_16);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_sdv_IoSetCancelRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCancelRoutine_entry(actual_caller_17: int, actual_sdv_495: int);
  modifies IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_sdv_IoSetCancelRoutine_entry"} {:osmodel} SLIC_sdv_IoSetCancelRoutine_entry(actual_caller_17: int, actual_sdv_495: int)
{
  var {:scalar} sdv_495: int;

  anon0:
    sdv_495 := actual_sdv_495;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} sdv_495 != 0;
    IoSetCancelRoutineCalled := 1;
    goto L2;

  L2:
    return;

  anon3_Then:
    assume {:partition} sdv_495 == 0;
    goto L2;
}



procedure {:origName "SLIC_ABORT_6_0"} SLIC_ABORT_6_0(actual_caller_18: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ABORT_6_0"} SLIC_ABORT_6_0(actual_caller_18: int)
{
  var {:pointer} caller_18: int;

  anon0:
    caller_18 := actual_caller_18;
    call {:si_unique_call 1251} SLIC_ERROR_ROUTINE(strConst__li2bpl162);
    return;
}



procedure {:origName "SLIC_CyyCreateOpen_exit"} {:osmodel} SLIC_CyyCreateOpen_exit(actual_caller_19: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyCreateOpen_exit"} {:osmodel} SLIC_CyyCreateOpen_exit(actual_caller_19: int)
{
  var {:pointer} caller_19: int;

  anon0:
    caller_19 := actual_caller_19;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1252} SLIC_ABORT_22_0(caller_19);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_CyyClose_exit"} {:osmodel} SLIC_CyyClose_exit(actual_caller_21: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyClose_exit"} {:osmodel} SLIC_CyyClose_exit(actual_caller_21: int)
{
  var {:pointer} caller_21: int;

  anon0:
    caller_21 := actual_caller_21;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1253} SLIC_ABORT_20_0(caller_21);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_CyyRead_exit"} {:osmodel} SLIC_CyyRead_exit(actual_caller_22: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 0 ==> yogi_error == 0;
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_CyyRead_exit"} {:osmodel} SLIC_CyyRead_exit(actual_caller_22: int)
{
  var {:pointer} caller_22: int;

  anon0:
    caller_22 := actual_caller_22;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} IrpPended != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} IoSetCancelRoutineCalled != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} IrpCancelChecked == 0;
    call {:si_unique_call 1254} SLIC_ABORT_18_0(caller_22);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error != 1;
    goto L2;

  L2:
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon10_Then:
    assume {:partition} IrpCancelChecked != 0;
    goto L2;

  anon11_Then:
    assume {:partition} IoSetCancelRoutineCalled == 0;
    goto L2;

  anon9_Then:
    assume {:partition} IrpPended == 0;
    goto L2;
}



procedure {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int);
  modifies yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> yogi_error == 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 0 ==> yogi_error == 1;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 1;
  free ensures old(IrpPended) == 0 ==> yogi_error == 1;
  free ensures old(IrpPended) == 1 ==> yogi_error == 1;
  free ensures yogi_error == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "SLIC_ERROR_ROUTINE"} SLIC_ERROR_ROUTINE(actual_msg: int)
{

  anon0:
    yogi_error := 1;
    return;
}



procedure {:origName "CyyClrRTS"} CyyClrRTS(actual_Context: int) returns (Tmp_517: int);
  modifies alloc;
  free ensures Tmp_517 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyClrRTS"} CyyClrRTS(actual_Context: int) returns (Tmp_517: int)
{
  var {:pointer} chip_2: int;
  var {:pointer} Tmp_518: int;
  var {:scalar} Tmp_520: int;
  var {:pointer} Extension_8: int;
  var {:pointer} Context: int;
  var vslice_dummy_var_344: int;

  anon0:
    Context := actual_Context;
    call {:si_unique_call 1255} Tmp_518 := __HAVOC_malloc(124);
    Extension_8 := Context;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    havoc chip_2;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    havoc Tmp_520;
    Tmp_518 := strConst__li2bpl163;
    call {:si_unique_call 1256} vslice_dummy_var_344 := CyyDbgPrintEx(13, Tmp_518);
    assume {:nonnull} Extension_8 != 0;
    assume Extension_8 > 0;
    Tmp_517 := 0;
    return;
}



procedure {:origName "CyyClrDTR"} CyyClrDTR(actual_Context_1: int) returns (Tmp_524: int);
  modifies alloc;
  free ensures Tmp_524 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyClrDTR"} CyyClrDTR(actual_Context_1: int) returns (Tmp_524: int)
{
  var {:pointer} Tmp_526: int;
  var {:pointer} chip_3: int;
  var {:scalar} Tmp_528: int;
  var {:pointer} Extension_9: int;
  var {:pointer} Context_1: int;
  var vslice_dummy_var_345: int;

  anon0:
    Context_1 := actual_Context_1;
    call {:si_unique_call 1257} Tmp_526 := __HAVOC_malloc(124);
    Extension_9 := Context_1;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    havoc chip_3;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    havoc Tmp_528;
    Tmp_526 := strConst__li2bpl164;
    call {:si_unique_call 1258} vslice_dummy_var_345 := CyyDbgPrintEx(13, Tmp_526);
    assume {:nonnull} Extension_9 != 0;
    assume Extension_9 > 0;
    Tmp_524 := 0;
    return;
}



procedure {:origName "_sdv_init14"} _sdv_init14();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init14"} _sdv_init14()
{
  var vslice_dummy_var_346: int;

  anon0:
    call {:si_unique_call 1259} vslice_dummy_var_346 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyStartPurge"} CyyStartPurge(actual_Extension_10: int) returns (Tmp_533: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures Tmp_533 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartPurge"} CyyStartPurge(actual_Extension_10: int) returns (Tmp_533: int)
{
  var {:pointer} Tmp_534: int;
  var {:pointer} Tmp_535: int;
  var {:scalar} Mask_2: int;
  var {:pointer} Tmp_536: int;
  var {:scalar} OldIrql_4: int;
  var {:pointer} NewIrp_1: int;
  var {:pointer} Tmp_537: int;
  var {:pointer} Tmp_538: int;
  var {:pointer} Extension_10: int;
  var vslice_dummy_var_347: int;
  var vslice_dummy_var_189: int;
  var vslice_dummy_var_190: int;
  var vslice_dummy_var_191: int;

  anon0:
    call {:si_unique_call 1260} NewIrp_1 := __HAVOC_malloc(4);
    Extension_10 := actual_Extension_10;
    goto L5;

  L5:
    call {:si_unique_call 1261} Tmp_534, Tmp_535, Mask_2, Tmp_536, OldIrql_4, Tmp_537, Tmp_538, vslice_dummy_var_347 := CyyStartPurge_loop_L5(Tmp_534, Tmp_535, Mask_2, Tmp_536, OldIrql_4, NewIrp_1, Tmp_537, Tmp_538, Extension_10, vslice_dummy_var_347);
    goto L5_last;

  L5_last:
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc Tmp_538;
    assume {:nonnull} Tmp_538 != 0;
    assume Tmp_538 > 0;
    havoc Tmp_537;
    assume {:nonnull} Tmp_537 != 0;
    assume Tmp_537 > 0;
    havoc Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(Mask_2, 1) != 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc vslice_dummy_var_189;
    call {:si_unique_call 1262} CyyKillAllReadsOrWrites(vslice_dummy_var_189, WriteQueue__CYY_DEVICE_EXTENSION(Extension_10), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_10));
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc vslice_dummy_var_190;
    call {:si_unique_call 1263} CyyKillAllReadsOrWrites(vslice_dummy_var_190, WriteQueue__CYY_DEVICE_EXTENSION(Extension_10), CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_10));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(Mask_2, 2) != 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc vslice_dummy_var_191;
    call {:si_unique_call 1264} CyyKillAllReadsOrWrites(vslice_dummy_var_191, ReadQueue__CYY_DEVICE_EXTENSION(Extension_10), CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_10));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(Mask_2, 8) != 0;
    call {:si_unique_call 1265} Tmp_536 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    call {:si_unique_call 1266} sdv_KeAcquireSpinLock(0, Tmp_536);
    assume {:nonnull} Tmp_536 != 0;
    assume Tmp_536 > 0;
    havoc OldIrql_4;
    call {:si_unique_call 1267} vslice_dummy_var_347 := KeSynchronizeExecution(0, li2bplFunctionConstant437, 0);
    call {:si_unique_call 1268} sdv_KeReleaseSpinLock(0, OldIrql_4);
    goto L18;

  L18:
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc Tmp_535;
    assume {:nonnull} Tmp_535 != 0;
    assume Tmp_535 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    havoc Tmp_534;
    assume {:nonnull} Tmp_534 != 0;
    assume Tmp_534 > 0;
    assume {:nonnull} Extension_10 != 0;
    assume Extension_10 > 0;
    call {:si_unique_call 1269} CyyGetNextIrp(CurrentPurgeIrp__CYY_DEVICE_EXTENSION(Extension_10), PurgeQueue__CYY_DEVICE_EXTENSION(Extension_10), NewIrp_1, 1, Extension_10);
    assume {:nonnull} NewIrp_1 != 0;
    assume NewIrp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    Tmp_533 := 0;
    return;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    assume false;
    return;

  anon10_Then:
    assume {:partition} BAND(Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(Mask_2, 1) == 0;
    goto L7;
}



procedure {:origName "_sdv_init16"} _sdv_init16();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init16"} _sdv_init16()
{
  var vslice_dummy_var_348: int;

  anon0:
    call {:si_unique_call 1270} vslice_dummy_var_348 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyKillAllStalled"} CyyKillAllStalled(actual_PDevObj_13: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyKillAllStalled"} CyyKillAllStalled(actual_PDevObj_13: int)
{
  var {:pointer} currentLastIrp: int;
  var {:pointer} Tmp_541: int;
  var {:scalar} cancelIrql: int;
  var {:pointer} pDevExt_11: int;
  var {:scalar} sdv_499: int;
  var {:pointer} sdv_500: int;
  var {:scalar} cancelRoutine_1: int;
  var {:pointer} PDevObj_13: int;
  var vslice_dummy_var_349: int;
  var vslice_dummy_var_350: int;
  var vslice_dummy_var_192: int;

  anon0:
    call {:si_unique_call 1271} vslice_dummy_var_349 := __HAVOC_malloc(4);
    PDevObj_13 := actual_PDevObj_13;
    assume {:nonnull} PDevObj_13 != 0;
    assume PDevObj_13 > 0;
    havoc pDevExt_11;
    call {:si_unique_call 1272} Tmp_541 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_541 != 0;
    assume Tmp_541 > 0;
    call {:si_unique_call 1273} IoAcquireCancelSpinLock(Tmp_541);
    assume {:nonnull} Tmp_541 != 0;
    assume Tmp_541 > 0;
    havoc cancelIrql;
    goto L10;

  L10:
    call {:si_unique_call 1274} currentLastIrp, Tmp_541, cancelIrql, sdv_499, sdv_500, cancelRoutine_1, vslice_dummy_var_350 := CyyKillAllStalled_loop_L10(currentLastIrp, Tmp_541, cancelIrql, pDevExt_11, sdv_499, sdv_500, cancelRoutine_1, PDevObj_13, vslice_dummy_var_350);
    goto L10_last;

  L10_last:
    call {:si_unique_call 1286} sdv_499 := sdv_IsListEmpty(0);
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_499 == 0;
    assume {:nonnull} pDevExt_11 != 0;
    assume pDevExt_11 > 0;
    havoc vslice_dummy_var_192;
    call {:si_unique_call 1275} sdv_500 := sdv_containing_record(vslice_dummy_var_192, 88);
    currentLastIrp := sdv_500;
    call {:si_unique_call 1276} vslice_dummy_var_350 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    havoc cancelRoutine_1;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    assume {:nonnull} currentLastIrp != 0;
    assume currentLastIrp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 1277} CyyCancelCurrentWrite(PDevObj_13, currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 1278} Tmp_541 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_541 != 0;
    assume Tmp_541 > 0;
    call {:si_unique_call 1279} IoAcquireCancelSpinLock(Tmp_541);
    assume {:nonnull} Tmp_541 != 0;
    assume Tmp_541 > 0;
    havoc cancelIrql;
    goto L32_dummy;

  L32_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant199;
    call {:si_unique_call 1280} CyyCancelCurrentXoff(PDevObj_13, currentLastIrp);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant125;
    call {:si_unique_call 1281} CyyCancelImmediate(PDevObj_13, currentLastIrp);
    goto L32;

  anon15_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 1282} CyyCancelQueued(PDevObj_13, currentLastIrp);
    goto L32;

  anon14_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant179;
    call {:si_unique_call 1283} CyyCancelWait(PDevObj_13, currentLastIrp);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 1284} CyyFilterCancelQueued(PDevObj_13, currentLastIrp);
    goto L32;

  anon13_Then:
    assume {:partition} sdv_499 != 0;
    call {:si_unique_call 1285} IoReleaseCancelSpinLock(cancelIrql);
    return;
}



procedure {:origName "CyyFilterIrps"} CyyFilterIrps(actual_PIrp_4: int, actual_PDevExt_6: int) returns (Tmp_543: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures Tmp_543 == 0 || Tmp_543 == -1073741536 || Tmp_543 == 259 || Tmp_543 == -1073741738;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyFilterIrps"} CyyFilterIrps(actual_PIrp_4: int, actual_PDevExt_6: int) returns (Tmp_543: int)
{
  var {:scalar} oldIrqlFlags: int;
  var {:scalar} oldIrql_4: int;
  var {:pointer} pIrpStack_4: int;
  var {:pointer} Tmp_544: int;
  var {:pointer} PIrp_4: int;
  var {:pointer} PDevExt_6: int;
  var vslice_dummy_var_351: int;
  var vslice_dummy_var_352: int;

  anon0:
    PIrp_4 := actual_PIrp_4;
    PDevExt_6 := actual_PDevExt_6;
    call {:si_unique_call 1287} pIrpStack_4 := sdv_IoGetCurrentIrpStackLocation(PIrp_4);
    call {:si_unique_call 1288} Tmp_544 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    call {:si_unique_call 1289} sdv_KeAcquireSpinLock(0, Tmp_544);
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    havoc oldIrqlFlags;
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    goto L14;

  L14:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    goto L16;

  L16:
    call {:si_unique_call 1290} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    Tmp_543 := 0;
    goto L1;

  L1:
    return;

  anon27_Then:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_543 := -1073741738;
    goto L1;

  anon25_Then:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1291} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    assume {:nonnull} pIrpStack_4 != 0;
    assume pIrpStack_4 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    Tmp_543 := 0;
    goto L1;

  anon30_Then:
    call {:si_unique_call 1292} Tmp_544 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    call {:si_unique_call 1293} IoAcquireCancelSpinLock(Tmp_544);
    assume {:nonnull} Tmp_544 != 0;
    assume Tmp_544 > 0;
    havoc oldIrql_4;
    call {:si_unique_call 1294} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    call {:si_unique_call 1295} IoReleaseCancelSpinLock(oldIrql_4);
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    Tmp_543 := -1073741536;
    goto L1;

  anon32_Then:
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume PIrp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1296} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L74;

  L74:
    call {:si_unique_call 1297} sdv_IoMarkIrpPending(0);
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    assume {:nonnull} PIrp_4 != 0;
    assume PIrp_4 > 0;
    call {:si_unique_call 1298} vslice_dummy_var_351 := sdv_InsertTailList(StalledIrpQueue__CYY_DEVICE_EXTENSION(PDevExt_6), ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(PIrp_4))));
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume PIrp_4 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1299} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant151);
    goto L77;

  L77:
    call {:si_unique_call 1300} vslice_dummy_var_352 := sdv_IoSetCancelRoutine(PIrp_4, li2bplFunctionConstant151);
    call {:si_unique_call 1301} IoReleaseCancelSpinLock(oldIrql_4);
    Tmp_543 := 259;
    goto L1;

  anon31_Then:
    assume !(PIrp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L77;

  anon33_Then:
    assume !(PIrp_4 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L74;

  anon29_Then:
    call {:si_unique_call 1302} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_543 := 0;
    goto L1;

  anon28_Then:
    goto L16;

  anon26_Then:
    goto L16;

  anon23_Then:
    assume {:nonnull} PDevExt_6 != 0;
    assume PDevExt_6 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 1303} sdv_KeReleaseSpinLock(0, oldIrqlFlags);
    Tmp_543 := 0;
    goto L1;

  anon24_Then:
    goto L14;
}



procedure {:origName "CyyPoCallDriver"} CyyPoCallDriver(actual_PDevExt_7: int, actual_PDevObj_14: int, actual_PIrp_5: int) returns (Tmp_545: int);
  modifies alloc;
  free ensures Tmp_545 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyPoCallDriver"} CyyPoCallDriver(actual_PDevExt_7: int, actual_PDevObj_14: int, actual_PIrp_5: int) returns (Tmp_545: int)
{
  var {:scalar} status_16: int;
  var {:pointer} PDevExt_7: int;
  var {:pointer} PIrp_5: int;

  anon0:
    PDevExt_7 := actual_PDevExt_7;
    PIrp_5 := actual_PIrp_5;
    call {:si_unique_call 1304} status_16 := PoCallDriver(0, PIrp_5);
    call {:si_unique_call 1305} CyyIRPEpilogue(PDevExt_7);
    Tmp_545 := status_16;
    return;
}



procedure {:origName "CyyUnstallIrps"} CyyUnstallIrps(actual_PDevExt_8: int);
  modifies alloc, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyUnstallIrps"} CyyUnstallIrps(actual_PDevExt_8: int)
{
  var {:pointer} Tmp_547: int;
  var {:pointer} Tmp_548: int;
  var {:pointer} sdv_508: int;
  var {:pointer} Tmp_549: int;
  var {:scalar} oldIrql_5: int;
  var {:pointer} pIrpStack_5: int;
  var {:scalar} Tmp_551: int;
  var {:pointer} pIrp_1: int;
  var {:pointer} Tmp_552: int;
  var {:pointer} pDevObj_2: int;
  var {:pointer} Tmp_553: int;
  var {:pointer} pDrvObj_1: int;
  var {:pointer} pIrpLink: int;
  var {:pointer} PDevExt_8: int;
  var vslice_dummy_var_353: int;
  var vslice_dummy_var_354: int;
  var vslice_dummy_var_355: int;
  var vslice_dummy_var_356: int;
  var vslice_dummy_var_357: int;
  var vslice_dummy_var_358: int;

  anon0:
    call {:si_unique_call 1306} vslice_dummy_var_353 := __HAVOC_malloc(4);
    PDevExt_8 := actual_PDevExt_8;
    call {:si_unique_call 1307} Tmp_547 := __HAVOC_malloc(124);
    call {:si_unique_call 1308} Tmp_549 := __HAVOC_malloc(112);
    call {:si_unique_call 1309} Tmp_552 := __HAVOC_malloc(84);
    call {:si_unique_call 1310} Tmp_553 := __HAVOC_malloc(68);
    Tmp_552 := strConst__li2bpl165;
    call {:si_unique_call 1311} vslice_dummy_var_355 := CyyDbgPrintEx(2, Tmp_552);
    call {:si_unique_call 1312} Tmp_548 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    call {:si_unique_call 1313} IoAcquireCancelSpinLock(Tmp_548);
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    havoc oldIrql_5;
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L16;

  L16:
    call {:si_unique_call 1314} Tmp_547, Tmp_548, sdv_508, Tmp_549, oldIrql_5, pIrpStack_5, Tmp_551, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, vslice_dummy_var_354, vslice_dummy_var_356, vslice_dummy_var_357 := CyyUnstallIrps_loop_L16(Tmp_547, Tmp_548, sdv_508, Tmp_549, oldIrql_5, pIrpStack_5, Tmp_551, pIrp_1, pDevObj_2, pDrvObj_1, pIrpLink, PDevExt_8, vslice_dummy_var_354, vslice_dummy_var_356, vslice_dummy_var_357);
    goto L16_last;

  L16_last:
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1315} sdv_508 := sdv_containing_record(pIrpLink, 88);
    pIrp_1 := sdv_508;
    call {:si_unique_call 1316} vslice_dummy_var_356 := sdv_RemoveEntryList(0);
    call {:si_unique_call 1317} pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(pIrp_1);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    havoc pDevObj_2;
    assume {:nonnull} pDevObj_2 != 0;
    assume pDevObj_2 > 0;
    havoc pDrvObj_1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume pIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1318} SLIC_sdv_IoSetCancelRoutine_entry(0, 0);
    goto L141;

  L141:
    call {:si_unique_call 1319} vslice_dummy_var_354 := sdv_IoSetCancelRoutine(pIrp_1, 0);
    call {:si_unique_call 1320} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_547 := strConst__li2bpl166;
    call {:si_unique_call 1321} vslice_dummy_var_357 := CyyDbgPrintEx(12, Tmp_547);
    assume {:nonnull} pIrpStack_5 != 0;
    assume pIrpStack_5 > 0;
    havoc Tmp_551;
    assume {:nonnull} pDrvObj_1 != 0;
    assume pDrvObj_1 > 0;
    havoc Tmp_549;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume Tmp_551 != 27;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume Tmp_551 != 26;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume Tmp_551 != 25;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume Tmp_551 != 24;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume Tmp_551 != 23;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume Tmp_551 != 22;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume Tmp_551 != 21;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume Tmp_551 != 20;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume Tmp_551 != 19;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume Tmp_551 != 18;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume Tmp_551 != 17;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume Tmp_551 != 16;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume Tmp_551 != 15;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume Tmp_551 != 14;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume Tmp_551 != 13;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume Tmp_551 != 12;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume Tmp_551 != 11;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume Tmp_551 != 10;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume Tmp_551 != 9;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume Tmp_551 != 8;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume Tmp_551 != 7;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume Tmp_551 != 6;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume Tmp_551 != 5;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume Tmp_551 != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume Tmp_551 != 3;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume Tmp_551 != 2;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume Tmp_551 != 1;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume false;
    return;

  anon90_Then:
    assume Tmp_551 == 0;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  L45:
    call {:si_unique_call 1322} Tmp_548 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    call {:si_unique_call 1323} IoAcquireCancelSpinLock(Tmp_548);
    assume {:nonnull} Tmp_548 != 0;
    assume Tmp_548 > 0;
    havoc oldIrql_5;
    assume {:nonnull} PDevExt_8 != 0;
    assume PDevExt_8 > 0;
    havoc pIrpLink;
    goto L45_dummy;

  L45_dummy:
    assume false;
    return;

  anon89_Then:
    assume Tmp_551 == 1;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon88_Then:
    assume Tmp_551 == 2;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon87_Then:
    assume Tmp_551 == 3;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon86_Then:
    assume Tmp_551 == 4;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon85_Then:
    assume Tmp_551 == 5;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon84_Then:
    assume Tmp_551 == 6;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon83_Then:
    assume Tmp_551 == 7;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon82_Then:
    assume Tmp_551 == 8;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon81_Then:
    assume Tmp_551 == 9;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon80_Then:
    assume Tmp_551 == 10;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon79_Then:
    assume Tmp_551 == 11;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon78_Then:
    assume Tmp_551 == 12;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon77_Then:
    assume Tmp_551 == 13;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon76_Then:
    assume Tmp_551 == 14;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon75_Then:
    assume Tmp_551 == 15;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon74_Then:
    assume Tmp_551 == 16;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon73_Then:
    assume Tmp_551 == 17;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon72_Then:
    assume Tmp_551 == 18;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon71_Then:
    assume Tmp_551 == 19;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon70_Then:
    assume Tmp_551 == 20;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon69_Then:
    assume Tmp_551 == 21;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon68_Then:
    assume Tmp_551 == 22;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon67_Then:
    assume Tmp_551 == 23;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon66_Then:
    assume Tmp_551 == 24;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon65_Then:
    assume Tmp_551 == 25;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon64_Then:
    assume Tmp_551 == 26;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon63_Then:
    assume Tmp_551 == 27;
    assume {:nonnull} Tmp_549 != 0;
    assume Tmp_549 > 0;
    goto L45;

  anon62_Then:
    assume !(pIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L141;

  anon61_Then:
    call {:si_unique_call 1324} IoReleaseCancelSpinLock(oldIrql_5);
    Tmp_553 := strConst__li2bpl167;
    call {:si_unique_call 1325} vslice_dummy_var_358 := CyyDbgPrintEx(2, Tmp_553);
    return;
}



procedure {:origName "CyyDpcEpilogue"} CyyDpcEpilogue(actual_PDevExt_9: int, actual_PDpc: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyDpcEpilogue"} CyyDpcEpilogue(actual_PDevExt_9: int, actual_PDpc: int)
{
  var {:scalar} pendingCnt: int;
  var {:pointer} Tmp_555: int;
  var {:pointer} PDevExt_9: int;
  var vslice_dummy_var_359: int;
  var vslice_dummy_var_360: int;

  anon0:
    call {:si_unique_call 1326} vslice_dummy_var_359 := __HAVOC_malloc(4);
    PDevExt_9 := actual_PDevExt_9;
    call {:si_unique_call 1327} Tmp_555 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    call {:si_unique_call 1328} pendingCnt := sdv_InterlockedDecrement(Tmp_555);
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    assume {:nonnull} Tmp_555 != 0;
    assume Tmp_555 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt == 0;
    assume {:nonnull} PDevExt_9 != 0;
    assume PDevExt_9 > 0;
    call {:si_unique_call 1329} vslice_dummy_var_360 := KeSetEvent(PendingDpcEvent__CYY_DEVICE_EXTENSION(PDevExt_9), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt != 0;
    goto L1;
}



procedure {:origName "CyyRundownIrpRefs"} CyyRundownIrpRefs(actual_CurrentOpIrp_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_PDevExt_10: int);
  modifies alloc, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyRundownIrpRefs"} CyyRundownIrpRefs(actual_CurrentOpIrp_1: int, actual_IntervalTimer: int, actual_TotalTimer: int, actual_PDevExt_10: int)
{
  var {:pointer} s_p_e_c_i_a_l_7: int;
  var {:pointer} sdv_515: int;
  var {:pointer} sdv_516: int;
  var {:pointer} s_p_e_c_i_a_l_8: int;
  var {:pointer} Tmp_556: int;
  var {:scalar} s_p_e_c_i_a_l_9: int;
  var {:scalar} sdv_518: int;
  var {:scalar} sdv_519: int;
  var {:pointer} sdv_520: int;
  var {:pointer} s_p_e_c_i_a_l_10: int;
  var {:scalar} s_p_e_c_i_a_l_11: int;
  var {:scalar} s_p_e_c_i_a_l_12: int;
  var {:pointer} CurrentOpIrp_1: int;
  var {:pointer} IntervalTimer: int;
  var {:pointer} TotalTimer: int;
  var {:pointer} PDevExt_10: int;
  var vslice_dummy_var_361: int;
  var vslice_dummy_var_362: int;
  var vslice_dummy_var_193: int;
  var vslice_dummy_var_194: int;
  var vslice_dummy_var_195: int;
  var vslice_dummy_var_196: int;

  anon0:
    call {:si_unique_call 1330} vslice_dummy_var_361 := __HAVOC_malloc(4);
    CurrentOpIrp_1 := actual_CurrentOpIrp_1;
    IntervalTimer := actual_IntervalTimer;
    TotalTimer := actual_TotalTimer;
    PDevExt_10 := actual_PDevExt_10;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc Tmp_556;
    assume {:nonnull} Tmp_556 != 0;
    assume Tmp_556 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    s_p_e_c_i_a_l_9 := 2;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_193;
    call {:si_unique_call 1331} sdv_515 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_193);
    assume {:nonnull} sdv_515 != 0;
    assume sdv_515 > 0;
    s_p_e_c_i_a_l_7 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_515)));
    assume {:nonnull} s_p_e_c_i_a_l_7 != 0;
    assume s_p_e_c_i_a_l_7 > 0;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1332} SLIC_sdv_IoSetCancelRoutine_entry(0, 0);
    goto L47;

  L47:
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_194;
    call {:si_unique_call 1333} vslice_dummy_var_362 := sdv_IoSetCancelRoutine(vslice_dummy_var_194, 0);
    goto L4;

  L4:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} IntervalTimer != 0;
    call {:si_unique_call 1334} sdv_518 := CyyCancelTimer(IntervalTimer, PDevExt_10);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} sdv_518 != 0;
    s_p_e_c_i_a_l_11 := 8;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_195;
    call {:si_unique_call 1335} sdv_520 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_195);
    assume {:nonnull} sdv_520 != 0;
    assume sdv_520 > 0;
    s_p_e_c_i_a_l_10 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_520)));
    assume {:nonnull} s_p_e_c_i_a_l_10 != 0;
    assume s_p_e_c_i_a_l_10 > 0;
    goto L16;

  L16:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} TotalTimer != 0;
    call {:si_unique_call 1336} sdv_519 := CyyCancelTimer(TotalTimer, PDevExt_10);
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} sdv_519 != 0;
    s_p_e_c_i_a_l_12 := 4;
    assume {:nonnull} CurrentOpIrp_1 != 0;
    assume CurrentOpIrp_1 > 0;
    havoc vslice_dummy_var_196;
    call {:si_unique_call 1337} sdv_516 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_196);
    assume {:nonnull} sdv_516 != 0;
    assume sdv_516 > 0;
    s_p_e_c_i_a_l_8 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_516)));
    assume {:nonnull} s_p_e_c_i_a_l_8 != 0;
    assume s_p_e_c_i_a_l_8 > 0;
    goto L1;

  L1:
    return;

  anon16_Then:
    assume {:partition} sdv_519 == 0;
    goto L1;

  anon14_Then:
    assume {:partition} TotalTimer == 0;
    goto L1;

  anon15_Then:
    assume {:partition} sdv_518 == 0;
    goto L16;

  anon13_Then:
    assume {:partition} IntervalTimer == 0;
    goto L16;

  anon18_Then:
    goto L47;

  anon17_Then:
    goto L4;
}



procedure {:origName "CyyStartOrQueue"} CyyStartOrQueue(actual_Extension_11: int, actual_Irp_5: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_559: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartOrQueue"} CyyStartOrQueue(actual_Extension_11: int, actual_Irp_5: int, actual_QueueToExamine: int, actual_CurrentOpIrp_2: int, actual_Starter: int) returns (Tmp_559: int)
{
  var {:pointer} Tmp_560: int;
  var {:pointer} irpSp: int;
  var {:pointer} sdv_521: int;
  var {:pointer} Tmp_561: int;
  var {:pointer} sdv_523: int;
  var {:pointer} sdv_525: int;
  var {:scalar} oldIrql_6: int;
  var {:pointer} sdv_526: int;
  var {:scalar} sdv_527: int;
  var {:pointer} sdv_530: int;
  var {:pointer} Extension_11: int;
  var {:pointer} Irp_5: int;
  var {:pointer} QueueToExamine: int;
  var {:pointer} CurrentOpIrp_2: int;
  var {:scalar} Starter: int;
  var vslice_dummy_var_363: int;
  var vslice_dummy_var_364: int;
  var vslice_dummy_var_365: int;

  anon0:
    Extension_11 := actual_Extension_11;
    Irp_5 := actual_Irp_5;
    QueueToExamine := actual_QueueToExamine;
    CurrentOpIrp_2 := actual_CurrentOpIrp_2;
    Starter := actual_Starter;
    call {:si_unique_call 1338} Tmp_561 := __HAVOC_malloc(72);
    call {:si_unique_call 1339} Tmp_560 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_560 != 0;
    assume Tmp_560 > 0;
    call {:si_unique_call 1340} IoAcquireCancelSpinLock(Tmp_560);
    assume {:nonnull} Tmp_560 != 0;
    assume Tmp_560 > 0;
    havoc oldIrql_6;
    call {:si_unique_call 1341} sdv_521 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_521 != 0;
    assume sdv_521 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    call {:si_unique_call 1342} sdv_526 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    assume {:nonnull} sdv_526 != 0;
    assume sdv_526 > 0;
    goto L18;

  L18:
    call {:si_unique_call 1343} sdv_527 := sdv_IsListEmpty(0);
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} sdv_527 == 0;
    goto L99;

  L99:
    call {:si_unique_call 1344} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    call {:si_unique_call 1345} irpSp := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    call {:si_unique_call 1346} IoReleaseCancelSpinLock(oldIrql_6);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 1347} sdv_ExFreePool(0);
    assume {:nonnull} irpSp != 0;
    assume irpSp > 0;
    goto L42;

  L42:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    Tmp_561 := strConst__li2bpl3;
    call {:si_unique_call 1348} vslice_dummy_var_365 := CyyDbgPrintEx(9, Tmp_561);
    call {:si_unique_call 1349} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1350} CyyIRPEpilogue(Extension_11);
    Tmp_559 := -1073741536;
    goto L1;

  L1:
    return;

  anon33_Then:
    goto L42;

  anon41_Then:
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume Irp_5 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1351} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L100;

  L100:
    call {:si_unique_call 1352} sdv_IoMarkIrpPending(0);
    assume {:nonnull} Irp_5 != 0;
    assume Irp_5 > 0;
    call {:si_unique_call 1353} vslice_dummy_var_363 := sdv_InsertTailList(QueueToExamine, ListEntry_unnamed_tag_7(Overlay_unnamed_tag_6(Tail__IRP(Irp_5))));
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume Irp_5 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1354} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant149);
    goto L103;

  L103:
    call {:si_unique_call 1355} vslice_dummy_var_364 := sdv_IoSetCancelRoutine(Irp_5, li2bplFunctionConstant149);
    call {:si_unique_call 1356} IoReleaseCancelSpinLock(oldIrql_6);
    Tmp_559 := 259;
    goto L1;

  anon34_Then:
    assume !(Irp_5 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L103;

  anon42_Then:
    assume !(Irp_5 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L100;

  anon30_Then:
    assume {:partition} sdv_527 != 0;
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto L99;

  anon31_Then:
    assume {:nonnull} CurrentOpIrp_2 != 0;
    assume CurrentOpIrp_2 > 0;
    call {:si_unique_call 1357} IoReleaseCancelSpinLock(oldIrql_6);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant113;
    call {:si_unique_call 1358} Tmp_559 := CyyStartFlush(Extension_11);
    goto L1;

  anon40_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant177;
    call {:si_unique_call 1359} Tmp_559 := CyyStartMask(Extension_11);
    goto L1;

  anon39_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant371;
    call {:si_unique_call 1360} Tmp_559 := CyyStartPurge(Extension_11);
    goto L1;

  anon38_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant376;
    call {:si_unique_call 1361} Tmp_559 := CyyStartRead(Extension_11);
    goto L1;

  anon32_Then:
    assume {:IndirectCall} true;
    assume Starter == li2bplFunctionConstant194;
    call {:si_unique_call 1362} Tmp_559 := CyyStartWrite#1(Extension_11);
    goto L1;

  anon29_Then:
    call {:si_unique_call 1363} sdv_525 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_525 != 0;
    assume sdv_525 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    call {:si_unique_call 1364} sdv_523 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_523 != 0;
    assume sdv_523 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    goto L78;

  L78:
    assume {:nonnull} Extension_11 != 0;
    assume Extension_11 > 0;
    goto L18;

  anon36_Then:
    call {:si_unique_call 1365} sdv_530 := sdv_IoGetCurrentIrpStackLocation(Irp_5);
    assume {:nonnull} sdv_530 != 0;
    assume sdv_530 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    goto L78;

  anon37_Then:
    goto L18;

  anon35_Then:
    goto L18;
}



procedure {:origName "CyyCancelQueued"} CyyCancelQueued(actual_DeviceObject_5: int, actual_Irp_6: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelQueued"} CyyCancelQueued(actual_DeviceObject_5: int, actual_Irp_6: int)
{
  var {:pointer} irpSp_1: int;
  var {:pointer} Tmp_562: int;
  var {:pointer} extension_3: int;
  var {:pointer} DeviceObject_5: int;
  var {:pointer} Irp_6: int;
  var vslice_dummy_var_366: int;
  var vslice_dummy_var_367: int;
  var vslice_dummy_var_368: int;
  var vslice_dummy_var_197: int;

  anon0:
    call {:si_unique_call 1366} vslice_dummy_var_366 := __HAVOC_malloc(4);
    DeviceObject_5 := actual_DeviceObject_5;
    Irp_6 := actual_Irp_6;
    call {:si_unique_call 1367} Tmp_562 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_5 != 0;
    assume DeviceObject_5 > 0;
    havoc extension_3;
    call {:si_unique_call 1368} irpSp_1 := sdv_IoGetCurrentIrpStackLocation(Irp_6);
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    call {:si_unique_call 1369} vslice_dummy_var_367 := sdv_RemoveEntryList(0);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto L18;

  L18:
    assume {:nonnull} Irp_6 != 0;
    assume Irp_6 > 0;
    havoc vslice_dummy_var_197;
    call {:si_unique_call 1370} IoReleaseCancelSpinLock(vslice_dummy_var_197);
    Tmp_562 := strConst__li2bpl3;
    call {:si_unique_call 1371} vslice_dummy_var_368 := CyyDbgPrintEx(9, Tmp_562);
    call {:si_unique_call 1372} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1373} CyyIRPEpilogue(extension_3);
    return;

  anon11_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto L32;

  L32:
    assume {:nonnull} extension_3 != 0;
    assume extension_3 > 0;
    goto L18;

  anon13_Then:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    call {:si_unique_call 1374} sdv_ExFreePool(0);
    assume {:nonnull} irpSp_1 != 0;
    assume irpSp_1 > 0;
    goto L18;

  anon15_Then:
    goto L18;

  anon14_Then:
    goto L32;

  anon12_Then:
    goto L18;
}



procedure {:origName "CyyFilterCancelQueued"} CyyFilterCancelQueued(actual_PDevObj_15: int, actual_PIrp_6: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyFilterCancelQueued"} CyyFilterCancelQueued(actual_PDevObj_15: int, actual_PIrp_6: int)
{
  var {:pointer} PDevObj_15: int;
  var {:pointer} PIrp_6: int;
  var vslice_dummy_var_369: int;
  var vslice_dummy_var_370: int;
  var vslice_dummy_var_371: int;
  var vslice_dummy_var_198: int;

  anon0:
    call {:si_unique_call 1375} vslice_dummy_var_369 := __HAVOC_malloc(4);
    PDevObj_15 := actual_PDevObj_15;
    PIrp_6 := actual_PIrp_6;
    assume {:nonnull} PDevObj_15 != 0;
    assume PDevObj_15 > 0;
    call {:si_unique_call 1376} vslice_dummy_var_370 := sdv_IoGetCurrentIrpStackLocation(PIrp_6);
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    call {:si_unique_call 1377} vslice_dummy_var_371 := sdv_RemoveEntryList(0);
    assume {:nonnull} PIrp_6 != 0;
    assume PIrp_6 > 0;
    havoc vslice_dummy_var_198;
    call {:si_unique_call 1378} IoReleaseCancelSpinLock(vslice_dummy_var_198);
    return;
}



procedure {:origName "CyyLogError"} CyyLogError(actual_DriverObject: int, actual_DeviceObject_6: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyLogError"} CyyLogError(actual_DriverObject: int, actual_DeviceObject_6: int, actual_structPtr888P1: int, actual_structPtr888P2: int, actual_SequenceNumber: int, actual_MajorFunctionCode: int, actual_RetryCount: int, actual_UniqueErrorValue: int, actual_FinalStatus: int, actual_SpecificIOStatus: int, actual_LengthOfInsert1: int, actual_Insert1: int, actual_LengthOfInsert2: int, actual_Insert2: int)
{
  var {:scalar} P1: int;
  var {:scalar} P2: int;
  var {:scalar} Tmp_567: int;
  var {:pointer} Tmp_568: int;
  var {:scalar} sdv_536: int;
  var {:pointer} errorLogEntry: int;
  var {:pointer} Tmp_569: int;
  var {:scalar} sdv_537: int;
  var {:scalar} dumpToAllocate: int;
  var {:pointer} sdv_538: int;
  var {:pointer} Tmp_572: int;
  var {:pointer} Tmp_574: int;
  var {:scalar} Tmp_575: int;
  var {:pointer} Tmp_576: int;
  var {:pointer} ptrToFirstInsert: int;
  var {:scalar} Tmp_578: int;
  var {:pointer} DriverObject: int;
  var {:pointer} DeviceObject_6: int;
  var {:pointer} structPtr888P1: int;
  var {:pointer} structPtr888P2: int;
  var {:scalar} SequenceNumber: int;
  var {:scalar} MajorFunctionCode: int;
  var {:scalar} RetryCount: int;
  var {:scalar} UniqueErrorValue: int;
  var {:scalar} FinalStatus: int;
  var {:scalar} SpecificIOStatus: int;
  var {:scalar} LengthOfInsert1: int;
  var {:pointer} Insert1: int;
  var {:scalar} LengthOfInsert2: int;
  var {:pointer} Insert2: int;
  var vslice_dummy_var_372: int;

  anon0:
    call {:si_unique_call 1379} P1 := __HAVOC_malloc(20);
    call {:si_unique_call 1380} P2 := __HAVOC_malloc(20);
    call {:si_unique_call 1381} Tmp_567 := __HAVOC_malloc(20);
    call {:si_unique_call 1382} vslice_dummy_var_372 := __HAVOC_malloc(4);
    call {:si_unique_call 1383} Tmp_575 := __HAVOC_malloc(20);
    DriverObject := actual_DriverObject;
    DeviceObject_6 := actual_DeviceObject_6;
    structPtr888P1 := actual_structPtr888P1;
    structPtr888P2 := actual_structPtr888P2;
    SequenceNumber := actual_SequenceNumber;
    MajorFunctionCode := actual_MajorFunctionCode;
    RetryCount := actual_RetryCount;
    UniqueErrorValue := actual_UniqueErrorValue;
    FinalStatus := actual_FinalStatus;
    SpecificIOStatus := actual_SpecificIOStatus;
    LengthOfInsert1 := actual_LengthOfInsert1;
    Insert1 := actual_Insert1;
    LengthOfInsert2 := actual_LengthOfInsert2;
    Insert2 := actual_Insert2;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P1 != 0;
    assume P1 > 0;
    assume {:nonnull} structPtr888P1 != 0;
    assume structPtr888P1 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    assume {:nonnull} P2 != 0;
    assume P2 > 0;
    assume {:nonnull} structPtr888P2 != 0;
    assume structPtr888P2 > 0;
    call {:si_unique_call 1384} Tmp_568 := __HAVOC_malloc(4);
    call {:si_unique_call 1385} Tmp_569 := __HAVOC_malloc(4);
    call {:si_unique_call 1386} Tmp_572 := __HAVOC_malloc(4);
    call {:si_unique_call 1387} Tmp_574 := __HAVOC_malloc(4);
    call {:si_unique_call 1388} Tmp_576 := __HAVOC_malloc(4);
    dumpToAllocate := 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} Insert1 != 0;
    goto L11;

  L11:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} Insert2 != 0;
    goto L13;

  L13:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} DeviceObject_6 != 0;
    goto L16;

  L16:
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    assume {:nonnull} Tmp_575 != 0;
    assume Tmp_575 > 0;
    call {:si_unique_call 1389} sdv_536 := CyyMemCompare(P1, 1, Tmp_575, 1);
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} sdv_536 != 0;
    dumpToAllocate := 8;
    goto L21;

  L21:
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    assume {:nonnull} Tmp_567 != 0;
    assume Tmp_567 > 0;
    call {:si_unique_call 1390} sdv_537 := CyyMemCompare(P2, 1, Tmp_567, 1);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} sdv_537 != 0;
    dumpToAllocate := dumpToAllocate + 8;
    goto L27;

  L27:
    Tmp_578 := 48 + dumpToAllocate + LengthOfInsert1 + LengthOfInsert2;
    call {:si_unique_call 1391} sdv_538 := IoAllocateErrorLogEntry(0, Tmp_578);
    errorLogEntry := sdv_538;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} errorLogEntry != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} dumpToAllocate != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_572;
    call {:si_unique_call 1392} sdv_RtlCopyMemory(0, 0, 8);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} dumpToAllocate > 8;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_574;
    call {:si_unique_call 1393} sdv_RtlCopyMemory(0, 0, 8);
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_568;
    ptrToFirstInsert := Tmp_568;
    goto L54;

  L54:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} LengthOfInsert1 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1394} sdv_RtlCopyMemory(0, 0, LengthOfInsert1);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} LengthOfInsert2 != 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    call {:si_unique_call 1395} sdv_RtlCopyMemory(0, 0, LengthOfInsert2);
    goto L56;

  L56:
    call {:si_unique_call 1396} IoWriteErrorLogEntry(0);
    goto L1;

  L1:
    return;

  anon26_Then:
    assume {:partition} LengthOfInsert2 == 0;
    goto L56;

  anon30_Then:
    assume {:partition} LengthOfInsert1 == 0;
    goto L56;

  anon25_Then:
    assume {:partition} 8 >= dumpToAllocate;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_576;
    ptrToFirstInsert := Tmp_576;
    goto L54;

  anon29_Then:
    assume {:partition} dumpToAllocate == 0;
    assume {:nonnull} errorLogEntry != 0;
    assume errorLogEntry > 0;
    havoc Tmp_569;
    ptrToFirstInsert := Tmp_569;
    goto L54;

  anon28_Then:
    assume {:partition} errorLogEntry == 0;
    goto L1;

  anon24_Then:
    assume {:partition} sdv_537 == 0;
    goto L27;

  anon23_Then:
    assume {:partition} sdv_536 == 0;
    goto L21;

  anon22_Then:
    assume {:partition} DeviceObject_6 == 0;
    goto L16;

  anon21_Then:
    assume {:partition} Insert2 == 0;
    LengthOfInsert2 := 0;
    goto L13;

  anon27_Then:
    assume {:partition} Insert1 == 0;
    LengthOfInsert1 := 0;
    goto L11;
}



procedure {:origName "CyyIRPPrologue"} CyyIRPPrologue(actual_PIrp_7: int, actual_PDevExt_11: int) returns (Tmp_579: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures Tmp_579 == 0 || Tmp_579 == -1073741536 || Tmp_579 == 259 || Tmp_579 == -1073741738;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyIRPPrologue"} CyyIRPPrologue(actual_PIrp_7: int, actual_PDevExt_11: int) returns (Tmp_579: int)
{
  var {:pointer} Tmp_580: int;
  var {:pointer} PIrp_7: int;
  var {:pointer} PDevExt_11: int;
  var vslice_dummy_var_373: int;

  anon0:
    PIrp_7 := actual_PIrp_7;
    PDevExt_11 := actual_PDevExt_11;
    call {:si_unique_call 1397} Tmp_580 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1398} vslice_dummy_var_373 := sdv_InterlockedIncrement(Tmp_580);
    assume {:nonnull} PDevExt_11 != 0;
    assume PDevExt_11 > 0;
    assume {:nonnull} Tmp_580 != 0;
    assume Tmp_580 > 0;
    call {:si_unique_call 1399} Tmp_579 := CyyFilterIrps(PIrp_7, PDevExt_11);
    return;
}



procedure {:origName "CyySetDeviceFlags"} CyySetDeviceFlags(actual_PDevExt_12: int, actual_PFlags: int, actual_Value: int, actual_Set: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyySetDeviceFlags"} CyySetDeviceFlags(actual_PDevExt_12: int, actual_PFlags: int, actual_Value: int, actual_Set: int)
{
  var {:scalar} oldIrql_7: int;
  var {:pointer} Tmp_586: int;
  var {:pointer} PFlags: int;
  var {:scalar} Value: int;
  var {:scalar} Set: int;
  var vslice_dummy_var_374: int;

  anon0:
    call {:si_unique_call 1400} vslice_dummy_var_374 := __HAVOC_malloc(4);
    PFlags := actual_PFlags;
    Value := actual_Value;
    Set := actual_Set;
    call {:si_unique_call 1401} Tmp_586 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    call {:si_unique_call 1402} sdv_KeAcquireSpinLock(0, Tmp_586);
    assume {:nonnull} Tmp_586 != 0;
    assume Tmp_586 > 0;
    havoc oldIrql_7;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} Set != 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;

  L10:
    call {:si_unique_call 1403} sdv_KeReleaseSpinLock(0, oldIrql_7);
    return;

  anon3_Then:
    assume {:partition} Set == 0;
    assume {:nonnull} PFlags != 0;
    assume PFlags > 0;
    goto L10;
}



procedure {:origName "CyyIoCallDriver"} CyyIoCallDriver(actual_PDevExt_13: int, actual_PDevObj_16: int, actual_PIrp_8: int) returns (Tmp_588: int);
  modifies alloc;
  free ensures Tmp_588 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyIoCallDriver"} CyyIoCallDriver(actual_PDevExt_13: int, actual_PDevObj_16: int, actual_PIrp_8: int) returns (Tmp_588: int)
{
  var {:scalar} status_17: int;
  var {:pointer} PDevExt_13: int;
  var {:pointer} PDevObj_16: int;
  var {:pointer} PIrp_8: int;

  anon0:
    PDevExt_13 := actual_PDevExt_13;
    PDevObj_16 := actual_PDevObj_16;
    PIrp_8 := actual_PIrp_8;
    call {:si_unique_call 1404} status_17 := sdv_IoCallDriver(PDevObj_16, PIrp_8);
    call {:si_unique_call 1405} CyyIRPEpilogue(PDevExt_13);
    Tmp_588 := status_17;
    return;
}



procedure {:origName "CyyKillAllReadsOrWrites"} CyyKillAllReadsOrWrites(actual_DeviceObject_7: int, actual_QueueToClean: int, actual_CurrentOpIrp_4: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyKillAllReadsOrWrites"} CyyKillAllReadsOrWrites(actual_DeviceObject_7: int, actual_QueueToClean: int, actual_CurrentOpIrp_4: int)
{
  var {:pointer} currentLastIrp_1: int;
  var {:scalar} cancelIrql_1: int;
  var {:pointer} Tmp_590: int;
  var {:scalar} sdv_547: int;
  var {:pointer} Tmp_591: int;
  var {:pointer} sdv_548: int;
  var {:scalar} cancelRoutine_2: int;
  var {:pointer} Tmp_593: int;
  var {:pointer} Tmp_594: int;
  var {:pointer} Tmp_595: int;
  var {:pointer} DeviceObject_7: int;
  var {:pointer} QueueToClean: int;
  var {:pointer} CurrentOpIrp_4: int;
  var vslice_dummy_var_375: int;
  var vslice_dummy_var_376: int;
  var vslice_dummy_var_199: int;
  var vslice_dummy_var_200: int;
  var vslice_dummy_var_201: int;
  var vslice_dummy_var_202: int;
  var vslice_dummy_var_203: int;
  var vslice_dummy_var_204: int;
  var vslice_dummy_var_205: int;

  anon0:
    call {:si_unique_call 1406} vslice_dummy_var_375 := __HAVOC_malloc(4);
    DeviceObject_7 := actual_DeviceObject_7;
    QueueToClean := actual_QueueToClean;
    CurrentOpIrp_4 := actual_CurrentOpIrp_4;
    call {:si_unique_call 1407} Tmp_593 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    call {:si_unique_call 1408} IoAcquireCancelSpinLock(Tmp_593);
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    havoc cancelIrql_1;
    goto L8;

  L8:
    call {:si_unique_call 1409} currentLastIrp_1, cancelIrql_1, sdv_547, sdv_548, cancelRoutine_2, Tmp_593, vslice_dummy_var_376 := CyyKillAllReadsOrWrites_loop_L8(currentLastIrp_1, cancelIrql_1, sdv_547, sdv_548, cancelRoutine_2, Tmp_593, DeviceObject_7, QueueToClean, vslice_dummy_var_376);
    goto L8_last;

  L8_last:
    call {:si_unique_call 1428} sdv_547 := sdv_IsListEmpty(0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} sdv_547 == 0;
    assume {:nonnull} QueueToClean != 0;
    assume QueueToClean > 0;
    havoc vslice_dummy_var_199;
    call {:si_unique_call 1410} sdv_548 := sdv_containing_record(vslice_dummy_var_199, 88);
    currentLastIrp_1 := sdv_548;
    call {:si_unique_call 1411} vslice_dummy_var_376 := sdv_RemoveEntryList(0);
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    assume {:nonnull} currentLastIrp_1 != 0;
    assume currentLastIrp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 1412} CyyCancelCurrentWrite(DeviceObject_7, currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 1413} Tmp_593 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    call {:si_unique_call 1414} IoAcquireCancelSpinLock(Tmp_593);
    assume {:nonnull} Tmp_593 != 0;
    assume Tmp_593 > 0;
    havoc cancelIrql_1;
    goto L42_dummy;

  L42_dummy:
    assume false;
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant199;
    call {:si_unique_call 1415} CyyCancelCurrentXoff(DeviceObject_7, currentLastIrp_1);
    goto L42;

  anon35_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant125;
    call {:si_unique_call 1416} CyyCancelImmediate(DeviceObject_7, currentLastIrp_1);
    goto L42;

  anon34_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 1417} CyyCancelQueued(DeviceObject_7, currentLastIrp_1);
    goto L42;

  anon33_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant179;
    call {:si_unique_call 1418} CyyCancelWait(DeviceObject_7, currentLastIrp_1);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 1419} CyyFilterCancelQueued(DeviceObject_7, currentLastIrp_1);
    goto L42;

  anon27_Then:
    assume {:partition} sdv_547 != 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_594;
    assume {:nonnull} Tmp_594 != 0;
    assume Tmp_594 > 0;
    havoc cancelRoutine_2;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_590;
    assume {:nonnull} Tmp_590 != 0;
    assume Tmp_590 > 0;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} cancelRoutine_2 != 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_591;
    assume {:nonnull} Tmp_591 != 0;
    assume Tmp_591 > 0;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc Tmp_595;
    assume {:nonnull} Tmp_595 != 0;
    assume Tmp_595 > 0;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant196;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_200;
    call {:si_unique_call 1420} CyyCancelCurrentWrite(DeviceObject_7, vslice_dummy_var_200);
    goto L1;

  L1:
    return;

  anon32_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant199;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_201;
    call {:si_unique_call 1421} CyyCancelCurrentXoff(DeviceObject_7, vslice_dummy_var_201);
    goto L1;

  anon31_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant125;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_202;
    call {:si_unique_call 1422} CyyCancelImmediate(DeviceObject_7, vslice_dummy_var_202);
    goto L1;

  anon30_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant149;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_203;
    call {:si_unique_call 1423} CyyCancelQueued(DeviceObject_7, vslice_dummy_var_203);
    goto L1;

  anon29_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant179;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_204;
    call {:si_unique_call 1424} CyyCancelWait(DeviceObject_7, vslice_dummy_var_204);
    goto L1;

  anon38_Then:
    assume {:IndirectCall} true;
    assume cancelRoutine_2 == li2bplFunctionConstant151;
    assume {:nonnull} CurrentOpIrp_4 != 0;
    assume CurrentOpIrp_4 > 0;
    havoc vslice_dummy_var_205;
    call {:si_unique_call 1425} CyyFilterCancelQueued(DeviceObject_7, vslice_dummy_var_205);
    goto L1;

  anon37_Then:
    assume {:partition} cancelRoutine_2 == 0;
    call {:si_unique_call 1426} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;

  anon28_Then:
    call {:si_unique_call 1427} IoReleaseCancelSpinLock(cancelIrql_1);
    goto L1;
}



procedure {:origName "CyyGetNextIrpLocked"} CyyGetNextIrpLocked(actual_CurrentOpIrp_5: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_4: int, actual_OldIrql_5: int);
  modifies alloc, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetNextIrpLocked"} CyyGetNextIrpLocked(actual_CurrentOpIrp_5: int, actual_QueueToProcess_2: int, actual_NextIrp: int, actual_CompleteCurrent_1: int, actual_extension_4: int, actual_OldIrql_5: int)
{
  var {:scalar} sdv_550: int;
  var {:pointer} oldIrp_1: int;
  var {:pointer} sdv_554: int;
  var {:pointer} Tmp_597: int;
  var {:pointer} headOfList: int;
  var {:pointer} CurrentOpIrp_5: int;
  var {:pointer} QueueToProcess_2: int;
  var {:pointer} NextIrp: int;
  var {:scalar} CompleteCurrent_1: int;
  var {:pointer} extension_4: int;
  var {:scalar} OldIrql_5: int;
  var vslice_dummy_var_377: int;
  var vslice_dummy_var_378: int;
  var vslice_dummy_var_379: int;
  var vslice_dummy_var_206: int;

  anon0:
    call {:si_unique_call 1429} vslice_dummy_var_377 := __HAVOC_malloc(4);
    CurrentOpIrp_5 := actual_CurrentOpIrp_5;
    QueueToProcess_2 := actual_QueueToProcess_2;
    NextIrp := actual_NextIrp;
    CompleteCurrent_1 := actual_CompleteCurrent_1;
    extension_4 := actual_extension_4;
    OldIrql_5 := actual_OldIrql_5;
    call {:si_unique_call 1430} Tmp_597 := __HAVOC_malloc(72);
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc oldIrp_1;
    call {:si_unique_call 1431} sdv_550 := sdv_IsListEmpty(0);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_550 == 0;
    call {:si_unique_call 1432} headOfList := RemoveHeadList(QueueToProcess_2);
    call {:si_unique_call 1433} sdv_554 := sdv_containing_record(headOfList, 88);
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1434} SLIC_sdv_IoSetCancelRoutine_entry(0, 0);
    goto L40;

  L40:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    havoc vslice_dummy_var_206;
    call {:si_unique_call 1435} vslice_dummy_var_378 := sdv_IoSetCancelRoutine(vslice_dummy_var_206, 0);
    goto L11;

  L11:
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    assume {:nonnull} NextIrp != 0;
    assume NextIrp > 0;
    call {:si_unique_call 1436} IoReleaseCancelSpinLock(OldIrql_5);
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} CompleteCurrent_1 != 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} oldIrp_1 != 0;
    Tmp_597 := strConst__li2bpl3;
    call {:si_unique_call 1437} vslice_dummy_var_379 := CyyDbgPrintEx(9, Tmp_597);
    call {:si_unique_call 1438} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1439} CyyIRPEpilogue(extension_4);
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} oldIrp_1 == 0;
    goto L1;

  anon10_Then:
    assume {:partition} CompleteCurrent_1 == 0;
    goto L1;

  anon12_Then:
    goto L40;

  anon9_Then:
    assume {:partition} sdv_550 != 0;
    assume {:nonnull} CurrentOpIrp_5 != 0;
    assume CurrentOpIrp_5 > 0;
    goto L11;
}



procedure {:origName "CyyGetNextIrp"} CyyGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_5: int);
  modifies alloc, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetNextIrp"} CyyGetNextIrp(actual_CurrentOpIrp_6: int, actual_QueueToProcess_3: int, actual_NextIrp_1: int, actual_CompleteCurrent_2: int, actual_extension_5: int)
{
  var {:pointer} Tmp_600: int;
  var {:scalar} oldIrql_8: int;
  var {:pointer} CurrentOpIrp_6: int;
  var {:pointer} QueueToProcess_3: int;
  var {:pointer} NextIrp_1: int;
  var {:scalar} CompleteCurrent_2: int;
  var {:pointer} extension_5: int;
  var vslice_dummy_var_380: int;

  anon0:
    call {:si_unique_call 1440} vslice_dummy_var_380 := __HAVOC_malloc(4);
    CurrentOpIrp_6 := actual_CurrentOpIrp_6;
    QueueToProcess_3 := actual_QueueToProcess_3;
    NextIrp_1 := actual_NextIrp_1;
    CompleteCurrent_2 := actual_CompleteCurrent_2;
    extension_5 := actual_extension_5;
    call {:si_unique_call 1441} Tmp_600 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    call {:si_unique_call 1442} IoAcquireCancelSpinLock(Tmp_600);
    assume {:nonnull} Tmp_600 != 0;
    assume Tmp_600 > 0;
    havoc oldIrql_8;
    call {:si_unique_call 1443} CyyGetNextIrpLocked(CurrentOpIrp_6, QueueToProcess_3, NextIrp_1, CompleteCurrent_2, extension_5, oldIrql_8);
    return;
}



procedure {:origName "_sdv_init3"} _sdv_init3();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init3"} _sdv_init3()
{
  var vslice_dummy_var_381: int;

  anon0:
    call {:si_unique_call 1444} vslice_dummy_var_381 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyCancelTimer"} CyyCancelTimer(actual_Timer: int, actual_PDevExt_14: int) returns (Tmp_603: int);
  modifies alloc;
  free ensures Tmp_603 == 1 || Tmp_603 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelTimer"} CyyCancelTimer(actual_Timer: int, actual_PDevExt_14: int) returns (Tmp_603: int)
{
  var {:scalar} cancelled: int;
  var {:pointer} Timer: int;
  var {:pointer} PDevExt_14: int;
  var vslice_dummy_var_207: int;

  anon0:
    Timer := actual_Timer;
    PDevExt_14 := actual_PDevExt_14;
    call {:si_unique_call 1445} cancelled := KeCancelTimer(0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} cancelled != 0;
    assume {:nonnull} Timer != 0;
    assume Timer > 0;
    havoc vslice_dummy_var_207;
    call {:si_unique_call 1446} CyyDpcEpilogue(PDevExt_14, vslice_dummy_var_207);
    goto L9;

  L9:
    Tmp_603 := cancelled;
    return;

  anon3_Then:
    assume {:partition} cancelled == 0;
    goto L9;
}



procedure {:origName "CyyIRPEpilogue"} CyyIRPEpilogue(actual_PDevExt_15: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyIRPEpilogue"} CyyIRPEpilogue(actual_PDevExt_15: int)
{
  var {:pointer} Tmp_605: int;
  var {:scalar} pendingCnt_1: int;
  var {:pointer} PDevExt_15: int;
  var vslice_dummy_var_382: int;
  var vslice_dummy_var_383: int;

  anon0:
    call {:si_unique_call 1447} vslice_dummy_var_382 := __HAVOC_malloc(4);
    PDevExt_15 := actual_PDevExt_15;
    call {:si_unique_call 1448} Tmp_605 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} Tmp_605 != 0;
    assume Tmp_605 > 0;
    call {:si_unique_call 1449} pendingCnt_1 := sdv_InterlockedDecrement(Tmp_605);
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    assume {:nonnull} Tmp_605 != 0;
    assume Tmp_605 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} pendingCnt_1 == 0;
    assume {:nonnull} PDevExt_15 != 0;
    assume PDevExt_15 > 0;
    call {:si_unique_call 1450} vslice_dummy_var_383 := KeSetEvent(PendingIRPEvent__CYY_DEVICE_EXTENSION(PDevExt_15), 0, 0);
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:partition} pendingCnt_1 != 0;
    goto L1;
}



procedure {:origName "CyySetTimer"} CyySetTimer(actual_Timer_1: int, actual_SD1_2: int, actual_Dpc: int, actual_PDevExt_16: int) returns (Tmp_607: int);
  modifies alloc;
  free ensures Tmp_607 == 1 || Tmp_607 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyySetTimer"} CyySetTimer(actual_Timer_1: int, actual_SD1_2: int, actual_Dpc: int, actual_PDevExt_16: int) returns (Tmp_607: int)
{
  var {:scalar} DueTime_1: int;
  var {:pointer} Tmp_608: int;
  var {:scalar} set: int;
  var {:pointer} SD1_2: int;
  var {:pointer} PDevExt_16: int;
  var vslice_dummy_var_384: int;
  var vslice_dummy_var_385: int;

  anon0:
    call {:si_unique_call 1451} DueTime_1 := __HAVOC_malloc(20);
    SD1_2 := actual_SD1_2;
    PDevExt_16 := actual_PDevExt_16;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    assume {:nonnull} DueTime_1 != 0;
    assume DueTime_1 > 0;
    assume {:nonnull} SD1_2 != 0;
    assume SD1_2 > 0;
    call {:si_unique_call 1452} Tmp_608 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    call {:si_unique_call 1453} vslice_dummy_var_384 := sdv_InterlockedIncrement(Tmp_608);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    call {:si_unique_call 1454} set := KeSetTimer(0, DueTime_1, 0);
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:partition} set != 0;
    call {:si_unique_call 1455} Tmp_608 := __HAVOC_malloc(4);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    call {:si_unique_call 1456} vslice_dummy_var_385 := sdv_InterlockedDecrement(Tmp_608);
    assume {:nonnull} PDevExt_16 != 0;
    assume PDevExt_16 > 0;
    assume {:nonnull} Tmp_608 != 0;
    assume Tmp_608 > 0;
    goto L12;

  L12:
    Tmp_607 := set;
    return;

  anon3_Then:
    assume {:partition} set == 0;
    goto L12;
}



procedure {:origName "CyyCompleteIfError"} CyyCompleteIfError(actual_DeviceObject_8: int, actual_Irp_7: int) returns (Tmp_609: int);
  modifies alloc;
  free ensures Tmp_609 == -1073741536 || Tmp_609 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCompleteIfError"} CyyCompleteIfError(actual_DeviceObject_8: int, actual_Irp_7: int) returns (Tmp_609: int)
{
  var {:pointer} irpSp_2: int;
  var {:pointer} Tmp_611: int;
  var {:scalar} status_18: int;
  var {:pointer} extension_6: int;
  var {:pointer} DeviceObject_8: int;
  var {:pointer} Irp_7: int;
  var vslice_dummy_var_386: int;

  anon0:
    DeviceObject_8 := actual_DeviceObject_8;
    Irp_7 := actual_Irp_7;
    call {:si_unique_call 1457} Tmp_611 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_8 != 0;
    assume DeviceObject_8 > 0;
    havoc extension_6;
    status_18 := 0;
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_6 != 0;
    assume extension_6 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    call {:si_unique_call 1458} irpSp_2 := sdv_IoGetCurrentIrpStackLocation(Irp_7);
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    goto L17;

  L17:
    status_18 := -1073741536;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    assume {:nonnull} Irp_7 != 0;
    assume Irp_7 > 0;
    Tmp_611 := strConst__li2bpl3;
    call {:si_unique_call 1459} vslice_dummy_var_386 := CyyDbgPrintEx(9, Tmp_611);
    call {:si_unique_call 1460} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1461} CyyIRPEpilogue(extension_6);
    goto L8;

  L8:
    Tmp_609 := status_18;
    return;

  anon10_Then:
    assume {:nonnull} irpSp_2 != 0;
    assume irpSp_2 > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto L17;

  anon11_Then:
    goto L8;

  anon9_Then:
    goto L8;

  anon12_Then:
    goto L8;
}



procedure {:origName "_sdv_init5"} _sdv_init5();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init5"} _sdv_init5()
{
  var vslice_dummy_var_387: int;

  anon0:
    call {:si_unique_call 1462} vslice_dummy_var_387 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyGetNextWrite"} CyyGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_2: int, actual_CompleteCurrent_3: int, actual_Extension_13: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetNextWrite"} CyyGetNextWrite(actual_CurrentOpIrp_7: int, actual_QueueToProcess_4: int, actual_NewIrp_2: int, actual_CompleteCurrent_3: int, actual_Extension_13: int)
{
  var {:pointer} s_p_e_c_i_a_l_15: int;
  var {:scalar} OldIrql_6: int;
  var {:pointer} sdv_563: int;
  var {:pointer} Irp_8: int;
  var {:pointer} Tmp_614: int;
  var {:scalar} OldIrql_7: int;
  var {:pointer} sdv_566: int;
  var {:pointer} Tmp_615: int;
  var {:pointer} sdv_568: int;
  var {:scalar} OldIrql_8: int;
  var {:pointer} Tmp_617: int;
  var {:scalar} s_p_e_c_i_a_l_16: int;
  var {:pointer} sdv_570: int;
  var {:pointer} sdv_571: int;
  var {:pointer} sdv_572: int;
  var {:pointer} s_p_e_c_i_a_l_17: int;
  var {:scalar} delta: int;
  var {:pointer} Xc_1: int;
  var {:scalar} s_p_e_c_i_a_l_18: int;
  var {:pointer} Tmp_618: int;
  var {:pointer} CurrentOpIrp_7: int;
  var {:pointer} QueueToProcess_4: int;
  var {:pointer} NewIrp_2: int;
  var {:scalar} CompleteCurrent_3: int;
  var {:pointer} Extension_13: int;
  var vslice_dummy_var_388: int;
  var vslice_dummy_var_389: int;
  var vslice_dummy_var_390: int;
  var vslice_dummy_var_391: int;
  var vslice_dummy_var_392: int;
  var vslice_dummy_var_393: int;
  var vslice_dummy_var_394: int;
  var vslice_dummy_var_208: int;
  var vslice_dummy_var_209: int;
  var vslice_dummy_var_210: int;
  var vslice_dummy_var_211: int;

  anon0:
    call {:si_unique_call 1463} vslice_dummy_var_388 := __HAVOC_malloc(4);
    call {:si_unique_call 1464} delta := __HAVOC_malloc(20);
    CurrentOpIrp_7 := actual_CurrentOpIrp_7;
    QueueToProcess_4 := actual_QueueToProcess_4;
    NewIrp_2 := actual_NewIrp_2;
    CompleteCurrent_3 := actual_CompleteCurrent_3;
    Extension_13 := actual_Extension_13;
    call {:si_unique_call 1465} Tmp_614 := __HAVOC_malloc(92);
    call {:si_unique_call 1466} Tmp_615 := __HAVOC_malloc(72);
    Tmp_614 := strConst__li2bpl168;
    call {:si_unique_call 1467} vslice_dummy_var_391 := CyyDbgPrintEx(2, Tmp_614);
    goto L6;

  L6:
    call {:si_unique_call 1468} s_p_e_c_i_a_l_15, sdv_563, Irp_8, OldIrql_7, sdv_566, sdv_568, OldIrql_8, Tmp_617, s_p_e_c_i_a_l_16, sdv_570, sdv_571, sdv_572, s_p_e_c_i_a_l_17, Xc_1, s_p_e_c_i_a_l_18, Tmp_618, CompleteCurrent_3, vslice_dummy_var_390, vslice_dummy_var_393, vslice_dummy_var_394 := CyyGetNextWrite_loop_L6(s_p_e_c_i_a_l_15, sdv_563, Irp_8, OldIrql_7, sdv_566, sdv_568, OldIrql_8, Tmp_617, s_p_e_c_i_a_l_16, sdv_570, sdv_571, sdv_572, s_p_e_c_i_a_l_17, delta, Xc_1, s_p_e_c_i_a_l_18, Tmp_618, CurrentOpIrp_7, QueueToProcess_4, NewIrp_2, CompleteCurrent_3, Extension_13, vslice_dummy_var_390, vslice_dummy_var_393, vslice_dummy_var_394);
    goto L6_last;

  L6_last:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_211;
    call {:si_unique_call 1491} sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_211);
    assume {:nonnull} sdv_568 != 0;
    assume sdv_568 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 1469} Tmp_618 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    call {:si_unique_call 1470} IoAcquireCancelSpinLock(Tmp_618);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    havoc OldIrql_8;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_208;
    call {:si_unique_call 1471} sdv_572 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_208);
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    assume {:nonnull} sdv_572 != 0;
    assume sdv_572 > 0;
    call {:si_unique_call 1472} IoReleaseCancelSpinLock(OldIrql_8);
    goto L24;

  L24:
    call {:si_unique_call 1473} CyyGetNextIrp(CurrentOpIrp_7, QueueToProcess_4, NewIrp_2, CompleteCurrent_3, Extension_13);
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    call {:si_unique_call 1474} Tmp_618 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    call {:si_unique_call 1475} IoAcquireCancelSpinLock(Tmp_618);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    havoc OldIrql_6;
    call {:si_unique_call 1476} vslice_dummy_var_389 := KeSynchronizeExecution(0, li2bplFunctionConstant131, 0);
    call {:si_unique_call 1477} IoReleaseCancelSpinLock(OldIrql_6);
    goto L36;

  L36:
    Tmp_615 := strConst__li2bpl169;
    call {:si_unique_call 1478} vslice_dummy_var_392 := CyyDbgPrintEx(2, Tmp_615);
    return;

  anon18_Then:
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc vslice_dummy_var_209;
    call {:si_unique_call 1479} sdv_571 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_209);
    assume {:nonnull} sdv_571 != 0;
    assume sdv_571 > 0;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto L36;

  anon19_Then:
    assume {:nonnull} NewIrp_2 != 0;
    assume NewIrp_2 > 0;
    havoc Tmp_617;
    assume {:nonnull} Tmp_617 != 0;
    assume Tmp_617 > 0;
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    assume false;
    return;

  anon17_Then:
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_210;
    call {:si_unique_call 1480} sdv_570 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_210);
    assume {:nonnull} sdv_570 != 0;
    assume sdv_570 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 1481} Tmp_618 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    call {:si_unique_call 1482} IoAcquireCancelSpinLock(Tmp_618);
    assume {:nonnull} Tmp_618 != 0;
    assume Tmp_618 > 0;
    havoc OldIrql_7;
    assume {:nonnull} CurrentOpIrp_7 != 0;
    assume CurrentOpIrp_7 > 0;
    havoc Irp_8;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    havoc Xc_1;
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 1483} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} Irp_8 != 0;
    assume Irp_8 > 0;
    goto L61;

  L61:
    call {:si_unique_call 1484} IoReleaseCancelSpinLock(OldIrql_7);
    goto L24;

  anon23_Then:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume Irp_8 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1485} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant199);
    goto L108;

  L108:
    call {:si_unique_call 1486} vslice_dummy_var_390 := sdv_IoSetCancelRoutine(Irp_8, li2bplFunctionConstant199);
    s_p_e_c_i_a_l_16 := 2;
    call {:si_unique_call 1487} sdv_566 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} sdv_566 != 0;
    assume sdv_566 > 0;
    s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_566)));
    assume {:nonnull} s_p_e_c_i_a_l_15 != 0;
    assume s_p_e_c_i_a_l_15 > 0;
    CompleteCurrent_3 := 0;
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    call {:si_unique_call 1488} vslice_dummy_var_393 := KeSynchronizeExecution(0, li2bplFunctionConstant200, 0);
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} Xc_1 != 0;
    assume Xc_1 > 0;
    assume {:nonnull} delta != 0;
    assume delta > 0;
    assume {:nonnull} Extension_13 != 0;
    assume Extension_13 > 0;
    call {:si_unique_call 1489} vslice_dummy_var_394 := CyySetTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_13), delta, XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_13), Extension_13);
    s_p_e_c_i_a_l_18 := 4;
    call {:si_unique_call 1490} sdv_563 := sdv_IoGetCurrentIrpStackLocation(Irp_8);
    assume {:nonnull} sdv_563 != 0;
    assume sdv_563 > 0;
    s_p_e_c_i_a_l_17 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_563)));
    assume {:nonnull} s_p_e_c_i_a_l_17 != 0;
    assume s_p_e_c_i_a_l_17 > 0;
    goto L61;

  anon22_Then:
    goto L61;

  anon21_Then:
    assume !(Irp_8 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L108;

  anon24_Then:
    goto L61;

  anon20_Then:
    goto L24;
}



procedure {:origName "CyyCancelCurrentWrite"} CyyCancelCurrentWrite(actual_DeviceObject_9: int, actual_Irp_9: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelCurrentWrite"} CyyCancelCurrentWrite(actual_DeviceObject_9: int, actual_Irp_9: int)
{
  var {:pointer} Extension_14: int;
  var {:pointer} DeviceObject_9: int;
  var {:pointer} Irp_9: int;
  var vslice_dummy_var_395: int;
  var vslice_dummy_var_212: int;

  anon0:
    call {:si_unique_call 1492} vslice_dummy_var_395 := __HAVOC_malloc(4);
    DeviceObject_9 := actual_DeviceObject_9;
    Irp_9 := actual_Irp_9;
    assume {:nonnull} DeviceObject_9 != 0;
    assume DeviceObject_9 > 0;
    havoc Extension_14;
    assume {:nonnull} Extension_14 != 0;
    assume Extension_14 > 0;
    assume {:nonnull} Irp_9 != 0;
    assume Irp_9 > 0;
    havoc vslice_dummy_var_212;
    call {:si_unique_call 1493} CyyTryToCompleteCurrent#1(Extension_14, li2bplFunctionConstant202, vslice_dummy_var_212, -1073741536, CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_14), WriteQueue__CYY_DEVICE_EXTENSION(Extension_14), 0, WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_14), li2bplFunctionConstant194, li2bplFunctionConstant198, 2);
    return;
}



procedure {:origName "CyyCancelCurrentXoff"} CyyCancelCurrentXoff(actual_DeviceObject_10: int, actual_Irp_10: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 1;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 0 ==> IrpPended != 1;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelCurrentXoff"} CyyCancelCurrentXoff(actual_DeviceObject_10: int, actual_Irp_10: int)
{
  var {:pointer} Extension_15: int;
  var {:pointer} DeviceObject_10: int;
  var {:pointer} Irp_10: int;
  var vslice_dummy_var_396: int;
  var vslice_dummy_var_213: int;

  anon0:
    call {:si_unique_call 1494} vslice_dummy_var_396 := __HAVOC_malloc(4);
    DeviceObject_10 := actual_DeviceObject_10;
    Irp_10 := actual_Irp_10;
    assume {:nonnull} DeviceObject_10 != 0;
    assume DeviceObject_10 > 0;
    havoc Extension_15;
    assume {:nonnull} Extension_15 != 0;
    assume Extension_15 > 0;
    assume {:nonnull} Irp_10 != 0;
    assume Irp_10 > 0;
    havoc vslice_dummy_var_213;
    call {:si_unique_call 1495} CyyTryToCompleteCurrent#1(Extension_15, li2bplFunctionConstant195, vslice_dummy_var_213, -1073741536, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_15), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_15), 0, 0, 2);
    return;
}



procedure {:origName "CyyWrite"} CyyWrite(actual_DeviceObject_11: int, actual_Irp_11: int) returns (Tmp_623: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyWrite"} CyyWrite(actual_DeviceObject_11: int, actual_Irp_11: int) returns (Tmp_623: int)
{
  var {:pointer} Tmp_624: int;
  var {:pointer} Tmp_625: int;
  var {:scalar} sdv_577: int;
  var {:pointer} Tmp_626: int;
  var {:pointer} sdv_579: int;
  var {:pointer} Tmp_627: int;
  var {:pointer} Tmp_628: int;
  var {:pointer} Extension_16: int;
  var {:pointer} Tmp_630: int;
  var {:pointer} Tmp_631: int;
  var {:scalar} status_19: int;
  var {:pointer} Tmp_632: int;
  var {:pointer} DeviceObject_11: int;
  var {:pointer} Irp_11: int;
  var vslice_dummy_var_397: int;
  var vslice_dummy_var_398: int;
  var vslice_dummy_var_399: int;
  var vslice_dummy_var_400: int;
  var vslice_dummy_var_401: int;
  var vslice_dummy_var_402: int;
  var vslice_dummy_var_403: int;
  var vslice_dummy_var_404: int;

  anon0:
    DeviceObject_11 := actual_DeviceObject_11;
    Irp_11 := actual_Irp_11;
    call {:si_unique_call 1496} Tmp_624 := __HAVOC_malloc(96);
    call {:si_unique_call 1497} Tmp_625 := __HAVOC_malloc(72);
    call {:si_unique_call 1498} Tmp_626 := __HAVOC_malloc(72);
    call {:si_unique_call 1499} Tmp_627 := __HAVOC_malloc(72);
    call {:si_unique_call 1500} Tmp_628 := __HAVOC_malloc(76);
    call {:si_unique_call 1501} Tmp_630 := __HAVOC_malloc(72);
    call {:si_unique_call 1502} Tmp_631 := __HAVOC_malloc(72);
    call {:si_unique_call 1503} Tmp_632 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_11 != 0;
    assume DeviceObject_11 > 0;
    havoc Extension_16;
    Tmp_628 := strConst__li2bpl174;
    call {:si_unique_call 1504} vslice_dummy_var_397 := CyyDbgPrintEx(2, Tmp_628);
    call {:si_unique_call 1505} status_19 := CyyIRPPrologue(Irp_11, Extension_16);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_19 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_19 != 259;
    Tmp_631 := strConst__li2bpl3;
    call {:si_unique_call 1506} vslice_dummy_var_398 := CyyDbgPrintEx(9, Tmp_631);
    call {:si_unique_call 1507} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1508} CyyIRPEpilogue(Extension_16);
    goto L18;

  L18:
    Tmp_627 := strConst__li2bpl170;
    call {:si_unique_call 1509} vslice_dummy_var_399 := CyyDbgPrintEx(2, Tmp_627);
    Tmp_623 := status_19;
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} status_19 == 259;
    goto L18;

  anon9_Then:
    assume {:partition} status_19 == 0;
    Tmp_624 := strConst__li2bpl6;
    call {:si_unique_call 1510} vslice_dummy_var_400 := CyyDbgPrintEx(9, Tmp_624);
    call {:si_unique_call 1511} sdv_577 := CyyCompleteIfError(DeviceObject_11, Irp_11);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_577 != 0;
    Tmp_626 := strConst__li2bpl171;
    call {:si_unique_call 1512} vslice_dummy_var_401 := CyyDbgPrintEx(2, Tmp_626);
    Tmp_623 := -1073741536;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_577 == 0;
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    call {:si_unique_call 1513} sdv_579 := sdv_IoGetCurrentIrpStackLocation(Irp_11);
    assume {:nonnull} sdv_579 != 0;
    assume sdv_579 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_16 != 0;
    assume Extension_16 > 0;
    call {:si_unique_call 1514} status_19 := CyyStartOrQueue(Extension_16, Irp_11, WriteQueue__CYY_DEVICE_EXTENSION(Extension_16), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_16), li2bplFunctionConstant194);
    Tmp_632 := strConst__li2bpl172;
    call {:si_unique_call 1515} vslice_dummy_var_402 := CyyDbgPrintEx(2, Tmp_632);
    Tmp_623 := status_19;
    goto L1;

  anon12_Then:
    assume {:nonnull} Irp_11 != 0;
    assume Irp_11 > 0;
    Tmp_630 := strConst__li2bpl3;
    call {:si_unique_call 1516} vslice_dummy_var_403 := CyyDbgPrintEx(9, Tmp_630);
    call {:si_unique_call 1517} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1518} CyyIRPEpilogue(Extension_16);
    Tmp_625 := strConst__li2bpl173;
    call {:si_unique_call 1519} vslice_dummy_var_404 := CyyDbgPrintEx(2, Tmp_625);
    Tmp_623 := 0;
    goto L1;
}



procedure {:origName "CyyCancelWait"} CyyCancelWait(actual_DeviceObject_12: int, actual_Irp_12: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 1;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 0 ==> IrpPended != 1;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyCancelWait"} CyyCancelWait(actual_DeviceObject_12: int, actual_Irp_12: int)
{
  var {:pointer} Tmp_641: int;
  var {:pointer} Tmp_642: int;
  var {:pointer} Extension_18: int;
  var {:pointer} DeviceObject_12: int;
  var {:pointer} Irp_12: int;
  var vslice_dummy_var_405: int;
  var vslice_dummy_var_406: int;
  var vslice_dummy_var_407: int;
  var vslice_dummy_var_214: int;

  anon0:
    call {:si_unique_call 1520} vslice_dummy_var_405 := __HAVOC_malloc(4);
    DeviceObject_12 := actual_DeviceObject_12;
    Irp_12 := actual_Irp_12;
    call {:si_unique_call 1521} Tmp_641 := __HAVOC_malloc(108);
    call {:si_unique_call 1522} Tmp_642 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_12 != 0;
    assume DeviceObject_12 > 0;
    havoc Extension_18;
    Tmp_642 := strConst__li2bpl178;
    call {:si_unique_call 1523} vslice_dummy_var_406 := CyyDbgPrintEx(6, Tmp_642);
    Tmp_641 := strConst__li2bpl177;
    call {:si_unique_call 1524} vslice_dummy_var_407 := CyyDbgPrintEx(7, Tmp_641);
    assume {:nonnull} Extension_18 != 0;
    assume Extension_18 > 0;
    assume {:nonnull} Irp_12 != 0;
    assume Irp_12 > 0;
    havoc vslice_dummy_var_214;
    call {:si_unique_call 1525} CyyTryToCompleteCurrent#1(Extension_18, li2bplFunctionConstant181, vslice_dummy_var_214, -1073741536, CurrentWaitIrp__CYY_DEVICE_EXTENSION(Extension_18), 0, 0, 0, 0, 0, 2);
    return;
}



procedure {:origName "_sdv_init4"} _sdv_init4();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init4"} _sdv_init4()
{
  var vslice_dummy_var_408: int;

  anon0:
    call {:si_unique_call 1526} vslice_dummy_var_408 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyStartMask"} CyyStartMask(actual_Extension_19: int) returns (Tmp_647: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartMask"} CyyStartMask(actual_Extension_19: int) returns (Tmp_647: int)
{
  var {:pointer} Tmp_648: int;
  var {:pointer} s_p_e_c_i_a_l_25: int;
  var {:scalar} FirstStatus_1: int;
  var {:pointer} Tmp_649: int;
  var {:scalar} SetFirstStatus_1: int;
  var {:pointer} Tmp_650: int;
  var {:pointer} Tmp_651: int;
  var {:pointer} Tmp_652: int;
  var {:pointer} Tmp_653: int;
  var {:pointer} Tmp_654: int;
  var {:pointer} Tmp_655: int;
  var {:pointer} Tmp_656: int;
  var {:pointer} IrpSp_2: int;
  var {:scalar} OldIrql_10: int;
  var {:pointer} Tmp_657: int;
  var {:pointer} NewIrp_4: int;
  var {:scalar} s_p_e_c_i_a_l_26: int;
  var {:pointer} Tmp_658: int;
  var {:pointer} sdv_615: int;
  var {:pointer} Tmp_659: int;
  var {:pointer} Tmp_660: int;
  var {:pointer} Tmp_661: int;
  var {:pointer} Tmp_662: int;
  var {:pointer} Tmp_663: int;
  var {:pointer} Tmp_664: int;
  var {:pointer} sdv_618: int;
  var {:pointer} Tmp_665: int;
  var {:pointer} Tmp_666: int;
  var {:pointer} Extension_19: int;
  var vslice_dummy_var_409: int;
  var vslice_dummy_var_410: int;
  var vslice_dummy_var_411: int;
  var vslice_dummy_var_412: int;
  var vslice_dummy_var_413: int;
  var vslice_dummy_var_414: int;
  var vslice_dummy_var_415: int;
  var vslice_dummy_var_416: int;
  var vslice_dummy_var_417: int;
  var vslice_dummy_var_418: int;
  var vslice_dummy_var_419: int;
  var vslice_dummy_var_420: int;
  var vslice_dummy_var_421: int;
  var vslice_dummy_var_422: int;
  var vslice_dummy_var_423: int;
  var vslice_dummy_var_424: int;
  var vslice_dummy_var_425: int;
  var vslice_dummy_var_215: int;
  var vslice_dummy_var_216: int;
  var vslice_dummy_var_217: int;
  var vslice_dummy_var_218: int;

  anon0:
    call {:si_unique_call 1527} NewIrp_4 := __HAVOC_malloc(4);
    Extension_19 := actual_Extension_19;
    call {:si_unique_call 1528} Tmp_648 := __HAVOC_malloc(68);
    call {:si_unique_call 1529} Tmp_649 := __HAVOC_malloc(288);
    call {:si_unique_call 1530} Tmp_651 := __HAVOC_malloc(84);
    call {:si_unique_call 1531} Tmp_652 := __HAVOC_malloc(288);
    call {:si_unique_call 1532} Tmp_653 := __HAVOC_malloc(288);
    call {:si_unique_call 1533} Tmp_654 := __HAVOC_malloc(368);
    call {:si_unique_call 1534} Tmp_655 := __HAVOC_malloc(160);
    call {:si_unique_call 1535} Tmp_659 := __HAVOC_malloc(288);
    call {:si_unique_call 1536} Tmp_660 := __HAVOC_malloc(284);
    call {:si_unique_call 1537} Tmp_661 := __HAVOC_malloc(148);
    call {:si_unique_call 1538} Tmp_662 := __HAVOC_malloc(128);
    call {:si_unique_call 1539} Tmp_663 := __HAVOC_malloc(368);
    call {:si_unique_call 1540} Tmp_664 := __HAVOC_malloc(368);
    call {:si_unique_call 1541} Tmp_666 := __HAVOC_malloc(368);
    SetFirstStatus_1 := 0;
    Tmp_648 := strConst__li2bpl186;
    call {:si_unique_call 1542} vslice_dummy_var_411 := CyyDbgPrintEx(6, Tmp_648);
    goto L11;

  L11:
    call {:si_unique_call 1543} s_p_e_c_i_a_l_25, FirstStatus_1, Tmp_649, SetFirstStatus_1, Tmp_650, Tmp_651, Tmp_652, Tmp_653, Tmp_654, Tmp_655, Tmp_656, IrpSp_2, OldIrql_10, Tmp_657, s_p_e_c_i_a_l_26, Tmp_658, sdv_615, Tmp_659, Tmp_660, Tmp_661, Tmp_662, Tmp_663, Tmp_664, sdv_618, Tmp_665, Tmp_666, vslice_dummy_var_409, vslice_dummy_var_410, vslice_dummy_var_412, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415, vslice_dummy_var_416, vslice_dummy_var_417, vslice_dummy_var_418, vslice_dummy_var_419, vslice_dummy_var_420, vslice_dummy_var_421, vslice_dummy_var_422, vslice_dummy_var_423, vslice_dummy_var_424, vslice_dummy_var_425 := CyyStartMask_loop_L11(s_p_e_c_i_a_l_25, FirstStatus_1, Tmp_649, SetFirstStatus_1, Tmp_650, Tmp_651, Tmp_652, Tmp_653, Tmp_654, Tmp_655, Tmp_656, IrpSp_2, OldIrql_10, Tmp_657, NewIrp_4, s_p_e_c_i_a_l_26, Tmp_658, sdv_615, Tmp_659, Tmp_660, Tmp_661, Tmp_662, Tmp_663, Tmp_664, sdv_618, Tmp_665, Tmp_666, Extension_19, vslice_dummy_var_409, vslice_dummy_var_410, vslice_dummy_var_412, vslice_dummy_var_413, vslice_dummy_var_414, vslice_dummy_var_415, vslice_dummy_var_416, vslice_dummy_var_417, vslice_dummy_var_418, vslice_dummy_var_419, vslice_dummy_var_420, vslice_dummy_var_421, vslice_dummy_var_422, vslice_dummy_var_423, vslice_dummy_var_424, vslice_dummy_var_425);
    goto L11_last;

  L11_last:
    Tmp_662 := strConst__li2bpl179;
    call {:si_unique_call 1572} vslice_dummy_var_412 := CyyDbgPrintEx(7, Tmp_662);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_218;
    call {:si_unique_call 1573} IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_218);
    assume {:nonnull} IrpSp_2 != 0;
    assume IrpSp_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    Tmp_651 := strConst__li2bpl180;
    call {:si_unique_call 1544} vslice_dummy_var_413 := CyyDbgPrintEx(7, Tmp_651);
    call {:si_unique_call 1545} vslice_dummy_var_409 := KeSynchronizeExecution(0, li2bplFunctionConstant178, 0);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_658;
    assume {:nonnull} Tmp_658 != 0;
    assume Tmp_658 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 1546} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(Extension_19), NewIrp_4, 1, Extension_19);
    Tmp_663 := strConst__li2bpl182;
    call {:si_unique_call 1547} vslice_dummy_var_414 := CyyDbgPrintEx(7, Tmp_663);
    goto L37;

  L37:
    assume {:nonnull} NewIrp_4 != 0;
    assume NewIrp_4 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    Tmp_647 := FirstStatus_1;
    return;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    assume false;
    return;

  anon29_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_649 := strConst__li2bpl181;
    call {:si_unique_call 1548} vslice_dummy_var_415 := CyyDbgPrintEx(7, Tmp_649);
    FirstStatus_1 := 0;
    SetFirstStatus_1 := 1;
    goto L31;

  anon23_Then:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 1549} Tmp_657 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    call {:si_unique_call 1550} IoAcquireCancelSpinLock(Tmp_657);
    assume {:nonnull} Tmp_657 != 0;
    assume Tmp_657 > 0;
    havoc OldIrql_10;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_656;
    call {:si_unique_call 1551} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Tmp_656 != 0;
    assume Tmp_656 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    Tmp_655 := strConst__li2bpl185;
    call {:si_unique_call 1552} vslice_dummy_var_419 := CyyDbgPrintEx(7, Tmp_655);
    call {:si_unique_call 1553} IoReleaseCancelSpinLock(OldIrql_10);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_665;
    assume {:nonnull} Tmp_665 != 0;
    assume Tmp_665 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 1554} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(Extension_19), NewIrp_4, 1, Extension_19);
    Tmp_664 := strConst__li2bpl182;
    call {:si_unique_call 1555} vslice_dummy_var_420 := CyyDbgPrintEx(7, Tmp_664);
    goto L37;

  anon31_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_653 := strConst__li2bpl181;
    call {:si_unique_call 1556} vslice_dummy_var_421 := CyyDbgPrintEx(7, Tmp_653);
    FirstStatus_1 := -1073741536;
    SetFirstStatus_1 := 1;
    goto L64;

  anon28_Then:
    Tmp_661 := strConst__li2bpl184;
    call {:si_unique_call 1557} vslice_dummy_var_422 := CyyDbgPrintEx(7, Tmp_661);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_215;
    call {:si_unique_call 1558} sdv_615 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_215);
    assume {:nonnull} sdv_615 != 0;
    assume sdv_615 > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1559} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant179);
    goto L132;

  L132:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_216;
    call {:si_unique_call 1560} vslice_dummy_var_410 := sdv_IoSetCancelRoutine(vslice_dummy_var_216, li2bplFunctionConstant179);
    s_p_e_c_i_a_l_26 := 2;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc vslice_dummy_var_217;
    call {:si_unique_call 1561} sdv_618 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_217);
    assume {:nonnull} sdv_618 != 0;
    assume sdv_618 > 0;
    s_p_e_c_i_a_l_25 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_618)));
    assume {:nonnull} s_p_e_c_i_a_l_25 != 0;
    assume s_p_e_c_i_a_l_25 > 0;
    call {:si_unique_call 1562} vslice_dummy_var_423 := KeSynchronizeExecution(0, li2bplFunctionConstant180, 0);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 1563} CyyGetNextIrpLocked(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(Extension_19), NewIrp_4, 0, Extension_19, OldIrql_10);
    Tmp_654 := strConst__li2bpl182;
    call {:si_unique_call 1564} vslice_dummy_var_424 := CyyDbgPrintEx(7, Tmp_654);
    goto L37;

  anon32_Then:
    goto L132;

  anon27_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_659 := strConst__li2bpl181;
    call {:si_unique_call 1565} vslice_dummy_var_425 := CyyDbgPrintEx(7, Tmp_659);
    FirstStatus_1 := 259;
    SetFirstStatus_1 := 1;
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1566} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L135;

  L135:
    call {:si_unique_call 1567} sdv_IoMarkIrpPending(0);
    goto L76;

  anon33_Then:
    goto L135;

  anon26_Then:
    goto L41;

  L41:
    Tmp_660 := strConst__li2bpl183;
    call {:si_unique_call 1568} vslice_dummy_var_416 := CyyDbgPrintEx(7, Tmp_660);
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    havoc Tmp_650;
    assume {:nonnull} Tmp_650 != 0;
    assume Tmp_650 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} Extension_19 != 0;
    assume Extension_19 > 0;
    call {:si_unique_call 1569} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(Extension_19), NewIrp_4, 1, Extension_19);
    Tmp_666 := strConst__li2bpl182;
    call {:si_unique_call 1570} vslice_dummy_var_417 := CyyDbgPrintEx(7, Tmp_666);
    goto L37;

  anon30_Then:
    assume {:partition} SetFirstStatus_1 == 0;
    Tmp_652 := strConst__li2bpl181;
    call {:si_unique_call 1571} vslice_dummy_var_418 := CyyDbgPrintEx(7, Tmp_652);
    FirstStatus_1 := -1073741811;
    SetFirstStatus_1 := 1;
    goto L112;

  anon24_Then:
    goto L41;
}



procedure {:origName "CyyStartFlush"} CyyStartFlush(actual_Extension_20: int) returns (Tmp_667: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures Tmp_667 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartFlush"} CyyStartFlush(actual_Extension_20: int) returns (Tmp_667: int)
{
  var {:pointer} Tmp_669: int;
  var {:pointer} NewIrp_5: int;
  var {:pointer} Extension_20: int;
  var vslice_dummy_var_426: int;

  anon0:
    call {:si_unique_call 1574} NewIrp_5 := __HAVOC_malloc(4);
    Extension_20 := actual_Extension_20;
    call {:si_unique_call 1575} sdv_do_paged_code_check();
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    havoc Tmp_669;
    assume {:nonnull} Tmp_669 != 0;
    assume Tmp_669 > 0;
    assume {:nonnull} Extension_20 != 0;
    assume Extension_20 > 0;
    call {:si_unique_call 1576} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_20), WriteQueue__CYY_DEVICE_EXTENSION(Extension_20), NewIrp_5, 1, Extension_20);
    assume {:nonnull} NewIrp_5 != 0;
    assume NewIrp_5 > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1577} vslice_dummy_var_426 := CyyStartWrite#1(Extension_20);
    goto L12;

  L12:
    Tmp_667 := 0;
    return;

  anon3_Then:
    goto L12;
}



procedure {:origName "CyyDbgPrintEx"} CyyDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_670: int);
  free ensures Tmp_670 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyDbgPrintEx"} CyyDbgPrintEx(actual_Level: int, actual_Format: int) returns (Tmp_670: int)
{

  anon0:
    Tmp_670 := 0;
    return;
}



procedure {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "InitializeListHead"} InitializeListHead(actual_ListHead: int)
{
  var {:pointer} ListHead: int;
  var vslice_dummy_var_427: int;

  anon0:
    call {:si_unique_call 1578} vslice_dummy_var_427 := __HAVOC_malloc(4);
    ListHead := actual_ListHead;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    assume {:nonnull} ListHead != 0;
    assume ListHead > 0;
    return;
}



procedure {:origName "CyyFlush"} CyyFlush(actual_DeviceObject_13: int, actual_Irp_13: int) returns (Tmp_674: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyFlush"} CyyFlush(actual_DeviceObject_13: int, actual_Irp_13: int) returns (Tmp_674: int)
{
  var {:pointer} Tmp_675: int;
  var {:pointer} Tmp_676: int;
  var {:pointer} Tmp_677: int;
  var {:pointer} Extension_21: int;
  var {:scalar} sdv_628: int;
  var {:pointer} Tmp_679: int;
  var {:scalar} status_20: int;
  var {:pointer} Tmp_680: int;
  var {:pointer} Tmp_681: int;
  var {:pointer} DeviceObject_13: int;
  var {:pointer} Irp_13: int;
  var vslice_dummy_var_428: int;
  var vslice_dummy_var_429: int;
  var vslice_dummy_var_430: int;
  var vslice_dummy_var_431: int;
  var vslice_dummy_var_432: int;
  var vslice_dummy_var_433: int;

  anon0:
    DeviceObject_13 := actual_DeviceObject_13;
    Irp_13 := actual_Irp_13;
    call {:si_unique_call 1579} Tmp_675 := __HAVOC_malloc(72);
    call {:si_unique_call 1580} Tmp_676 := __HAVOC_malloc(76);
    call {:si_unique_call 1581} Tmp_677 := __HAVOC_malloc(72);
    call {:si_unique_call 1582} Tmp_679 := __HAVOC_malloc(72);
    call {:si_unique_call 1583} Tmp_680 := __HAVOC_malloc(96);
    call {:si_unique_call 1584} Tmp_681 := __HAVOC_malloc(72);
    assume {:nonnull} DeviceObject_13 != 0;
    assume DeviceObject_13 > 0;
    havoc Extension_21;
    call {:si_unique_call 1585} sdv_do_paged_code_check();
    Tmp_680 := strConst__li2bpl6;
    call {:si_unique_call 1586} vslice_dummy_var_428 := CyyDbgPrintEx(9, Tmp_680);
    Tmp_676 := strConst__li2bpl187;
    call {:si_unique_call 1587} vslice_dummy_var_429 := CyyDbgPrintEx(2, Tmp_676);
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    call {:si_unique_call 1588} status_20 := CyyIRPPrologue(Irp_13, Extension_21);
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} status_20 != 0;
    assume {:nonnull} Irp_13 != 0;
    assume Irp_13 > 0;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_20 >= 0;
    goto L29;

  L29:
    Tmp_675 := strConst__li2bpl188;
    call {:si_unique_call 1589} vslice_dummy_var_430 := CyyDbgPrintEx(2, Tmp_675);
    Tmp_674 := status_20;
    goto L1;

  L1:
    return;

  anon9_Then:
    assume {:partition} 0 > status_20;
    Tmp_679 := strConst__li2bpl3;
    call {:si_unique_call 1590} vslice_dummy_var_431 := CyyDbgPrintEx(9, Tmp_679);
    call {:si_unique_call 1591} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1592} CyyIRPEpilogue(Extension_21);
    goto L29;

  anon7_Then:
    assume {:partition} status_20 == 0;
    call {:si_unique_call 1593} sdv_628 := CyyCompleteIfError(DeviceObject_13, Irp_13);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} sdv_628 != 0;
    Tmp_677 := strConst__li2bpl189;
    call {:si_unique_call 1594} vslice_dummy_var_432 := CyyDbgPrintEx(2, Tmp_677);
    Tmp_674 := -1073741536;
    goto L1;

  anon8_Then:
    assume {:partition} sdv_628 == 0;
    assume {:nonnull} Extension_21 != 0;
    assume Extension_21 > 0;
    call {:si_unique_call 1595} status_20 := CyyStartOrQueue(Extension_21, Irp_13, WriteQueue__CYY_DEVICE_EXTENSION(Extension_21), CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_21), li2bplFunctionConstant113);
    Tmp_681 := strConst__li2bpl190;
    call {:si_unique_call 1596} vslice_dummy_var_433 := CyyDbgPrintEx(2, Tmp_681);
    Tmp_674 := status_20;
    goto L1;
}



procedure {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_682: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "RemoveHeadList"} RemoveHeadList(actual_ListHead_1: int) returns (Tmp_682: int)
{
  var {:pointer} Entry: int;
  var {:pointer} Flink: int;
  var {:pointer} ListHead_1: int;

  anon0:
    ListHead_1 := actual_ListHead_1;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    havoc Entry;
    assume {:nonnull} Entry != 0;
    assume Entry > 0;
    havoc Flink;
    assume {:nonnull} ListHead_1 != 0;
    assume ListHead_1 > 0;
    assume {:nonnull} Flink != 0;
    assume Flink > 0;
    Tmp_682 := Entry;
    return;
}



procedure {:origName "_sdv_init1"} _sdv_init1();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init1"} _sdv_init1()
{
  var vslice_dummy_var_434: int;

  anon0:
    call {:si_unique_call 1597} vslice_dummy_var_434 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init17"} _sdv_init17();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init17"} _sdv_init17()
{
  var vslice_dummy_var_435: int;

  anon0:
    call {:si_unique_call 1598} vslice_dummy_var_435 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoCopyCurrentIrpStackLocationToNext"} {:osmodel} sdv_IoCopyCurrentIrpStackLocationToNext(actual_pirp: int)
{
  var {:pointer} pirp: int;
  var vslice_dummy_var_436: int;

  anon0:
    call {:si_unique_call 1599} vslice_dummy_var_436 := __HAVOC_malloc(4);
    pirp := actual_pirp;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_690: int);
  free ensures Tmp_690 == actual_Address;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_containing_record"} {:osmodel} sdv_containing_record(actual_Address: int, actual_FieldOffset: int) returns (Tmp_690: int)
{
  var {:pointer} record: int;
  var {:pointer} Address: int;

  anon0:
    Address := actual_Address;
    record := Address;
    Tmp_690 := record;
    return;
}



procedure {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_KeAcquireSpinLock"} {:osmodel} sdv_KeAcquireSpinLock(actual_SpinLock: int, actual_p: int)
{
  var {:pointer} p: int;
  var vslice_dummy_var_437: int;

  anon0:
    call {:si_unique_call 1600} vslice_dummy_var_437 := __HAVOC_malloc(4);
    p := actual_p;
    assume {:nonnull} p != 0;
    assume p > 0;
    return;
}



procedure {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_694: int);
  free ensures Tmp_694 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckDispatchRoutines"} {:osmodel} sdv_CheckDispatchRoutines() returns (Tmp_694: int)
{

  anon0:
    Tmp_694 := 1;
    return;
}



procedure {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_stub_startio_end"} {:osmodel} sdv_stub_startio_end()
{
  var vslice_dummy_var_438: int;

  anon0:
    call {:si_unique_call 1601} vslice_dummy_var_438 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "MmLockPagableSectionByHandle"} {:osmodel} MmLockPagableSectionByHandle(actual_ImageSectionHandle: int)
{
  var vslice_dummy_var_439: int;

  anon0:
    call {:si_unique_call 1602} vslice_dummy_var_439 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_structPtr888DueTime: int, actual_Dpc_1: int) returns (Tmp_700: int);
  modifies alloc;
  free ensures Tmp_700 == 1 || Tmp_700 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeSetTimer"} {:osmodel} KeSetTimer(actual_Timer_2: int, actual_structPtr888DueTime: int, actual_Dpc_1: int) returns (Tmp_700: int)
{
  var {:scalar} DueTime: int;
  var {:pointer} structPtr888DueTime: int;

  anon0:
    call {:si_unique_call 1603} DueTime := __HAVOC_malloc(20);
    structPtr888DueTime := actual_structPtr888DueTime;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    assume {:nonnull} DueTime != 0;
    assume DueTime > 0;
    assume {:nonnull} structPtr888DueTime != 0;
    assume structPtr888DueTime > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_700 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_700 := 0;
    goto L1;
}



procedure {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_702: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoGetNextIrpStackLocation"} {:osmodel} sdv_IoGetNextIrpStackLocation(actual_pirp_1: int) returns (Tmp_702: int)
{
  var {:pointer} pirp_1: int;

  anon0:
    pirp_1 := actual_pirp_1;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_1 == sdv_harnessIrp;
    Tmp_702 := sdv_harnessStackLocation_next;
    goto L1;

  L1:
    return;

  anon5_Then:
    assume {:partition} pirp_1 != sdv_harnessIrp;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_1 == sdv_other_harnessIrp;
    Tmp_702 := sdv_other_harnessStackLocation_next;
    goto L1;

  anon6_Then:
    assume {:partition} pirp_1 != sdv_other_harnessIrp;
    Tmp_702 := sdv_harnessStackLocation;
    goto L1;
}



procedure {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_2: int, actual_DeferredRoutine: int, actual_DeferredContext: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeInitializeDpc"} {:osmodel} KeInitializeDpc(actual_Dpc_2: int, actual_DeferredRoutine: int, actual_DeferredContext: int)
{
  var {:pointer} Dpc_2: int;
  var {:scalar} DeferredRoutine: int;
  var vslice_dummy_var_440: int;

  anon0:
    call {:si_unique_call 1604} vslice_dummy_var_440 := __HAVOC_malloc(4);
    Dpc_2 := actual_Dpc_2;
    DeferredRoutine := actual_DeferredRoutine;
    assume {:nonnull} Dpc_2 != 0;
    assume Dpc_2 > 0;
    return;
}



procedure {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoDetachDevice"} {:osmodel} IoDetachDevice(actual_TargetDevice: int)
{
  var vslice_dummy_var_441: int;

  anon0:
    call {:si_unique_call 1605} vslice_dummy_var_441 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_708: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoSetCancelRoutine"} {:osmodel} sdv_IoSetCancelRoutine(actual_pirp_2: int, actual_CancelRoutine: int) returns (Tmp_708: int)
{
  var {:scalar} r: int;
  var {:pointer} pirp_2: int;
  var {:scalar} CancelRoutine: int;

  anon0:
    pirp_2 := actual_pirp_2;
    CancelRoutine := actual_CancelRoutine;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    havoc r;
    assume {:nonnull} pirp_2 != 0;
    assume pirp_2 > 0;
    Tmp_708 := r;
    return;
}



procedure {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RtlMoveMemory"} {:osmodel} sdv_RtlMoveMemory(actual_Destination: int, actual_Source: int, actual_Length: int)
{
  var vslice_dummy_var_442: int;

  anon0:
    call {:si_unique_call 1606} vslice_dummy_var_442 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_712: int);
  free ensures Tmp_712 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckIrpMjPower"} {:osmodel} sdv_CheckIrpMjPower() returns (Tmp_712: int)
{

  anon0:
    Tmp_712 := 1;
    return;
}



procedure {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_SetPowerIrpMinorFunction"} {:osmodel} sdv_SetPowerIrpMinorFunction(actual_pirp_3: int)
{
  var {:pointer} r_1: int;
  var {:pointer} pirp_3: int;
  var vslice_dummy_var_443: int;

  anon0:
    call {:si_unique_call 1607} vslice_dummy_var_443 := __HAVOC_malloc(4);
    pirp_3 := actual_pirp_3;
    assume {:nonnull} pirp_3 != 0;
    assume pirp_3 > 0;
    havoc r_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon13_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon15_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon11_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;

  anon14_Then:
    assume {:nonnull} r_1 != 0;
    assume r_1 > 0;
    goto L1;
}



procedure {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_stub_dispatch_end"} {:osmodel} sdv_stub_dispatch_end(actual_s: int, actual_pirp_4: int)
{
  var vslice_dummy_var_444: int;

  anon0:
    call {:si_unique_call 1608} vslice_dummy_var_444 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_718: int);
  free ensures Tmp_718 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckCancelRoutines"} {:osmodel} sdv_CheckCancelRoutines() returns (Tmp_718: int)
{

  anon0:
    Tmp_718 := 1;
    return;
}



procedure {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_720: int);
  free ensures Tmp_720 == 1 || Tmp_720 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "OneOfTwoBOOLEAN"} {:osmodel} OneOfTwoBOOLEAN() returns (Tmp_720: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_720 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_720 := 0;
    goto L1;
}



procedure {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_SetStatus"} {:osmodel} sdv_SetStatus(actual_pirp_5: int)
{
  var {:pointer} pirp_5: int;
  var vslice_dummy_var_445: int;

  anon0:
    call {:si_unique_call 1609} vslice_dummy_var_445 := __HAVOC_malloc(4);
    pirp_5 := actual_pirp_5;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    assume {:nonnull} pirp_5 != 0;
    assume pirp_5 > 0;
    goto L1;
}



procedure {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_3: int) returns (Tmp_724: int);
  free ensures Tmp_724 == 1 || Tmp_724 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeRemoveQueueDpc"} {:osmodel} KeRemoveQueueDpc(actual_Dpc_3: int) returns (Tmp_724: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_724 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_724 := 0;
    goto L1;
}



procedure {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_726: int);
  free ensures Tmp_726 == 0 || Tmp_726 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeDelayExecutionThread"} {:osmodel} KeDelayExecutionThread(actual_WaitMode: int, actual_Alertable: int, actual_Interval: int) returns (Tmp_726: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_726 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_726 := -1073741823;
    goto L1;
}



procedure {:nohoudini} {:origName "sdv_main"} {:osmodel} sdv_main();
  modifies alloc, SLAM_guard_S_0, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled, yogi_error;
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_main"} {:osmodel} sdv_main()
{
  var {:scalar} sdv_639: int;
  var {:scalar} sdv_653: int;
  var vslice_dummy_var_446: int;
  var vslice_dummy_var_447: int;
  var vslice_dummy_var_448: int;
  var vslice_dummy_var_449: int;
  var vslice_dummy_var_450: int;
  var vslice_dummy_var_451: int;
  var vslice_dummy_var_452: int;
  var vslice_dummy_var_453: int;
  var vslice_dummy_var_454: int;
  var vslice_dummy_var_455: int;
  var vslice_dummy_var_456: int;
  var vslice_dummy_var_457: int;

  anon0:
    call {:si_unique_call 1610} vslice_dummy_var_446 := __HAVOC_malloc(4);
    SLAM_guard_S_0 := sdv_irp;
    assume SLAM_guard_S_0 != 0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1611} sdv_653 := sdv_CheckDispatchRoutines();
    call {:si_unique_call 1612} sdv_639 := sdv_CheckStartIoRoutines();
    call {:si_unique_call 1613} vslice_dummy_var_447 := sdv_CheckDpcRoutines();
    call {:si_unique_call 1614} vslice_dummy_var_448 := sdv_CheckIsrRoutines();
    call {:si_unique_call 1615} vslice_dummy_var_449 := sdv_CheckCancelRoutines();
    call {:si_unique_call 1616} vslice_dummy_var_450 := sdv_CheckIoDpcRoutines();
    call {:si_unique_call 1617} vslice_dummy_var_451 := sdv_IoCompletionRoutines();
    call {:si_unique_call 1618} vslice_dummy_var_452 := sdv_CheckWorkerRoutines();
    call {:si_unique_call 1619} vslice_dummy_var_453 := sdv_CheckAddDevice();
    call {:si_unique_call 1620} vslice_dummy_var_454 := sdv_CheckIrpMjPnp();
    call {:si_unique_call 1621} vslice_dummy_var_455 := sdv_CheckIrpMjPower();
    call {:si_unique_call 1622} vslice_dummy_var_456 := sdv_CheckDriverUnload();
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} sdv_639 != 0;
    call {:si_unique_call 1623} sdv_stub_driver_init();
    call {:si_unique_call 1624} sdv_RunStartIo(0, 0);
    goto L1;

  L1:
    goto LM2;

  LM2:
    return;

  anon13_Then:
    assume {:partition} sdv_639 == 0;
    goto L1;

  anon14_Then:
    goto L1;

  anon11_Then:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} sdv_653 != 0;
    call {:si_unique_call 1625} sdv_stub_driver_init();
    call {:si_unique_call 1626} vslice_dummy_var_457 := sdv_RunDispatchFunction(sdv_p_devobj_fdo, sdv_irp);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} yogi_error != 1;
    goto L1;

  anon15_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon12_Then:
    assume {:partition} sdv_653 == 0;
    goto L1;
}



procedure {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_730: int);
  free ensures Tmp_730 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckDriverUnload"} {:osmodel} sdv_CheckDriverUnload() returns (Tmp_730: int)
{

  anon0:
    Tmp_730 := 1;
    return;
}



procedure {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_732: int);
  free ensures Tmp_732 == 0 || Tmp_732 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoCreateSymbolicLink"} {:osmodel} IoCreateSymbolicLink(actual_SymbolicLinkName: int, actual_DeviceName: int) returns (Tmp_732: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_732 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_732 := -1073741823;
    goto L1;
}



procedure {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_734: int);
  free ensures Tmp_734 == 0 || Tmp_734 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoDeleteSymbolicLink"} {:osmodel} IoDeleteSymbolicLink(actual_SymbolicLinkName_1: int) returns (Tmp_734: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_734 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_734 := -1073741823;
    goto L1;
}



procedure {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_736: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoAllocateErrorLogEntry"} {:osmodel} IoAllocateErrorLogEntry(actual_IoObject: int, actual_EntrySize: int) returns (Tmp_736: int)
{
  var {:pointer} sdv_667: int;

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1627} sdv_667 := __HAVOC_malloc(1);
    Tmp_736 := sdv_667;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_736 := 0;
    goto L1;
}



procedure {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_738: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_ExAllocatePoolWithQuotaTag"} {:osmodel} sdv_ExAllocatePoolWithQuotaTag(actual_PoolType: int, actual_NumberOfBytes: int, actual_Tag: int) returns (Tmp_738: int)
{
  var {:pointer} sdv_669: int;
  var {:scalar} NumberOfBytes: int;

  anon0:
    NumberOfBytes := actual_NumberOfBytes;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1628} sdv_669 := __HAVOC_malloc(NumberOfBytes);
    Tmp_738 := sdv_669;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_738 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_740: int);
  free ensures Tmp_740 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckIoDpcRoutines"} {:osmodel} sdv_CheckIoDpcRoutines() returns (Tmp_740: int)
{

  anon0:
    Tmp_740 := 0;
    return;
}



procedure {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_742: int);
  free ensures Tmp_742 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckDpcRoutines"} {:osmodel} sdv_CheckDpcRoutines() returns (Tmp_742: int)
{

  anon0:
    Tmp_742 := 1;
    return;
}



procedure {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_14: int, actual_Irp_14: int) returns (Tmp_744: int);
  free ensures Tmp_744 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "PoCallDriver"} {:osmodel} PoCallDriver(actual_DeviceObject_14: int, actual_Irp_14: int) returns (Tmp_744: int)
{
  var {:scalar} status_21: int;
  var {:pointer} Irp_14: int;

  anon0:
    Irp_14 := actual_Irp_14;
    status_21 := 259;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  L25:
    Tmp_744 := status_21;
    return;

  anon33_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon32_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L19;

  anon40_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon39_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L44;

  anon41_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L28;

  anon31_Then:
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    assume {:nonnull} Irp_14 != 0;
    assume Irp_14 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_14;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_14;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_14;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_14;
    goto L36;
}



procedure {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_15: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "PoSetPowerState"} {:osmodel} PoSetPowerState(actual_DeviceObject_15: int, actual_Type: int, actual_structPtr888State: int) returns (structPtr888Tmp: int)
{
  var {:scalar} State: int;
  var {:scalar} r_2: int;
  var {:scalar} Tmp: int;
  var {:pointer} structPtr888State: int;

  anon0:
    call {:si_unique_call 1629} State := __HAVOC_malloc(8);
    call {:si_unique_call 1630} r_2 := __HAVOC_malloc(8);
    call {:si_unique_call 1631} Tmp := __HAVOC_malloc(8);
    structPtr888State := actual_structPtr888State;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} State != 0;
    assume State > 0;
    assume {:nonnull} structPtr888State != 0;
    assume structPtr888State > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    assume {:nonnull} Tmp != 0;
    assume Tmp > 0;
    assume {:nonnull} r_2 != 0;
    assume r_2 > 0;
    structPtr888Tmp := Tmp;
    return;
}



procedure {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_747: int);
  free ensures Tmp_747 == 1 || Tmp_747 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeCancelTimer"} {:osmodel} KeCancelTimer(actual_Timer_3: int) returns (Tmp_747: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_747 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_747 := 0;
    goto L1;
}



procedure {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoWriteErrorLogEntry"} {:osmodel} IoWriteErrorLogEntry(actual_ElEntry: int)
{
  var vslice_dummy_var_458: int;

  anon0:
    call {:si_unique_call 1632} vslice_dummy_var_458 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoSetCompletionRoutine"} {:osmodel} sdv_IoSetCompletionRoutine(actual_pirp_6: int, actual_CompletionRoutine: int, actual_Context_2: int, actual_InvokeOnSuccess: int, actual_InvokeOnError: int, actual_InvokeOnCancel: int)
{
  var {:pointer} irpSp_3: int;
  var {:pointer} pirp_6: int;
  var {:scalar} CompletionRoutine: int;
  var {:pointer} Context_2: int;
  var {:scalar} InvokeOnSuccess: int;
  var {:scalar} InvokeOnError: int;
  var {:scalar} InvokeOnCancel: int;
  var vslice_dummy_var_459: int;

  anon0:
    call {:si_unique_call 1633} vslice_dummy_var_459 := __HAVOC_malloc(4);
    pirp_6 := actual_pirp_6;
    CompletionRoutine := actual_CompletionRoutine;
    Context_2 := actual_Context_2;
    InvokeOnSuccess := actual_InvokeOnSuccess;
    InvokeOnError := actual_InvokeOnError;
    InvokeOnCancel := actual_InvokeOnCancel;
    call {:si_unique_call 1634} irpSp_3 := sdv_IoGetNextIrpStackLocation(pirp_6);
    assume {:nonnull} irpSp_3 != 0;
    assume irpSp_3 > 0;
    return;
}



procedure {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "ExAcquireFastMutex"} {:osmodel} ExAcquireFastMutex(actual_FastMutex: int)
{
  var vslice_dummy_var_460: int;

  anon0:
    call {:si_unique_call 1635} vslice_dummy_var_460 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_755: int);
  free ensures Tmp_755 == 1 || Tmp_755 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RemoveEntryList"} {:osmodel} sdv_RemoveEntryList(actual_Entry_1: int) returns (Tmp_755: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_755 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_755 := 0;
    goto L1;
}



procedure {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_757: int);
  free ensures Tmp_757 == 0 || Tmp_757 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "RtlDeleteRegistryValue"} {:osmodel} RtlDeleteRegistryValue(actual_RelativeTo: int, actual_Path: int, actual_ValueName: int) returns (Tmp_757: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_757 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_757 := -1073741823;
    goto L1;
}



procedure {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_15: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "PoStartNextPowerIrp"} {:osmodel} PoStartNextPowerIrp(actual_Irp_15: int)
{
  var vslice_dummy_var_461: int;

  anon0:
    call {:si_unique_call 1636} vslice_dummy_var_461 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_761: int);
  free ensures Tmp_761 == 258 || Tmp_761 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeWaitForSingleObject"} {:osmodel} KeWaitForSingleObject(actual_Object: int, actual_WaitReason: int, actual_WaitMode_1: int, actual_Alertable_1: int, actual_Timeout: int) returns (Tmp_761: int)
{
  var {:pointer} Timeout: int;

  anon0:
    Timeout := actual_Timeout;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} Timeout != 0;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_761 := 258;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_761 := 0;
    goto L1;

  anon5_Then:
    assume {:partition} Timeout == 0;
    Tmp_761 := 0;
    goto L1;
}



procedure {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_16: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoDeleteDevice"} {:osmodel} IoDeleteDevice(actual_DeviceObject_16: int)
{
  var vslice_dummy_var_462: int;

  anon0:
    call {:si_unique_call 1637} vslice_dummy_var_462 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_765: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeSetEvent"} {:osmodel} KeSetEvent(actual_Event: int, actual_Increment: int, actual_Wait: int) returns (Tmp_765: int)
{
  var {:scalar} OldState: int;
  var {:pointer} Event: int;

  anon0:
    Event := actual_Event;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    havoc OldState;
    assume {:nonnull} Event != 0;
    assume Event > 0;
    Tmp_765 := OldState;
    return;
}



procedure {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_769: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoGetCurrentIrpStackLocation"} {:osmodel} sdv_IoGetCurrentIrpStackLocation(actual_pirp_7: int) returns (Tmp_769: int)
{
  var {:pointer} pirp_7: int;

  anon0:
    pirp_7 := actual_pirp_7;
    assume {:nonnull} pirp_7 != 0;
    assume pirp_7 > 0;
    havoc Tmp_769;
    return;
}



procedure {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoReleaseCancelSpinLock"} {:osmodel} IoReleaseCancelSpinLock(actual_new: int)
{
  var {:scalar} new: int;
  var vslice_dummy_var_463: int;

  anon0:
    call {:si_unique_call 1638} vslice_dummy_var_463 := __HAVOC_malloc(4);
    new := actual_new;
    return;
}



procedure {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_773: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_KeGetCurrentIrql"} {:osmodel} sdv_KeGetCurrentIrql() returns (Tmp_773: int)
{

  anon0:
    havoc Tmp_773;
    return;
}



procedure {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_17: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_16: int) returns (Tmp_775: int);
  modifies alloc;
  free ensures Tmp_775 == -1073741584 || Tmp_775 == 259 || Tmp_775 == -1073741670;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "PoRequestPowerIrp"} {:osmodel} PoRequestPowerIrp(actual_DeviceObject_17: int, actual_MinorFunction: int, actual_structPtr888PowerState: int, actual_CompletionFunction: int, actual_Context_3: int, actual_Irp_16: int) returns (Tmp_775: int)
{
  var {:scalar} PowerState: int;
  var {:scalar} MinorFunction: int;
  var {:pointer} structPtr888PowerState: int;

  anon0:
    call {:si_unique_call 1639} PowerState := __HAVOC_malloc(8);
    MinorFunction := actual_MinorFunction;
    structPtr888PowerState := actual_structPtr888PowerState;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    assume {:nonnull} PowerState != 0;
    assume PowerState > 0;
    assume {:nonnull} structPtr888PowerState != 0;
    assume structPtr888PowerState > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} MinorFunction != 3;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} MinorFunction != 2;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} MinorFunction != 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_775 := -1073741584;
    goto L1;

  L1:
    return;

  anon11_Then:
    assume {:partition} MinorFunction == 0;
    goto L13;

  L13:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_775 := 259;
    goto L1;

  anon9_Then:
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    assume {:nonnull} sdv_power_irp != 0;
    assume sdv_power_irp > 0;
    Tmp_775 := -1073741670;
    goto L1;

  anon10_Then:
    assume {:partition} MinorFunction == 2;
    goto L13;

  anon12_Then:
    assume {:partition} MinorFunction == 3;
    goto L13;
}



procedure {:nohoudini} {:origName "main"} {:osmodel} {:entrypoint} main() returns (Tmp_777: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_1, SLAM_guard_S_0, IoSetCancelRoutineCalled, IrpPended, IrpCancelChecked, yogi_error;
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == 0;
  free ensures IrpPended == 1 || IrpPended == 0;
  free ensures yogi_error == 1 || yogi_error == 0;
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "main"} {:osmodel} main() returns (Tmp_777: int, dup_assertVar: bool)
{
  var {:scalar} Tmp_778: int;
  var {:scalar} Tmp_780: int;
  var boogieTmp: int;
  var WHEA_ERROR_PACKET_SECTION_GUID__Loc: int;
  var CyyGlobals__Loc: int;
  var SerialPortNameGuid__Loc: int;
  var SerailPortPerfGuid__Loc: int;
  var SerialPortPropertiesGuid__Loc: int;
  var SerialPortHWGuid__Loc: int;
  var SerialPortCommGuid__Loc: int;
  var KeTickCount__Loc: int;
  var CyyPhysicalZero__Loc: int;
  var CyyPhysicalZero_1__Loc: int;
  var driverDefaults__Loc: int;
  var CyyPhysicalZero_2__Loc: int;
  var GUID_DEVINTERFACE_COMPORT__Loc: int;
  var SLAM_guard_S_1_init__Loc: int;
  var SLAM_guard_S_0_init__Loc: int;
  var CyyPhysicalZero_3__Loc: int;
  var sdv_harnessStackLocation_next__Loc: int;
  var sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_ControllerIrp__Loc: int;
  var sdv_devobj_pdo__Loc: int;
  var sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc: int;
  var sdv_IoInitializeIrp_harnessIrp__Loc: int;
  var sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_IoCreateSynchronizationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation_next__Loc: int;
  var sdv_harnessStackLocation__Loc: int;
  var sdv_IoCreateController_CONTROLLER_OBJECT__Loc: int;
  var sdv_devobj_top__Loc: int;
  var sdv_kdpc_val3__Loc: int;
  var sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc: int;
  var sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc: int;
  var sdv_MapRegisterBase_val__Loc: int;
  var sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc: int;
  var sdv_IoMakeAssociatedIrp_harnessIrp__Loc: int;
  var sdv_devobj_child_pdo__Loc: int;
  var sdv_harnessIrp__Loc: int;
  var sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc: int;
  var sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc: int;
  var sdv_kinterrupt_val__Loc: int;
  var sdv_devobj_fdo__Loc: int;
  var sdv_DpcContext__Loc: int;
  var sdv_StartIoIrp__Loc: int;
  var sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc: int;
  var sdv_PowerIrp__Loc: int;
  var sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc: int;
  var sdv_other_harnessIrp__Loc: int;
  var sdv_IoCreateNotificationEvent_KEVENT__Loc: int;
  var sdv_other_harnessStackLocation__Loc: int;
  var sdv_MmMapIoSpace_int__Loc: int;
  var vslice_dummy_var_527: int;
  var vslice_dummy_var_528: int;
  var vslice_dummy_var_529: int;
  var vslice_dummy_var_530: int;
  var vslice_dummy_var_531: int;
  var vslice_dummy_var_532: int;
  var vslice_dummy_var_533: int;
  var vslice_dummy_var_534: int;
  var vslice_dummy_var_535: int;
  var vslice_dummy_var_536: int;
  var vslice_dummy_var_537: int;
  var vslice_dummy_var_538: int;
  var vslice_dummy_var_539: int;
  var vslice_dummy_var_540: int;
  var vslice_dummy_var_541: int;
  var vslice_dummy_var_542: int;
  var vslice_dummy_var_543: int;
  var vslice_dummy_var_544: int;
  var vslice_dummy_var_545: int;
  var vslice_dummy_var_546: int;
  var vslice_dummy_var_547: int;
  var vslice_dummy_var_548: int;
  var vslice_dummy_var_549: int;
  var vslice_dummy_var_550: int;
  var vslice_dummy_var_551: int;
  var vslice_dummy_var_552: int;
  var vslice_dummy_var_553: int;
  var vslice_dummy_var_554: int;
  var vslice_dummy_var_555: int;
  var vslice_dummy_var_556: int;
  var vslice_dummy_var_557: int;
  var vslice_dummy_var_558: int;
  var vslice_dummy_var_559: int;
  var vslice_dummy_var_560: int;
  var vslice_dummy_var_561: int;
  var vslice_dummy_var_562: int;
  var vslice_dummy_var_563: int;
  var vslice_dummy_var_564: int;
  var vslice_dummy_var_565: int;
  var vslice_dummy_var_566: int;
  var vslice_dummy_var_567: int;
  var vslice_dummy_var_568: int;
  var vslice_dummy_var_569: int;
  var vslice_dummy_var_570: int;
  var vslice_dummy_var_571: int;
  var vslice_dummy_var_572: int;
  var vslice_dummy_var_573: int;
  var vslice_dummy_var_574: int;
  var vslice_dummy_var_575: int;
  var vslice_dummy_var_576: int;
  var vslice_dummy_var_577: int;
  var vslice_dummy_var_578: int;
  var vslice_dummy_var_579: int;
  var vslice_dummy_var_580: int;
  var vslice_dummy_var_581: int;
  var vslice_dummy_var_582: int;
  var vslice_dummy_var_583: int;
  var vslice_dummy_var_584: int;
  var vslice_dummy_var_585: int;
  var vslice_dummy_var_586: int;
  var vslice_dummy_var_587: int;
  var vslice_dummy_var_588: int;
  var vslice_dummy_var_589: int;
  var vslice_dummy_var_590: int;
  var vslice_dummy_var_591: int;
  var vslice_dummy_var_592: int;
  var vslice_dummy_var_593: int;
  var vslice_dummy_var_594: int;
  var vslice_dummy_var_595: int;
  var vslice_dummy_var_596: int;
  var vslice_dummy_var_597: int;
  var vslice_dummy_var_598: int;
  var vslice_dummy_var_599: int;
  var vslice_dummy_var_600: int;
  var vslice_dummy_var_601: int;
  var vslice_dummy_var_602: int;
  var vslice_dummy_var_603: int;
  var vslice_dummy_var_604: int;
  var vslice_dummy_var_605: int;
  var vslice_dummy_var_606: int;
  var vslice_dummy_var_607: int;
  var vslice_dummy_var_608: int;
  var vslice_dummy_var_609: int;
  var vslice_dummy_var_610: int;
  var vslice_dummy_var_611: int;
  var vslice_dummy_var_612: int;
  var vslice_dummy_var_613: int;
  var vslice_dummy_var_614: int;
  var vslice_dummy_var_615: int;
  var vslice_dummy_var_616: int;
  var vslice_dummy_var_617: int;
  var vslice_dummy_var_618: int;
  var vslice_dummy_var_619: int;
  var vslice_dummy_var_620: int;
  var vslice_dummy_var_621: int;
  var vslice_dummy_var_219: int;
  var vslice_dummy_var_220: int;
  var vslice_dummy_var_221: int;
  var vslice_dummy_var_222: int;

  anon0:
    dup_assertVar := true;
    assume alloc > 0;
    call {:si_unique_call 1640} WHEA_ERROR_PACKET_SECTION_GUID__Loc := __HAVOC_malloc_or_null(16);
    assume WHEA_ERROR_PACKET_SECTION_GUID__Loc == WHEA_ERROR_PACKET_SECTION_GUID;
    assume WHEA_ERROR_PACKET_SECTION_GUID != 0;
    call {:si_unique_call 1641} CyyGlobals__Loc := __HAVOC_malloc_or_null(28);
    assume CyyGlobals__Loc == CyyGlobals;
    assume CyyGlobals != 0;
    call {:si_unique_call 1642} SerialPortNameGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortNameGuid__Loc == SerialPortNameGuid;
    assume SerialPortNameGuid != 0;
    call {:si_unique_call 1643} SerailPortPerfGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerailPortPerfGuid__Loc == SerailPortPerfGuid;
    assume SerailPortPerfGuid != 0;
    call {:si_unique_call 1644} SerialPortPropertiesGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortPropertiesGuid__Loc == SerialPortPropertiesGuid;
    assume SerialPortPropertiesGuid != 0;
    call {:si_unique_call 1645} SerialPortHWGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortHWGuid__Loc == SerialPortHWGuid;
    assume SerialPortHWGuid != 0;
    call {:si_unique_call 1646} SerialPortCommGuid__Loc := __HAVOC_malloc_or_null(16);
    assume SerialPortCommGuid__Loc == SerialPortCommGuid;
    assume SerialPortCommGuid != 0;
    call {:si_unique_call 1647} KeTickCount__Loc := __HAVOC_malloc_or_null(12);
    assume KeTickCount__Loc == KeTickCount;
    assume KeTickCount != 0;
    call {:si_unique_call 1648} CyyPhysicalZero__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero__Loc == CyyPhysicalZero;
    assume CyyPhysicalZero != 0;
    call {:si_unique_call 1649} CyyPhysicalZero_1__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_1__Loc == CyyPhysicalZero_1;
    assume CyyPhysicalZero_1 != 0;
    call {:si_unique_call 1650} driverDefaults__Loc := __HAVOC_malloc_or_null(76);
    assume driverDefaults__Loc == driverDefaults;
    assume driverDefaults != 0;
    call {:si_unique_call 1651} CyyPhysicalZero_2__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_2__Loc == CyyPhysicalZero_2;
    assume CyyPhysicalZero_2 != 0;
    call {:si_unique_call 1652} GUID_DEVINTERFACE_COMPORT__Loc := __HAVOC_malloc_or_null(16);
    assume GUID_DEVINTERFACE_COMPORT__Loc == GUID_DEVINTERFACE_COMPORT;
    assume GUID_DEVINTERFACE_COMPORT != 0;
    call {:si_unique_call 1653} SLAM_guard_S_1_init__Loc := __HAVOC_malloc_or_null(4);
    assume SLAM_guard_S_1_init__Loc == SLAM_guard_S_1_init;
    assume SLAM_guard_S_1_init != 0;
    call {:si_unique_call 1654} SLAM_guard_S_0_init__Loc := __HAVOC_malloc_or_null(248);
    assume SLAM_guard_S_0_init__Loc == SLAM_guard_S_0_init;
    assume SLAM_guard_S_0_init != 0;
    call {:si_unique_call 1655} CyyPhysicalZero_3__Loc := __HAVOC_malloc_or_null(20);
    assume CyyPhysicalZero_3__Loc == CyyPhysicalZero_3;
    assume CyyPhysicalZero_3 != 0;
    call {:si_unique_call 1656} sdv_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation_next__Loc == sdv_harnessStackLocation_next;
    assume sdv_harnessStackLocation_next != 0;
    call {:si_unique_call 1657} sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc := __HAVOC_malloc_or_null(76);
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX__Loc == sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX;
    assume sdv_IoReadPartitionTableEx_DRIVE_LAYOUT_INFORMATION_EX != 0;
    call {:si_unique_call 1658} sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1659} sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT__Loc == sdv_IoGetDeviceToVerify_DEVICE_OBJECT;
    assume sdv_IoGetDeviceToVerify_DEVICE_OBJECT != 0;
    call {:si_unique_call 1660} sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next__Loc == sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next;
    assume sdv_IoBuildDeviceIoControlRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1661} sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1662} sdv_ControllerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_ControllerIrp__Loc == sdv_ControllerIrp;
    assume sdv_ControllerIrp != 0;
    call {:si_unique_call 1663} sdv_devobj_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_pdo__Loc == sdv_devobj_pdo;
    assume sdv_devobj_pdo != 0;
    call {:si_unique_call 1664} sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER__Loc == sdv_IoGetDmaAdapter_DMA_ADAPTER;
    assume sdv_IoGetDmaAdapter_DMA_ADAPTER != 0;
    call {:si_unique_call 1665} sdv_IoInitializeIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoInitializeIrp_harnessIrp__Loc == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_IoInitializeIrp_harnessIrp != 0;
    call {:si_unique_call 1666} sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT__Loc == sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT;
    assume sdv_IoGetRelatedDeviceObject_DEVICE_OBJECT != 0;
    call {:si_unique_call 1667} sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildSynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1668} sdv_IoCreateSynchronizationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateSynchronizationEvent_KEVENT__Loc == sdv_IoCreateSynchronizationEvent_KEVENT;
    assume sdv_IoCreateSynchronizationEvent_KEVENT != 0;
    call {:si_unique_call 1669} sdv_other_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation_next__Loc == sdv_other_harnessStackLocation_next;
    assume sdv_other_harnessStackLocation_next != 0;
    call {:si_unique_call 1670} sdv_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_harnessStackLocation__Loc == sdv_harnessStackLocation;
    assume sdv_harnessStackLocation != 0;
    call {:si_unique_call 1671} sdv_IoCreateController_CONTROLLER_OBJECT__Loc := __HAVOC_malloc_or_null(60);
    assume sdv_IoCreateController_CONTROLLER_OBJECT__Loc == sdv_IoCreateController_CONTROLLER_OBJECT;
    assume sdv_IoCreateController_CONTROLLER_OBJECT != 0;
    call {:si_unique_call 1672} sdv_devobj_top__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_top__Loc == sdv_devobj_top;
    assume sdv_devobj_top != 0;
    call {:si_unique_call 1673} sdv_kdpc_val3__Loc := __HAVOC_malloc_or_null(40);
    assume sdv_kdpc_val3__Loc == sdv_kdpc_val3;
    assume sdv_kdpc_val3 != 0;
    call {:si_unique_call 1674} sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp__Loc == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_harnessIrp != 0;
    call {:si_unique_call 1675} sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT__Loc == sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT;
    assume sdv_IoGetDeviceObjectPointer_DEVICE_OBJECT != 0;
    call {:si_unique_call 1676} sdv_MapRegisterBase_val__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MapRegisterBase_val__Loc == sdv_MapRegisterBase_val;
    assume sdv_MapRegisterBase_val != 0;
    call {:si_unique_call 1677} sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc := __HAVOC_malloc_or_null(16);
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING__Loc == sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING;
    assume sdv_IoGetFileObjectGenericMapping_GENERIC_MAPPING != 0;
    call {:si_unique_call 1678} sdv_IoMakeAssociatedIrp_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoMakeAssociatedIrp_harnessIrp__Loc == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_harnessIrp != 0;
    call {:si_unique_call 1679} sdv_devobj_child_pdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_child_pdo__Loc == sdv_devobj_child_pdo;
    assume sdv_devobj_child_pdo != 0;
    call {:si_unique_call 1680} sdv_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_harnessIrp__Loc == sdv_harnessIrp;
    assume sdv_harnessIrp != 0;
    call {:si_unique_call 1681} sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next__Loc == sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next;
    assume sdv_IoBuildAsynchronousFsdRequest_harnessStackLocation_next != 0;
    call {:si_unique_call 1682} sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock__Loc == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    call {:si_unique_call 1683} sdv_kinterrupt_val__Loc := __HAVOC_malloc_or_null(0);
    assume sdv_kinterrupt_val__Loc == sdv_kinterrupt_val;
    assume sdv_kinterrupt_val != 0;
    call {:si_unique_call 1684} sdv_devobj_fdo__Loc := __HAVOC_malloc_or_null(320);
    assume sdv_devobj_fdo__Loc == sdv_devobj_fdo;
    assume sdv_devobj_fdo != 0;
    call {:si_unique_call 1685} sdv_DpcContext__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_DpcContext__Loc == sdv_DpcContext;
    assume sdv_DpcContext != 0;
    call {:si_unique_call 1686} sdv_StartIoIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_StartIoIrp__Loc == sdv_StartIoIrp;
    assume sdv_StartIoIrp != 0;
    call {:si_unique_call 1687} sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc := __HAVOC_malloc_or_null(12);
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock__Loc == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    call {:si_unique_call 1688} sdv_PowerIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_PowerIrp__Loc == sdv_PowerIrp;
    assume sdv_PowerIrp != 0;
    call {:si_unique_call 1689} sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp__Loc == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_harnessIrp != 0;
    call {:si_unique_call 1690} sdv_other_harnessIrp__Loc := __HAVOC_malloc_or_null(248);
    assume sdv_other_harnessIrp__Loc == sdv_other_harnessIrp;
    assume sdv_other_harnessIrp != 0;
    call {:si_unique_call 1691} sdv_IoCreateNotificationEvent_KEVENT__Loc := __HAVOC_malloc_or_null(124);
    assume sdv_IoCreateNotificationEvent_KEVENT__Loc == sdv_IoCreateNotificationEvent_KEVENT;
    assume sdv_IoCreateNotificationEvent_KEVENT != 0;
    call {:si_unique_call 1692} sdv_other_harnessStackLocation__Loc := __HAVOC_malloc_or_null(496);
    assume sdv_other_harnessStackLocation__Loc == sdv_other_harnessStackLocation;
    assume sdv_other_harnessStackLocation != 0;
    call {:si_unique_call 1693} sdv_MmMapIoSpace_int__Loc := __HAVOC_malloc_or_null(4);
    assume sdv_MmMapIoSpace_int__Loc == sdv_MmMapIoSpace_int;
    assume sdv_MmMapIoSpace_int != 0;
    call {:si_unique_call 1694} boogieTmp := __HAVOC_malloc_or_null(12);
    call {:si_unique_call 1695} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1696} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1697} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension_two == boogieTmp;
    call {:si_unique_call 1698} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1699} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv3 == boogieTmp;
    call {:si_unique_call 1700} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_pv2 == boogieTmp;
    call {:si_unique_call 1701} boogieTmp := __HAVOC_malloc_or_null(4);
    call {:si_unique_call 1702} boogieTmp := __HAVOC_malloc_or_null(4);
    assume sdv_harnessDeviceExtension == boogieTmp;
    call {:si_unique_call 1703} boogieTmp := __HAVOC_malloc_or_null(4);
    assume igdoe == boogieTmp;
    call {:si_unique_call 1704} boogieTmp := __HAVOC_malloc_or_null(248);
    assume sicrni == boogieTmp;
    call {:si_unique_call 1705} vslice_dummy_var_527 := __HAVOC_malloc(4);
    call {:si_unique_call 1706} vslice_dummy_var_528 := __HAVOC_malloc(4);
    call {:si_unique_call 1707} vslice_dummy_var_529 := __HAVOC_malloc(4);
    call {:si_unique_call 1708} vslice_dummy_var_530 := __HAVOC_malloc(4);
    call {:si_unique_call 1709} vslice_dummy_var_531 := __HAVOC_malloc(4);
    call {:si_unique_call 1710} vslice_dummy_var_532 := __HAVOC_malloc(4);
    call {:si_unique_call 1711} vslice_dummy_var_219 := __HAVOC_malloc(60);
    call {:si_unique_call 1712} vslice_dummy_var_533 := __HAVOC_malloc(4);
    call {:si_unique_call 1713} vslice_dummy_var_534 := __HAVOC_malloc(4);
    call {:si_unique_call 1714} vslice_dummy_var_535 := __HAVOC_malloc(4);
    call {:si_unique_call 1715} vslice_dummy_var_536 := __HAVOC_malloc(4);
    call {:si_unique_call 1716} vslice_dummy_var_537 := __HAVOC_malloc(4);
    call {:si_unique_call 1717} vslice_dummy_var_538 := __HAVOC_malloc(4);
    call {:si_unique_call 1718} vslice_dummy_var_539 := __HAVOC_malloc(4);
    call {:si_unique_call 1719} vslice_dummy_var_540 := __HAVOC_malloc(4);
    call {:si_unique_call 1720} vslice_dummy_var_541 := __HAVOC_malloc(4);
    call {:si_unique_call 1721} vslice_dummy_var_542 := __HAVOC_malloc(4);
    call {:si_unique_call 1722} vslice_dummy_var_220 := __HAVOC_malloc(32);
    call {:si_unique_call 1723} vslice_dummy_var_543 := __HAVOC_malloc(4);
    call {:si_unique_call 1724} vslice_dummy_var_544 := __HAVOC_malloc(4);
    call {:si_unique_call 1725} vslice_dummy_var_545 := __HAVOC_malloc(4);
    call {:si_unique_call 1726} vslice_dummy_var_546 := __HAVOC_malloc(4);
    call {:si_unique_call 1727} vslice_dummy_var_547 := __HAVOC_malloc(4);
    call {:si_unique_call 1728} vslice_dummy_var_548 := __HAVOC_malloc(4);
    call {:si_unique_call 1729} vslice_dummy_var_549 := __HAVOC_malloc(4);
    call {:si_unique_call 1730} vslice_dummy_var_550 := __HAVOC_malloc(4);
    call {:si_unique_call 1731} vslice_dummy_var_551 := __HAVOC_malloc(4);
    call {:si_unique_call 1732} vslice_dummy_var_221 := __HAVOC_malloc(24);
    call {:si_unique_call 1733} vslice_dummy_var_552 := __HAVOC_malloc(4);
    call {:si_unique_call 1734} vslice_dummy_var_553 := __HAVOC_malloc(4);
    call {:si_unique_call 1735} vslice_dummy_var_554 := __HAVOC_malloc(4);
    call {:si_unique_call 1736} vslice_dummy_var_555 := __HAVOC_malloc(4);
    call {:si_unique_call 1737} vslice_dummy_var_556 := __HAVOC_malloc(4);
    call {:si_unique_call 1738} vslice_dummy_var_557 := __HAVOC_malloc(4);
    call {:si_unique_call 1739} vslice_dummy_var_558 := __HAVOC_malloc(4);
    call {:si_unique_call 1740} vslice_dummy_var_559 := __HAVOC_malloc(4);
    call {:si_unique_call 1741} vslice_dummy_var_560 := __HAVOC_malloc(4);
    call {:si_unique_call 1742} vslice_dummy_var_561 := __HAVOC_malloc(4);
    call {:si_unique_call 1743} vslice_dummy_var_562 := __HAVOC_malloc(4);
    call {:si_unique_call 1744} vslice_dummy_var_563 := __HAVOC_malloc(4);
    call {:si_unique_call 1745} vslice_dummy_var_564 := __HAVOC_malloc(4);
    call {:si_unique_call 1746} vslice_dummy_var_565 := __HAVOC_malloc(4);
    call {:si_unique_call 1747} vslice_dummy_var_566 := __HAVOC_malloc(4);
    call {:si_unique_call 1748} vslice_dummy_var_567 := __HAVOC_malloc(4);
    call {:si_unique_call 1749} vslice_dummy_var_568 := __HAVOC_malloc(4);
    call {:si_unique_call 1750} vslice_dummy_var_569 := __HAVOC_malloc(4);
    call {:si_unique_call 1751} vslice_dummy_var_570 := __HAVOC_malloc(4);
    call {:si_unique_call 1752} vslice_dummy_var_571 := __HAVOC_malloc(4);
    call {:si_unique_call 1753} vslice_dummy_var_572 := __HAVOC_malloc(4);
    call {:si_unique_call 1754} vslice_dummy_var_222 := __HAVOC_malloc(60);
    call {:si_unique_call 1755} vslice_dummy_var_573 := __HAVOC_malloc(4);
    call {:si_unique_call 1756} vslice_dummy_var_574 := __HAVOC_malloc(4);
    call {:si_unique_call 1757} vslice_dummy_var_575 := __HAVOC_malloc(4);
    call {:si_unique_call 1758} vslice_dummy_var_576 := __HAVOC_malloc(4);
    call {:si_unique_call 1759} vslice_dummy_var_577 := __HAVOC_malloc(4);
    call {:si_unique_call 1760} vslice_dummy_var_578 := __HAVOC_malloc(4);
    call {:si_unique_call 1761} vslice_dummy_var_579 := __HAVOC_malloc(4);
    call {:si_unique_call 1762} vslice_dummy_var_580 := __HAVOC_malloc(4);
    call {:si_unique_call 1763} vslice_dummy_var_581 := __HAVOC_malloc(4);
    call {:si_unique_call 1764} vslice_dummy_var_582 := __HAVOC_malloc(4);
    call {:si_unique_call 1765} vslice_dummy_var_583 := __HAVOC_malloc(4);
    call {:si_unique_call 1766} vslice_dummy_var_584 := __HAVOC_malloc(4);
    call {:si_unique_call 1767} vslice_dummy_var_585 := __HAVOC_malloc(4);
    call {:si_unique_call 1768} vslice_dummy_var_586 := __HAVOC_malloc(4);
    call {:si_unique_call 1769} vslice_dummy_var_587 := __HAVOC_malloc(4);
    call {:si_unique_call 1770} vslice_dummy_var_588 := __HAVOC_malloc(4);
    call {:si_unique_call 1771} vslice_dummy_var_589 := __HAVOC_malloc(4);
    call {:si_unique_call 1772} vslice_dummy_var_590 := __HAVOC_malloc(4);
    call {:si_unique_call 1773} vslice_dummy_var_591 := __HAVOC_malloc(4);
    call {:si_unique_call 1774} vslice_dummy_var_592 := __HAVOC_malloc(4);
    call {:si_unique_call 1775} vslice_dummy_var_593 := __HAVOC_malloc(4);
    call {:si_unique_call 1776} vslice_dummy_var_594 := __HAVOC_malloc(4);
    call {:si_unique_call 1777} vslice_dummy_var_595 := __HAVOC_malloc(4);
    call {:si_unique_call 1778} vslice_dummy_var_596 := __HAVOC_malloc(4);
    call {:si_unique_call 1779} vslice_dummy_var_597 := __HAVOC_malloc(4);
    call {:si_unique_call 1780} vslice_dummy_var_598 := __HAVOC_malloc(4);
    call {:si_unique_call 1781} vslice_dummy_var_599 := __HAVOC_malloc(4);
    call {:si_unique_call 1782} vslice_dummy_var_600 := __HAVOC_malloc(4);
    call {:si_unique_call 1783} vslice_dummy_var_601 := __HAVOC_malloc(4);
    call {:si_unique_call 1784} vslice_dummy_var_602 := __HAVOC_malloc(4);
    call {:si_unique_call 1785} vslice_dummy_var_603 := __HAVOC_malloc(4);
    call {:si_unique_call 1786} vslice_dummy_var_604 := __HAVOC_malloc(4);
    call {:si_unique_call 1787} vslice_dummy_var_605 := __HAVOC_malloc(4);
    call {:si_unique_call 1788} vslice_dummy_var_606 := __HAVOC_malloc(4);
    call {:si_unique_call 1789} vslice_dummy_var_607 := __HAVOC_malloc(4);
    call {:si_unique_call 1790} vslice_dummy_var_608 := __HAVOC_malloc(4);
    call {:si_unique_call 1791} vslice_dummy_var_609 := __HAVOC_malloc(4);
    call {:si_unique_call 1792} vslice_dummy_var_610 := __HAVOC_malloc(4);
    call {:si_unique_call 1793} vslice_dummy_var_611 := __HAVOC_malloc(4);
    call {:si_unique_call 1794} vslice_dummy_var_612 := __HAVOC_malloc(4);
    call {:si_unique_call 1795} vslice_dummy_var_613 := __HAVOC_malloc(4);
    call {:si_unique_call 1796} vslice_dummy_var_614 := __HAVOC_malloc(4);
    call {:si_unique_call 1797} vslice_dummy_var_615 := __HAVOC_malloc(4);
    call {:si_unique_call 1798} vslice_dummy_var_616 := __HAVOC_malloc(4);
    call {:si_unique_call 1799} vslice_dummy_var_617 := __HAVOC_malloc(4);
    call {:si_unique_call 1800} vslice_dummy_var_618 := __HAVOC_malloc(4);
    call {:si_unique_call 1801} vslice_dummy_var_619 := __HAVOC_malloc(4);
    call {:si_unique_call 1802} vslice_dummy_var_620 := __HAVOC_malloc(4);
    call {:si_unique_call 1803} vslice_dummy_var_621 := __HAVOC_malloc(4);
    assume {:mainInitDone} true;
    call {:si_unique_call 1804} corralExtraInit();
    call {:si_unique_call 1805} corralExplainErrorInit();
    call {:si_unique_call 1806} _sdv_init21();
    call {:si_unique_call 1807} _sdv_init18();
    call {:si_unique_call 1808} _sdv_init19();
    call {:si_unique_call 1809} _sdv_init17();
    call {:si_unique_call 1810} _sdv_init1();
    call {:si_unique_call 1811} _sdv_init4();
    call {:si_unique_call 1812} _sdv_init5();
    call {:si_unique_call 1813} _sdv_init3();
    call {:si_unique_call 1814} _sdv_init16();
    call {:si_unique_call 1815} _sdv_init14();
    call {:si_unique_call 1816} _sdv_init6();
    call {:si_unique_call 1817} _sdv_init15();
    call {:si_unique_call 1818} _sdv_init10();
    call {:si_unique_call 1819} _sdv_init11();
    call {:si_unique_call 1820} _sdv_init9();
    call {:si_unique_call 1821} _sdv_init12();
    call {:si_unique_call 1822} _sdv_init13();
    call {:si_unique_call 1823} _sdv_init7();
    call {:si_unique_call 1824} _sdv_init8();
    call {:si_unique_call 1825} _sdv_init2();
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    SLAM_guard_S_1 := Cancel__IRP(sdv_irp);
    assume SLAM_guard_S_1 != SLAM_guard_S_1_init;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} sdv_harnessDeviceExtension == 0;
    Tmp_780 := 0;
    goto L46;

  L46:
    assume Tmp_780 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} sdv_harnessDeviceExtension_two == 0;
    Tmp_778 := 0;
    goto L50;

  L50:
    assume Tmp_778 != 0;
    assume {:nonnull} sdv_irp != 0;
    assume sdv_irp > 0;
    assume {:nonnull} sdv_other_irp != 0;
    assume sdv_other_irp > 0;
    call {:si_unique_call 1826} sdv_main();
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} yogi_error == 1;
    goto L42;

  L42:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume yogi_error == 1;
    dup_assertVar := false;
    goto L_BAF_0, L_BAF_1;

  L_BAF_1:
    assume dup_assertVar;
    goto L_BAF_2;

  L_BAF_2:
    return;

  L_BAF_0:
    assume !dup_assertVar;
    return;

  anon11_Then:
    assume yogi_error == 0;
    goto LM2;

  LM2:
    return;

  anon12_Then:
    assume {:partition} yogi_error != 1;
    goto L42;

  anon10_Then:
    assume {:partition} sdv_harnessDeviceExtension_two != 0;
    Tmp_778 := 1;
    goto L50;

  anon9_Then:
    assume {:partition} sdv_harnessDeviceExtension != 0;
    Tmp_780 := 1;
    goto L46;
}



procedure {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_781: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoGetConfigurationInformation"} {:osmodel} IoGetConfigurationInformation() returns (Tmp_781: int)
{
  var {:pointer} sdv_677: int;

  anon0:
    call {:si_unique_call 1827} sdv_677 := __HAVOC_malloc(1);
    Tmp_781 := sdv_677;
    return;
}



procedure {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoSkipCurrentIrpStackLocation"} {:osmodel} sdv_IoSkipCurrentIrpStackLocation(actual_pirp_8: int)
{
  var {:pointer} pirp_8: int;
  var vslice_dummy_var_464: int;

  anon0:
    call {:si_unique_call 1828} vslice_dummy_var_464 := __HAVOC_malloc(4);
    pirp_8 := actual_pirp_8;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} pirp_8 == sdv_harnessIrp;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} pirp_8 == sdv_other_harnessIrp;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} pirp_8 != sdv_other_harnessIrp;
    goto L1;

  anon5_Then:
    assume {:partition} pirp_8 != sdv_harnessIrp;
    goto L4;
}



procedure {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_17: int) returns (Tmp_785: int);
  free ensures Tmp_785 == 0 || Tmp_785 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoCancelIrp"} {:osmodel} IoCancelIrp(actual_Irp_17: int) returns (Tmp_785: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_785 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_785 := 1;
    goto L1;
}



procedure {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_787: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_InterlockedDecrement"} {:osmodel} sdv_InterlockedDecrement(actual_Addend: int) returns (Tmp_787: int)
{
  var {:pointer} Addend: int;

  anon0:
    Addend := actual_Addend;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    assume {:nonnull} Addend != 0;
    assume Addend > 0;
    havoc Tmp_787;
    return;
}



procedure {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "RtlInitUnicodeString"} {:osmodel} RtlInitUnicodeString(actual_DestinationString: int, actual_SourceString: int)
{
  var {:pointer} DestinationString: int;
  var {:pointer} SourceString: int;
  var vslice_dummy_var_465: int;

  anon0:
    call {:si_unique_call 1829} vslice_dummy_var_465 := __HAVOC_malloc(4);
    DestinationString := actual_DestinationString;
    SourceString := actual_SourceString;
    goto anon5_Then, anon5_Else;

  anon5_Else:
    assume {:partition} DestinationString != 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L4;

  L4:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    assume {:partition} SourceString == 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    assume {:nonnull} DestinationString != 0;
    assume DestinationString > 0;
    goto L1;

  L1:
    return;

  anon6_Then:
    assume {:partition} SourceString != 0;
    goto L1;

  anon5_Then:
    assume {:partition} DestinationString == 0;
    goto L4;
}



procedure {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "MmUnlockPagableImageSection"} {:osmodel} MmUnlockPagableImageSection(actual_ImageSectionHandle_1: int)
{
  var vslice_dummy_var_466: int;

  anon0:
    call {:si_unique_call 1830} vslice_dummy_var_466 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RunStartIo"} {:osmodel} sdv_RunStartIo(actual_po: int, actual_pirp_9: int)
{
  var vslice_dummy_var_467: int;
  var vslice_dummy_var_468: int;

  anon0:
    call {:si_unique_call 1831} vslice_dummy_var_467 := __HAVOC_malloc(4);
    call {:si_unique_call 1832} sdv_stub_startio_begin();
    call {:si_unique_call 1833} vslice_dummy_var_468 := sdv_DoNothing();
    call {:si_unique_call 1834} sdv_stub_startio_end();
    return;
}



procedure {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_795: int);
  free ensures Tmp_795 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoCompletionRoutines"} {:osmodel} sdv_IoCompletionRoutines() returns (Tmp_795: int)
{

  anon0:
    Tmp_795 := 1;
    return;
}



procedure {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RtlZeroMemory"} {:osmodel} sdv_RtlZeroMemory(actual_Destination_1: int, actual_Length_1: int)
{
  var vslice_dummy_var_469: int;

  anon0:
    call {:si_unique_call 1835} vslice_dummy_var_469 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_stub_startio_begin"} {:osmodel} sdv_stub_startio_begin()
{
  var vslice_dummy_var_470: int;

  anon0:
    call {:si_unique_call 1836} vslice_dummy_var_470 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_do_paged_code_check"} {:osmodel} sdv_do_paged_code_check()
{
  var vslice_dummy_var_471: int;

  anon0:
    call {:si_unique_call 1837} vslice_dummy_var_471 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_4: int) returns (Tmp_803: int);
  free ensures Tmp_803 == 0 || Tmp_803 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoQueryDeviceDescription"} {:osmodel} IoQueryDeviceDescription(actual_BusType: int, actual_BusNumber: int, actual_ControllerType: int, actual_ControllerNumber: int, actual_PeripheralType: int, actual_PeripheralNumber: int, actual_CalloutRoutine: int, actual_Context_4: int) returns (Tmp_803: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_803 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_803 := -1073741823;
    goto L1;
}



procedure {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoMarkIrpPending"} {:osmodel} sdv_IoMarkIrpPending(actual_pirp_10: int)
{
  var vslice_dummy_var_472: int;

  anon0:
    call {:si_unique_call 1838} vslice_dummy_var_472 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "MmUnmapIoSpace"} {:osmodel} MmUnmapIoSpace(actual_BaseAddress: int, actual_NumberOfBytes_1: int)
{
  var vslice_dummy_var_473: int;

  anon0:
    call {:si_unique_call 1839} vslice_dummy_var_473 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_809: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled, yogi_error;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpCancelChecked) == 1 ==> yogi_error == 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> yogi_error == old(yogi_error);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures yogi_error == 1 || yogi_error == old(yogi_error);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RunDispatchFunction"} {:osmodel} sdv_RunDispatchFunction(actual_po_1: int, actual_pirp_11: int) returns (Tmp_809: int)
{
  var {:pointer} ps: int;
  var {:scalar} minor: int;
  var {:scalar} Tmp_810: int;
  var {:scalar} sdv_689: int;
  var {:scalar} Tmp_812: int;
  var {:scalar} status_23: int;
  var {:pointer} po_1: int;
  var {:pointer} pirp_11: int;

  anon0:
    po_1 := actual_po_1;
    pirp_11 := actual_pirp_11;
    status_23 := 0;
    minor := sdv_689;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    havoc ps;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    call {:si_unique_call 1840} sdv_SetStatus(pirp_11);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1841} sdv_stub_dispatch_begin();
    goto anon79_Then, anon79_Else;

  anon79_Else:
    goto anon98_Then, anon98_Else;

  anon98_Else:
    goto anon97_Then, anon97_Else;

  anon97_Else:
    goto anon96_Then, anon96_Else;

  anon96_Else:
    goto anon95_Then, anon95_Else;

  anon95_Else:
    goto anon94_Then, anon94_Else;

  anon94_Else:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    goto anon92_Then, anon92_Else;

  anon92_Else:
    goto anon91_Then, anon91_Else;

  anon91_Else:
    goto anon90_Then, anon90_Else;

  anon90_Else:
    goto anon89_Then, anon89_Else;

  anon89_Else:
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto anon87_Then, anon87_Else;

  anon87_Else:
    goto anon86_Then, anon86_Else;

  anon86_Else:
    goto anon85_Then, anon85_Else;

  anon85_Else:
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    goto L60;

  L60:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    goto anon83_Then, anon83_Else;

  anon83_Else:
    Tmp_812 := 0;
    goto L243;

  L243:
    assume Tmp_812 != 0;
    goto L61;

  L61:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    goto L66;

  L66:
    call {:si_unique_call 1842} status_23 := CyyPnpDispatch(po_1, pirp_11);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1843} SLIC_CyyPnpDispatch_exit(strConst__li2bpl191);
    goto anon117_Then, anon117_Else;

  anon117_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  L72:
    call {:si_unique_call 1844} sdv_stub_dispatch_end(status_23, 0);
    assume {:nonnull} pirp_11 != 0;
    assume pirp_11 > 0;
    Tmp_809 := status_23;
    goto LM2;

  LM2:
    return;

  anon117_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon107_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon82_Then:
    goto L66;

  anon83_Then:
    Tmp_812 := 1;
    goto L243;

  anon81_Then:
    goto L61;

  anon116_Then:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} sdv_start_irp_already_issued != 0;
    Tmp_810 := 0;
    goto L249;

  L249:
    assume Tmp_810 != 0;
    goto L60;

  anon80_Then:
    assume {:partition} sdv_start_irp_already_issued == 0;
    Tmp_810 := 1;
    goto L249;

  anon84_Then:
    call {:si_unique_call 1845} status_23 := sdv_DoNothing();
    goto L72;

  anon85_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1846} status_23 := sdv_DoNothing();
    goto L72;

  anon86_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1847} sdv_SetPowerIrpMinorFunction(pirp_11);
    call {:si_unique_call 1848} status_23 := CyyPowerDispatch(po_1, pirp_11);
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1849} SLIC_CyyPowerDispatch_exit(strConst__li2bpl191);
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon115_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon106_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon87_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1850} status_23 := CyyCleanup(po_1, pirp_11);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1851} SLIC_CyyCleanup_exit(strConst__li2bpl191);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon114_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon105_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon88_Then:
    call {:si_unique_call 1852} status_23 := sdv_DoNothing();
    goto L72;

  anon89_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1853} status_23 := sdv_DoNothing();
    goto L72;

  anon90_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1854} status_23 := sdv_DoNothing();
    goto L72;

  anon91_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1855} status_23 := CyyIoControl(po_1, pirp_11);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1856} SLIC_CyyIoControl_exit(strConst__li2bpl191);
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon113_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon104_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon92_Then:
    call {:si_unique_call 1857} status_23 := sdv_DoNothing();
    goto L72;

  anon93_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1858} status_23 := CyyFlush(po_1, pirp_11);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1859} SLIC_CyyFlush_exit(strConst__li2bpl191);
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon112_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon103_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon94_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1860} status_23 := sdv_DoNothing();
    goto L72;

  anon95_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1861} status_23 := sdv_DoNothing();
    goto L72;

  anon96_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1862} status_23 := CyyWrite(po_1, pirp_11);
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1863} SLIC_CyyWrite_exit(strConst__li2bpl191);
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon111_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon102_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon97_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1864} status_23 := CyyRead(po_1, pirp_11);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1865} SLIC_CyyRead_exit(strConst__li2bpl191);
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon110_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon101_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon98_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1866} status_23 := CyyClose(po_1, pirp_11);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1867} SLIC_CyyClose_exit(strConst__li2bpl191);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon109_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon100_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;

  anon79_Then:
    assume {:nonnull} ps != 0;
    assume ps > 0;
    call {:si_unique_call 1868} status_23 := CyyCreateOpen(po_1, pirp_11);
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume pirp_11 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1869} SLIC_CyyCreateOpen_exit(strConst__li2bpl191);
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} yogi_error != 1;
    goto L72;

  anon108_Then:
    assume {:partition} yogi_error == 1;
    goto LM2;

  anon99_Then:
    assume !(pirp_11 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L72;
}



procedure {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_813: int);
  free ensures Tmp_813 == -1073741823 || Tmp_813 == -1073741808 || Tmp_813 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoRegisterDeviceInterface"} {:osmodel} IoRegisterDeviceInterface(actual_PhysicalDeviceObject: int, actual_InterfaceClassGuid: int, actual_ReferenceString: int, actual_SymbolicLinkName_2: int) returns (Tmp_813: int)
{
  var {:scalar} Tmp_815: int;
  var {:pointer} SymbolicLinkName_2: int;

  anon0:
    SymbolicLinkName_2 := actual_SymbolicLinkName_2;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    Tmp_813 := -1073741823;
    goto L1;

  L1:
    return;

  anon9_Then:
    Tmp_813 := -1073741808;
    goto L1;

  anon7_Then:
    assume {:nonnull} SymbolicLinkName_2 != 0;
    assume SymbolicLinkName_2 > 0;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_815 := 0;
    goto L22;

  L22:
    assume Tmp_815 != 0;
    Tmp_813 := 0;
    goto L1;

  anon8_Then:
    Tmp_815 := 1;
    goto L22;
}



procedure {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_816: int);
  free ensures Tmp_816 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckAddDevice"} {:osmodel} sdv_CheckAddDevice() returns (Tmp_816: int)
{

  anon0:
    Tmp_816 := 1;
    return;
}



procedure {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_818: int);
  free ensures Tmp_818 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckWorkerRoutines"} {:osmodel} sdv_CheckWorkerRoutines() returns (Tmp_818: int)
{

  anon0:
    Tmp_818 := 0;
    return;
}



procedure {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_KeReleaseSpinLock"} {:osmodel} sdv_KeReleaseSpinLock(actual_SpinLock_1: int, actual_new_1: int)
{
  var {:scalar} new_1: int;
  var vslice_dummy_var_474: int;

  anon0:
    call {:si_unique_call 1870} vslice_dummy_var_474 := __HAVOC_malloc(4);
    new_1 := actual_new_1;
    return;
}



procedure {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoCompleteRequest"} {:osmodel} sdv_IoCompleteRequest(actual_pirp_12: int, actual_PriorityBoost: int)
{
  var vslice_dummy_var_475: int;

  anon0:
    call {:si_unique_call 1871} vslice_dummy_var_475 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "_sdv_init19"} {:osmodel} _sdv_init19();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init19"} {:osmodel} _sdv_init19()
{
  var vslice_dummy_var_476: int;

  anon0:
    call {:si_unique_call 1872} vslice_dummy_var_476 := __HAVOC_malloc(4);
    assume sdv_apc_disabled == 0;
    assume sdv_ControllerPirp == sdv_ControllerIrp;
    assume sdv_StartIopirp == sdv_StartIoIrp;
    assume sdv_power_irp == sdv_PowerIrp;
    assume sdv_irp == sdv_harnessIrp;
    assume sdv_other_irp == sdv_other_harnessIrp;
    assume sdv_IoMakeAssociatedIrp_irp == sdv_IoMakeAssociatedIrp_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_irp == sdv_IoBuildDeviceIoControlRequest_harnessIrp;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock == sdv_harness_IoBuildDeviceIoControlRequest_IoStatusBlock;
    assume sdv_IoBuildSynchronousFsdRequest_irp == sdv_IoBuildSynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildSynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoBuildAsynchronousFsdRequest_irp == sdv_IoBuildAsynchronousFsdRequest_harnessIrp;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock == sdv_harness_IoBuildAsynchronousFsdRequest_IoStatusBlock;
    assume sdv_IoInitializeIrp_irp == sdv_IoInitializeIrp_harnessIrp;
    assume sdv_io_create_device_called == 0;
    assume sdv_maskedEflags == 0;
    assume sdv_kdpc3 == sdv_kdpc_val3;
    assume sdv_p_devobj_fdo == sdv_devobj_fdo;
    assume sdv_inside_init_entrypoint == 0;
    assume sdv_p_devobj_pdo == sdv_devobj_pdo;
    assume sdv_p_devobj_child_pdo == sdv_devobj_child_pdo;
    assume sdv_kinterrupt == sdv_kinterrupt_val;
    assume sdv_MapRegisterBase == sdv_MapRegisterBase_val;
    assume sdv_start_irp_already_issued == 0;
    assume sdv_Io_Removelock_release_wait_returned == 0;
    assume sdv_ke_dpc == li2bplFunctionConstant517;
    assume sdv_dpc_ke_registered == 0;
    assume sdv_io_dpc == li2bplFunctionConstant520;
    assume sdv_p_devobj_top == sdv_devobj_top;
    return;
}



procedure {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_RtlCopyMemory"} {:osmodel} sdv_RtlCopyMemory(actual_Destination_2: int, actual_Source_1: int, actual_Length_2: int)
{
  var vslice_dummy_var_477: int;

  anon0:
    call {:si_unique_call 1873} vslice_dummy_var_477 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_828: int);
  free ensures Tmp_828 == -1073741811 || Tmp_828 == -1073741823 || Tmp_828 == 0 || Tmp_828 == 5 || Tmp_828 == -1073741789;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "ZwQueryValueKey"} {:osmodel} ZwQueryValueKey(actual_KeyHandle: int, actual_ValueName_1: int, actual_KeyValueInformationClass: int, actual_KeyValueInformation: int, actual_Length_3: int, actual_ResultLength: int) returns (Tmp_828: int)
{
  var {:scalar} L: int;
  var {:scalar} sdv_701: int;
  var {:scalar} Length_3: int;
  var {:pointer} ResultLength: int;

  anon0:
    Length_3 := actual_Length_3;
    ResultLength := actual_ResultLength;
    L := sdv_701;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} 0 >= L;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} L == 0;
    Tmp_828 := -1073741811;
    goto L1;

  L1:
    return;

  anon12_Then:
    assume {:partition} L != 0;
    Tmp_828 := -1073741823;
    goto L1;

  anon15_Then:
    assume {:partition} L > 0;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} L == Length_3;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} Length_3 != 0;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_828 := 0;
    goto L1;

  anon14_Then:
    assume {:partition} Length_3 == 0;
    goto L13;

  L13:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} L > Length_3;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_828 := 5;
    goto L1;

  anon13_Then:
    assume {:partition} Length_3 >= L;
    assume {:nonnull} ResultLength != 0;
    assume ResultLength > 0;
    Tmp_828 := -1073741789;
    goto L1;

  anon11_Then:
    assume {:partition} L != Length_3;
    goto L13;
}



procedure {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_830: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "MmMapIoSpace"} {:osmodel} MmMapIoSpace(actual_structPtr888PhysicalAddress: int, actual_NumberOfBytes_2: int, actual_CacheType: int) returns (Tmp_830: int)
{
  var {:scalar} PhysicalAddress: int;
  var {:pointer} structPtr888PhysicalAddress: int;

  anon0:
    call {:si_unique_call 1874} PhysicalAddress := __HAVOC_malloc(20);
    structPtr888PhysicalAddress := actual_structPtr888PhysicalAddress;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    assume {:nonnull} PhysicalAddress != 0;
    assume PhysicalAddress > 0;
    assume {:nonnull} structPtr888PhysicalAddress != 0;
    assume structPtr888PhysicalAddress > 0;
    Tmp_830 := sdv_MmMapIoSpace_int;
    return;
}



procedure {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_832: int);
  free ensures Tmp_832 == 1 || Tmp_832 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeSynchronizeExecution"} {:osmodel} KeSynchronizeExecution(actual_Interrupt: int, actual_SynchronizeRoutine: int, actual_SynchronizeContext: int) returns (Tmp_832: int)
{
  var {:scalar} b_1: int;

  anon0:
    call {:si_unique_call 1875} b_1 := OneOfTwoBOOLEAN();
    Tmp_832 := b_1;
    return;
}



procedure {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_ExFreePool"} {:osmodel} sdv_ExFreePool(actual_P: int)
{
  var vslice_dummy_var_478: int;

  anon0:
    call {:si_unique_call 1876} vslice_dummy_var_478 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_836: int);
  free ensures Tmp_836 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckIsrRoutines"} {:osmodel} sdv_CheckIsrRoutines() returns (Tmp_836: int)
{

  anon0:
    Tmp_836 := 0;
    return;
}



procedure {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_840: int);
  free ensures Tmp_840 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckStartIoRoutines"} {:osmodel} sdv_CheckStartIoRoutines() returns (Tmp_840: int)
{

  anon0:
    Tmp_840 := 0;
    return;
}



procedure {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_842: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_InterlockedIncrement"} {:osmodel} sdv_InterlockedIncrement(actual_Addend_1: int) returns (Tmp_842: int)
{
  var {:pointer} Addend_1: int;

  anon0:
    Addend_1 := actual_Addend_1;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    assume {:nonnull} Addend_1 != 0;
    assume Addend_1 > 0;
    havoc Tmp_842;
    return;
}



procedure {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "ExReleaseFastMutex"} {:osmodel} ExReleaseFastMutex(actual_FastMutex_1: int)
{
  var vslice_dummy_var_479: int;

  anon0:
    call {:si_unique_call 1877} vslice_dummy_var_479 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_846: int);
  free ensures Tmp_846 == 1 || Tmp_846 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IsListEmpty"} {:osmodel} sdv_IsListEmpty(actual_ListHead_2: int) returns (Tmp_846: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_846 := 1;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_846 := 0;
    goto L1;
}



procedure {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_848: int);
  free ensures Tmp_848 == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_CheckIrpMjPnp"} {:osmodel} sdv_CheckIrpMjPnp() returns (Tmp_848: int)
{

  anon0:
    Tmp_848 := 1;
    return;
}



procedure {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_18: int, actual_Irp_18: int) returns (Tmp_850: int);
  free ensures Tmp_850 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IofCallDriver"} {:osmodel} IofCallDriver(actual_DeviceObject_18: int, actual_Irp_18: int) returns (Tmp_850: int)
{
  var {:scalar} status_24: int;
  var {:pointer} Irp_18: int;

  anon0:
    Irp_18 := actual_Irp_18;
    status_24 := 259;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    goto anon40_Then, anon40_Else;

  anon40_Else:
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L19;

  L19:
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L21;

  L21:
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_18;
    goto L25;

  L25:
    Tmp_850 := status_24;
    return;

  anon32_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon31_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_18;
    goto L21;

  anon44_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_18;
    goto L19;

  anon39_Then:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L44;

  L44:
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L46;

  L46:
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon38_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_18;
    goto L25;

  anon37_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_18;
    goto L46;

  anon45_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_18;
    goto L44;

  anon40_Then:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L28;

  L28:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L30;

  L30:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon34_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_18;
    goto L25;

  anon33_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_18;
    goto L30;

  anon43_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_18;
    goto L28;

  anon41_Then:
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    assume {:nonnull} Irp_18 != 0;
    assume Irp_18 > 0;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildDeviceIoControlRequest_IoStatusBlock != 0;
    assume sdv_IoBuildDeviceIoControlRequest_IoStatusBlock > 0;
    goto L36;

  L36:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildSynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildSynchronousFsdRequest_IoStatusBlock > 0;
    goto L38;

  L38:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp == Irp_18;
    assume {:nonnull} sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock != 0;
    assume sdv_IoBuildAsynchronousFsdRequest_IoStatusBlock > 0;
    goto L25;

  anon36_Then:
    assume {:partition} sdv_IoBuildAsynchronousFsdRequest_irp != Irp_18;
    goto L25;

  anon35_Then:
    assume {:partition} sdv_IoBuildSynchronousFsdRequest_irp != Irp_18;
    goto L38;

  anon42_Then:
    assume {:partition} sdv_IoBuildDeviceIoControlRequest_irp != Irp_18;
    goto L36;
}



procedure {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoDisconnectInterrupt"} {:osmodel} IoDisconnectInterrupt(actual_InterruptObject: int)
{
  var vslice_dummy_var_480: int;

  anon0:
    call {:si_unique_call 1878} vslice_dummy_var_480 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeInitializeEvent"} {:osmodel} KeInitializeEvent(actual_Event_1: int, actual_Type_1: int, actual_State_1: int)
{
  var {:pointer} Event_1: int;
  var {:scalar} Type_1: int;
  var {:scalar} State_1: int;
  var vslice_dummy_var_481: int;

  anon0:
    call {:si_unique_call 1879} vslice_dummy_var_481 := __HAVOC_malloc(4);
    Event_1 := actual_Event_1;
    Type_1 := actual_Type_1;
    State_1 := actual_State_1;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    assume {:nonnull} Event_1 != 0;
    assume Event_1 > 0;
    return;
}



procedure {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_4: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "KeInitializeTimer"} {:osmodel} KeInitializeTimer(actual_Timer_4: int)
{
  var vslice_dummy_var_482: int;

  anon0:
    call {:si_unique_call 1880} vslice_dummy_var_482 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_19: int, actual_Irp_19: int) returns (Tmp_858: int);
  free ensures Tmp_858 == 259;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_IoCallDriver"} {:osmodel} sdv_IoCallDriver(actual_DeviceObject_19: int, actual_Irp_19: int) returns (Tmp_858: int)
{
  var {:pointer} Irp_19: int;

  anon0:
    Irp_19 := actual_Irp_19;
    call {:si_unique_call 1881} Tmp_858 := IofCallDriver(0, Irp_19);
    return;
}



procedure {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoAcquireCancelSpinLock"} {:osmodel} IoAcquireCancelSpinLock(actual_p_2: int)
{
  var {:pointer} p_2: int;
  var vslice_dummy_var_483: int;

  anon0:
    call {:si_unique_call 1882} vslice_dummy_var_483 := __HAVOC_malloc(4);
    p_2 := actual_p_2;
    assume {:nonnull} p_2 != 0;
    assume p_2 > 0;
    return;
}



procedure {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_862: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "ExAllocatePoolWithTag"} {:osmodel} ExAllocatePoolWithTag(actual_PoolType_1: int, actual_NumberOfBytes_3: int, actual_Tag_1: int) returns (Tmp_862: int)
{
  var {:pointer} sdv_707: int;
  var {:scalar} NumberOfBytes_3: int;

  anon0:
    NumberOfBytes_3 := actual_NumberOfBytes_3;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    call {:si_unique_call 1883} sdv_707 := __HAVOC_malloc(NumberOfBytes_3);
    Tmp_862 := sdv_707;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_862 := 0;
    goto L1;
}



procedure {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_864: int);
  free ensures Tmp_864 == 0 || Tmp_864 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "RtlWriteRegistryValue"} {:osmodel} RtlWriteRegistryValue(actual_RelativeTo_1: int, actual_Path_1: int, actual_ValueName_2: int, actual_ValueType: int, actual_ValueData: int, actual_ValueLength: int) returns (Tmp_864: int)
{

  anon0:
    goto anon3_Then, anon3_Else;

  anon3_Else:
    Tmp_864 := 0;
    goto L1;

  L1:
    return;

  anon3_Then:
    Tmp_864 := -1073741823;
    goto L1;
}



procedure {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_866: int);
  free ensures Tmp_866 == -1073741772 || Tmp_866 == -1073741824 || Tmp_866 == -1073741789 || Tmp_866 == -1073741670 || Tmp_866 == -1073741808 || Tmp_866 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoSetDeviceInterfaceState"} {:osmodel} IoSetDeviceInterfaceState(actual_SymbolicLinkName_3: int, actual_Enable: int) returns (Tmp_866: int)
{

  anon0:
    goto anon11_Then, anon11_Else;

  anon11_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon13_Then, anon13_Else;

  anon13_Else:
    goto anon12_Then, anon12_Else;

  anon12_Else:
    Tmp_866 := -1073741772;
    goto L1;

  L1:
    return;

  anon12_Then:
    Tmp_866 := -1073741824;
    goto L1;

  anon13_Then:
    Tmp_866 := -1073741789;
    goto L1;

  anon14_Then:
    Tmp_866 := -1073741670;
    goto L1;

  anon15_Then:
    Tmp_866 := -1073741808;
    goto L1;

  anon11_Then:
    Tmp_866 := 0;
    goto L1;
}



procedure {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_2: int, actual_Vector: int, actual_Irql: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_868: int);
  free ensures Tmp_868 == -1073741811 || Tmp_868 == -1073741670 || Tmp_868 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoConnectInterrupt"} {:osmodel} IoConnectInterrupt(actual_InterruptObject_1: int, actual_ServiceRoutine: int, actual_ServiceContext: int, actual_SpinLock_2: int, actual_Vector: int, actual_Irql: int, actual_SynchronizeIrql: int, actual_InterruptMode: int, actual_ShareVector: int, actual_ProcessorEnableMask: int, actual_FloatingSave: int) returns (Tmp_868: int)
{
  var {:scalar} ServiceRoutine: int;
  var {:pointer} ServiceContext: int;

  anon0:
    ServiceRoutine := actual_ServiceRoutine;
    ServiceContext := actual_ServiceContext;
    goto anon6_Then, anon6_Else;

  anon6_Else:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    Tmp_868 := -1073741811;
    goto L1;

  L1:
    return;

  anon5_Then:
    Tmp_868 := -1073741670;
    goto L1;

  anon6_Then:
    Tmp_868 := 0;
    goto L1;
}



procedure {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_stub_driver_init"} {:osmodel} sdv_stub_driver_init()
{
  var vslice_dummy_var_484: int;

  anon0:
    call {:si_unique_call 1884} vslice_dummy_var_484 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_stub_dispatch_begin"} {:osmodel} sdv_stub_dispatch_begin()
{
  var vslice_dummy_var_485: int;

  anon0:
    call {:si_unique_call 1885} vslice_dummy_var_485 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_20: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_874: int);
  free ensures Tmp_874 == -1073741811 || Tmp_874 == -1073741808 || Tmp_874 == -1073741823 || Tmp_874 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoOpenDeviceRegistryKey"} {:osmodel} IoOpenDeviceRegistryKey(actual_DeviceObject_20: int, actual_DevInstKeyType: int, actual_DesiredAccess: int, actual_DevInstRegKey: int) returns (Tmp_874: int)
{

  anon0:
    goto anon7_Then, anon7_Else;

  anon7_Else:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    goto anon8_Then, anon8_Else;

  anon8_Else:
    Tmp_874 := -1073741811;
    goto L1;

  L1:
    return;

  anon8_Then:
    Tmp_874 := -1073741808;
    goto L1;

  anon9_Then:
    Tmp_874 := -1073741823;
    goto L1;

  anon7_Then:
    Tmp_874 := 0;
    goto L1;
}



procedure {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_876: int);
  free ensures Tmp_876 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "ZwClose"} {:osmodel} ZwClose(actual_Handle_2: int) returns (Tmp_876: int)
{

  anon0:
    Tmp_876 := 0;
    return;
}



procedure {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_878: int);
  free ensures Tmp_878 == -1073741823;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "sdv_DoNothing"} {:osmodel} sdv_DoNothing() returns (Tmp_878: int)
{

  anon0:
    Tmp_878 := -1073741823;
    return;
}



procedure {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_21: int, actual_Action: int) returns (Tmp_880: int);
  free ensures Tmp_880 == -1073741823 || Tmp_880 == -1073741811 || Tmp_880 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "IoWMIRegistrationControl"} {:osmodel} IoWMIRegistrationControl(actual_DeviceObject_21: int, actual_Action: int) returns (Tmp_880: int)
{

  anon0:
    goto anon5_Then, anon5_Else;

  anon5_Else:
    goto anon6_Then, anon6_Else;

  anon6_Else:
    Tmp_880 := -1073741823;
    goto L1;

  L1:
    return;

  anon6_Then:
    Tmp_880 := -1073741811;
    goto L1;

  anon5_Then:
    Tmp_880 := 0;
    goto L1;
}



procedure {:origName "_sdv_init18"} _sdv_init18();
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "_sdv_init18"} _sdv_init18()
{
  var vslice_dummy_var_486: int;

  anon0:
    call {:si_unique_call 1886} vslice_dummy_var_486 := __HAVOC_malloc(4);
    return;
}



procedure {:origName "CyyResizeBuffer"} CyyResizeBuffer(actual_Extension_22: int) returns (Tmp_884: int);
  modifies alloc;
  free ensures Tmp_884 == 0;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyResizeBuffer"} CyyResizeBuffer(actual_Extension_22: int) returns (Tmp_884: int)
{
  var {:pointer} Tmp_885: int;
  var {:pointer} Tmp_886: int;
  var {:pointer} irpSp_4: int;
  var {:pointer} newBuffer: int;
  var {:pointer} Tmp_887: int;
  var {:pointer} rs: int;
  var {:pointer} Tmp_888: int;
  var {:scalar} rp: int;
  var {:scalar} controlIrql: int;
  var {:pointer} Extension_22: int;
  var boogieTmp: int;
  var vslice_dummy_var_487: int;
  var vslice_dummy_var_223: int;

  anon0:
    call {:si_unique_call 1887} rp := __HAVOC_malloc(20);
    Extension_22 := actual_Extension_22;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_888;
    assume {:nonnull} Tmp_888 != 0;
    assume Tmp_888 > 0;
    havoc rs;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc vslice_dummy_var_223;
    call {:si_unique_call 1888} irpSp_4 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_223);
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    havoc newBuffer;
    assume {:nonnull} irpSp_4 != 0;
    assume irpSp_4 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_887;
    assume {:nonnull} Tmp_887 != 0;
    assume Tmp_887 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    havoc Tmp_885;
    assume {:nonnull} Tmp_885 != 0;
    assume Tmp_885 > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    goto anon3_Then, anon3_Else;

  anon3_Else:
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} Extension_22 != 0;
    assume Extension_22 > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    assume {:nonnull} rs != 0;
    assume rs > 0;
    call {:si_unique_call 1889} Tmp_886 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_886 != 0;
    assume Tmp_886 > 0;
    call {:si_unique_call 1890} sdv_KeAcquireSpinLock(0, Tmp_886);
    assume {:nonnull} Tmp_886 != 0;
    assume Tmp_886 > 0;
    havoc controlIrql;
    assume {:nonnull} rp != 0;
    assume rp > 0;
    call {:si_unique_call 1891} boogieTmp := CyyMoveToNewIntBuffer(Extension_22, newBuffer);
    call {:si_unique_call 1892} vslice_dummy_var_487 := KeSynchronizeExecution(0, li2bplFunctionConstant465, 0);
    call {:si_unique_call 1893} sdv_KeReleaseSpinLock(0, controlIrql);
    call {:si_unique_call 1894} sdv_ExFreePool(0);
    goto L20;

  L20:
    Tmp_884 := 0;
    return;

  anon3_Then:
    call {:si_unique_call 1895} sdv_ExFreePool(0);
    goto L20;
}



procedure {:origName "CyyStartRead"} CyyStartRead(actual_Extension_23: int) returns (Tmp_889: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartRead"} CyyStartRead(actual_Extension_23: int) returns (Tmp_889: int)
{
  var {:scalar} localStatus_1: int;
  var {:pointer} s_p_e_c_i_a_l_27: int;
  var {:pointer} Tmp_890: int;
  var {:pointer} sdv_716: int;
  var {:pointer} Tmp_891: int;
  var {:pointer} sdv_717: int;
  var {:scalar} totalTime: int;
  var {:scalar} os2ssreturn: int;
  var {:scalar} updateChar: int;
  var {:scalar} timeoutsForIrp: int;
  var {:scalar} setFirstStatus: int;
  var {:pointer} Tmp_892: int;
  var {:pointer} newIrp_1: int;
  var {:scalar} useTotalTimer: int;
  var {:scalar} multiplierVal: int;
  var {:scalar} crunchDownToOne: int;
  var {:pointer} sdv_722: int;
  var {:scalar} s_p_e_c_i_a_l_28: int;
  var {:scalar} oldIrql_9: int;
  var {:pointer} Tmp_893: int;
  var {:pointer} sdv_724: int;
  var {:scalar} constantVal: int;
  var {:pointer} s_p_e_c_i_a_l_29: int;
  var {:pointer} sdv_728: int;
  var {:scalar} controlIrql_1: int;
  var {:pointer} Tmp_894: int;
  var {:pointer} Tmp_895: int;
  var {:pointer} Tmp_896: int;
  var {:scalar} s_p_e_c_i_a_l_30: int;
  var {:scalar} returnWithWhatsPresent: int;
  var {:pointer} Tmp_897: int;
  var {:pointer} Tmp_898: int;
  var {:scalar} useIntervalTimer: int;
  var {:pointer} sdv_731: int;
  var {:scalar} firstStatus: int;
  var {:pointer} Tmp_899: int;
  var {:pointer} Extension_23: int;
  var boogieTmp: int;
  var vslice_dummy_var_488: int;
  var vslice_dummy_var_489: int;
  var vslice_dummy_var_490: int;
  var vslice_dummy_var_491: int;
  var vslice_dummy_var_492: int;
  var vslice_dummy_var_493: int;
  var vslice_dummy_var_494: int;
  var vslice_dummy_var_495: int;
  var vslice_dummy_var_224: int;
  var vslice_dummy_var_225: int;
  var vslice_dummy_var_226: int;
  var vslice_dummy_var_227: int;
  var vslice_dummy_var_228: int;
  var vslice_dummy_var_229: int;
  var vslice_dummy_var_230: int;

  anon0:
    call {:si_unique_call 1896} totalTime := __HAVOC_malloc(20);
    call {:si_unique_call 1897} updateChar := __HAVOC_malloc(12);
    call {:si_unique_call 1898} timeoutsForIrp := __HAVOC_malloc(20);
    call {:si_unique_call 1899} newIrp_1 := __HAVOC_malloc(4);
    Extension_23 := actual_Extension_23;
    call {:si_unique_call 1900} Tmp_891 := __HAVOC_malloc(72);
    call {:si_unique_call 1901} Tmp_895 := __HAVOC_malloc(76);
    setFirstStatus := 0;
    Tmp_895 := strConst__li2bpl193;
    call {:si_unique_call 1902} vslice_dummy_var_491 := CyyDbgPrintEx(2, Tmp_895);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto L23;

  L23:
    call {:si_unique_call 1903} localStatus_1, Tmp_890, sdv_716, os2ssreturn, setFirstStatus, Tmp_892, useTotalTimer, multiplierVal, crunchDownToOne, sdv_722, oldIrql_9, Tmp_893, sdv_724, constantVal, controlIrql_1, Tmp_894, Tmp_896, returnWithWhatsPresent, Tmp_897, Tmp_898, useIntervalTimer, sdv_731, firstStatus, boogieTmp, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_493 := CyyStartRead_loop_L23(localStatus_1, Tmp_890, sdv_716, totalTime, os2ssreturn, updateChar, timeoutsForIrp, setFirstStatus, Tmp_892, newIrp_1, useTotalTimer, multiplierVal, crunchDownToOne, sdv_722, oldIrql_9, Tmp_893, sdv_724, constantVal, controlIrql_1, Tmp_894, Tmp_896, returnWithWhatsPresent, Tmp_897, Tmp_898, useIntervalTimer, sdv_731, firstStatus, Extension_23, boogieTmp, vslice_dummy_var_488, vslice_dummy_var_489, vslice_dummy_var_490, vslice_dummy_var_493);
    goto L23_last;

  L23_last:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_230;
    call {:si_unique_call 1936} sdv_722 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_230);
    assume {:nonnull} sdv_722 != 0;
    assume sdv_722 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 1904} localStatus_1 := CyyResizeBuffer(Extension_23);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1905} CyyGetNextIrp(CurrentReadIrp__CYY_DEVICE_EXTENSION(Extension_23), ReadQueue__CYY_DEVICE_EXTENSION(Extension_23), newIrp_1, 1, Extension_23);
    assume {:nonnull} newIrp_1 != 0;
    assume newIrp_1 > 0;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    Tmp_891 := strConst__li2bpl192;
    call {:si_unique_call 1906} vslice_dummy_var_492 := CyyDbgPrintEx(2, Tmp_891);
    Tmp_889 := firstStatus;
    goto L1;

  L1:
    return;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    assume false;
    return;

  anon62_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := localStatus_1;
    setFirstStatus := 1;
    goto L37;

  anon61_Then:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_224;
    call {:si_unique_call 1907} sdv_724 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_224);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} sdv_724 != 0;
    assume sdv_724 > 0;
    useTotalTimer := 0;
    returnWithWhatsPresent := 0;
    os2ssreturn := 0;
    crunchDownToOne := 0;
    useIntervalTimer := 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1908} vslice_dummy_var_493 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_23), Extension_23);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1909} vslice_dummy_var_488 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(Extension_23), Extension_23);
    call {:si_unique_call 1910} Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    call {:si_unique_call 1911} sdv_KeAcquireSpinLock(0, Tmp_897);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    havoc controlIrql_1;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    call {:si_unique_call 1912} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    useIntervalTimer := 1;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    goto L66;

  L66:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L76;

  L76:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  L83:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} useTotalTimer != 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} totalTime != 0;
    assume totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 1913} Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    call {:si_unique_call 1914} sdv_KeAcquireSpinLock(0, Tmp_897);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    havoc controlIrql_1;
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    call {:si_unique_call 1915} boogieTmp := CyyGetCharsFromIntBuffer(Extension_23);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 1916} vslice_dummy_var_489 := KeSynchronizeExecution(0, li2bplFunctionConstant458, 0);
    call {:si_unique_call 1917} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_898;
    assume {:nonnull} Tmp_898 != 0;
    assume Tmp_898 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon74_Then:
    assume {:partition} returnWithWhatsPresent == 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} os2ssreturn != 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_893;
    assume {:nonnull} Tmp_893 != 0;
    assume Tmp_893 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L105;

  L105:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_225;
    call {:si_unique_call 1918} sdv_731 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_225);
    assume {:nonnull} sdv_731 != 0;
    assume sdv_731 > 0;
    call {:si_unique_call 1919} Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    call {:si_unique_call 1920} IoAcquireCancelSpinLock(Tmp_897);
    assume {:nonnull} Tmp_897 != 0;
    assume Tmp_897 > 0;
    havoc oldIrql_9;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_892;
    call {:si_unique_call 1921} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Tmp_892 != 0;
    assume Tmp_892 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 1922} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 1923} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_896;
    assume {:nonnull} Tmp_896 != 0;
    assume Tmp_896 > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_890;
    assume {:nonnull} Tmp_890 != 0;
    assume Tmp_890 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := -1073741536;
    setFirstStatus := 1;
    goto L37;

  anon89_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} crunchDownToOne != 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_226;
    call {:si_unique_call 1924} sdv_716 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_226);
    assume {:nonnull} sdv_716 != 0;
    assume sdv_716 > 0;
    goto L126;

  L126:
    call {:si_unique_call 1925} vslice_dummy_var_490 := KeSynchronizeExecution(0, li2bplFunctionConstant459, 0);
    assume {:nonnull} updateChar != 0;
    assume updateChar > 0;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    call {:si_unique_call 1926} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 1927} sdv_KeReleaseSpinLock(0, controlIrql_1);
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_894;
    assume {:nonnull} Tmp_894 != 0;
    assume Tmp_894 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 0;
    setFirstStatus := 1;
    goto L37;

  anon90_Then:
    assume {:partition} setFirstStatus != 0;
    goto L37;

  anon78_Then:
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} useTotalTimer != 0;
    s_p_e_c_i_a_l_28 := 4;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_227;
    call {:si_unique_call 1928} sdv_717 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_227);
    assume {:nonnull} sdv_717 != 0;
    assume sdv_717 > 0;
    s_p_e_c_i_a_l_27 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_717)));
    assume {:nonnull} s_p_e_c_i_a_l_27 != 0;
    assume s_p_e_c_i_a_l_27 > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    call {:si_unique_call 1929} vslice_dummy_var_494 := CyySetTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_23), totalTime, TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_23), Extension_23);
    goto L146;

  L146:
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} useIntervalTimer != 0;
    s_p_e_c_i_a_l_30 := 8;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc vslice_dummy_var_228;
    call {:si_unique_call 1930} sdv_728 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_228);
    assume {:nonnull} sdv_728 != 0;
    assume sdv_728 > 0;
    s_p_e_c_i_a_l_29 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_728)));
    assume {:nonnull} s_p_e_c_i_a_l_29 != 0;
    assume s_p_e_c_i_a_l_29 > 0;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    havoc Tmp_899;
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    assume {:nonnull} Tmp_899 != 0;
    assume Tmp_899 > 0;
    havoc vslice_dummy_var_229;
    call {:si_unique_call 1931} vslice_dummy_var_495 := CyySetTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(Extension_23), vslice_dummy_var_229, IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_23), Extension_23);
    goto L158;

  L158:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 1932} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L230;

  L230:
    call {:si_unique_call 1933} sdv_IoMarkIrpPending(0);
    call {:si_unique_call 1934} IoReleaseCancelSpinLock(oldIrql_9);
    call {:si_unique_call 1935} sdv_KeReleaseSpinLock(0, controlIrql_1);
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} setFirstStatus != 0;
    goto L183;

  L183:
    Tmp_889 := firstStatus;
    goto L1;

  anon82_Then:
    assume {:partition} setFirstStatus == 0;
    firstStatus := 259;
    goto L183;

  anon81_Then:
    goto L230;

  anon80_Then:
    assume {:partition} useIntervalTimer == 0;
    goto L158;

  anon79_Then:
    assume {:partition} useTotalTimer == 0;
    goto L146;

  anon77_Then:
    assume {:partition} crunchDownToOne == 0;
    goto L126;

  anon88_Then:
    goto L94;

  anon76_Then:
    assume {:partition} os2ssreturn == 0;
    goto L105;

  anon75_Then:
    goto L94;

  anon73_Then:
    assume {:partition} useTotalTimer == 0;
    goto L84;

  anon72_Then:
    goto L77;

  L77:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    useTotalTimer := 1;
    os2ssreturn := 1;
    crunchDownToOne := 1;
    multiplierVal := 0;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon83_Then:
    goto L83;

  anon71_Then:
    goto L83;

  anon70_Then:
    goto L77;

  anon68_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    returnWithWhatsPresent := 1;
    goto L83;

  anon69_Then:
    goto L76;

  anon65_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L192;

  L192:
    useTotalTimer := 1;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc multiplierVal;
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    havoc constantVal;
    goto L83;

  anon67_Then:
    assume {:nonnull} timeoutsForIrp != 0;
    assume timeoutsForIrp > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L192;

  anon84_Then:
    goto L83;

  anon86_Then:
    assume {:nonnull} Extension_23 != 0;
    assume Extension_23 > 0;
    goto L66;

  anon66_Then:
    goto L66;

  anon64_Then:
    goto L66;
}



procedure {:origName "CyyMoveToNewIntBuffer"} CyyMoveToNewIntBuffer(actual_Extension_24: int, actual_NewBuffer: int) returns (Tmp_900: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyMoveToNewIntBuffer"} CyyMoveToNewIntBuffer(actual_Extension_24: int, actual_NewBuffer: int) returns (Tmp_900: int)
{
  var {:scalar} firstTryNumberToGet: int;
  var {:scalar} Tmp_903: int;
  var {:scalar} numberOfCharsMoved: int;
  var {:pointer} Extension_24: int;
  var {:pointer} NewBuffer: int;

  anon0:
    Extension_24 := actual_Extension_24;
    NewBuffer := actual_NewBuffer;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc numberOfCharsMoved;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} numberOfCharsMoved != 0;
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    havoc firstTryNumberToGet;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} firstTryNumberToGet >= numberOfCharsMoved;
    call {:si_unique_call 1937} sdv_RtlMoveMemory(0, 0, numberOfCharsMoved);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L6;

  L6:
    Tmp_900 := numberOfCharsMoved;
    return;

  anon7_Then:
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L6;

  anon9_Then:
    assume {:partition} numberOfCharsMoved > firstTryNumberToGet;
    call {:si_unique_call 1938} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet);
    Tmp_903 := numberOfCharsMoved - firstTryNumberToGet;
    call {:si_unique_call 1939} sdv_RtlMoveMemory(0, 0, Tmp_903);
    assume {:nonnull} Extension_24 != 0;
    assume Extension_24 > 0;
    goto L6;

  anon8_Then:
    assume {:partition} numberOfCharsMoved == 0;
    goto L6;
}



procedure {:origName "CyyGetCharsFromIntBuffer"} CyyGetCharsFromIntBuffer(actual_Extension_25: int) returns (Tmp_904: int);
  modifies alloc;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyGetCharsFromIntBuffer"} CyyGetCharsFromIntBuffer(actual_Extension_25: int) returns (Tmp_904: int)
{
  var {:scalar} numberOfCharsToGet: int;
  var {:scalar} firstTryNumberToGet_1: int;
  var {:scalar} Tmp_907: int;
  var {:pointer} Tmp_908: int;
  var {:pointer} Tmp_909: int;
  var {:pointer} Tmp_910: int;
  var {:pointer} Tmp_911: int;
  var {:pointer} Tmp_913: int;
  var {:pointer} Extension_25: int;
  var vslice_dummy_var_496: int;
  var vslice_dummy_var_497: int;
  var vslice_dummy_var_498: int;
  var vslice_dummy_var_231: int;
  var vslice_dummy_var_232: int;
  var vslice_dummy_var_233: int;

  anon0:
    Extension_25 := actual_Extension_25;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc numberOfCharsToGet;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc numberOfCharsToGet;
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} numberOfCharsToGet != 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc firstTryNumberToGet_1;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} firstTryNumberToGet_1 > numberOfCharsToGet;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_231;
    call {:si_unique_call 1940} vslice_dummy_var_497 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_231);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_913;
    assume {:nonnull} Tmp_913 != 0;
    assume Tmp_913 > 0;
    call {:si_unique_call 1941} sdv_RtlMoveMemory(0, 0, numberOfCharsToGet);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto L9;

  L9:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_909;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_910;
    assume {:nonnull} Tmp_909 != 0;
    assume Tmp_909 > 0;
    assume {:nonnull} Tmp_910 != 0;
    assume Tmp_910 > 0;
    Tmp_904 := numberOfCharsToGet;
    return;

  anon12_Then:
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto L9;

  anon11_Then:
    assume {:partition} numberOfCharsToGet >= firstTryNumberToGet_1;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_232;
    call {:si_unique_call 1942} vslice_dummy_var_496 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_232);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_911;
    assume {:nonnull} Tmp_911 != 0;
    assume Tmp_911 > 0;
    call {:si_unique_call 1943} sdv_RtlMoveMemory(0, 0, firstTryNumberToGet_1);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    Tmp_907 := numberOfCharsToGet - firstTryNumberToGet_1;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc vslice_dummy_var_233;
    call {:si_unique_call 1944} vslice_dummy_var_498 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_233);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    havoc Tmp_908;
    assume {:nonnull} Tmp_908 != 0;
    assume Tmp_908 > 0;
    call {:si_unique_call 1945} sdv_RtlMoveMemory(0, 0, Tmp_907);
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    assume {:nonnull} Extension_25 != 0;
    assume Extension_25 > 0;
    goto L9;

  anon9_Then:
    assume {:partition} numberOfCharsToGet == 0;
    goto L9;

  anon10_Then:
    goto L7;
}



procedure {:origName "CyyRead"} CyyRead(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_915: int);
  modifies alloc, IrpCancelChecked, IrpPended, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyRead"} CyyRead(actual_DeviceObject_22: int, actual_Irp_20: int) returns (Tmp_915: int)
{
  var {:pointer} Tmp_916: int;
  var {:pointer} Tmp_917: int;
  var {:pointer} Tmp_918: int;
  var {:scalar} sdv_737: int;
  var {:pointer} Tmp_919: int;
  var {:pointer} sdv_739: int;
  var {:pointer} Tmp_920: int;
  var {:pointer} Tmp_921: int;
  var {:pointer} Tmp_922: int;
  var {:pointer} Tmp_924: int;
  var {:scalar} status_25: int;
  var {:pointer} extension_7: int;
  var {:pointer} DeviceObject_22: int;
  var {:pointer} Irp_20: int;
  var vslice_dummy_var_499: int;
  var vslice_dummy_var_500: int;
  var vslice_dummy_var_501: int;
  var vslice_dummy_var_502: int;
  var vslice_dummy_var_503: int;
  var vslice_dummy_var_504: int;
  var vslice_dummy_var_505: int;
  var vslice_dummy_var_506: int;

  anon0:
    DeviceObject_22 := actual_DeviceObject_22;
    Irp_20 := actual_Irp_20;
    call {:si_unique_call 1946} Tmp_916 := __HAVOC_malloc(68);
    call {:si_unique_call 1947} Tmp_917 := __HAVOC_malloc(72);
    call {:si_unique_call 1948} Tmp_918 := __HAVOC_malloc(96);
    call {:si_unique_call 1949} Tmp_919 := __HAVOC_malloc(72);
    call {:si_unique_call 1950} Tmp_920 := __HAVOC_malloc(68);
    call {:si_unique_call 1951} Tmp_921 := __HAVOC_malloc(72);
    call {:si_unique_call 1952} Tmp_922 := __HAVOC_malloc(68);
    call {:si_unique_call 1953} Tmp_924 := __HAVOC_malloc(68);
    assume {:nonnull} DeviceObject_22 != 0;
    assume DeviceObject_22 > 0;
    havoc extension_7;
    Tmp_917 := strConst__li2bpl198;
    call {:si_unique_call 1954} vslice_dummy_var_499 := CyyDbgPrintEx(2, Tmp_917);
    call {:si_unique_call 1955} status_25 := CyyIRPPrologue(Irp_20, extension_7);
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} status_25 != 0;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} status_25 != 259;
    Tmp_919 := strConst__li2bpl3;
    call {:si_unique_call 1956} vslice_dummy_var_500 := CyyDbgPrintEx(9, Tmp_919);
    call {:si_unique_call 1957} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1958} CyyIRPEpilogue(extension_7);
    goto L19;

  L19:
    Tmp_924 := strConst__li2bpl194;
    call {:si_unique_call 1959} vslice_dummy_var_501 := CyyDbgPrintEx(2, Tmp_924);
    Tmp_915 := status_25;
    goto L1;

  L1:
    return;

  anon10_Then:
    assume {:partition} status_25 == 259;
    goto L19;

  anon9_Then:
    assume {:partition} status_25 == 0;
    Tmp_918 := strConst__li2bpl6;
    call {:si_unique_call 1960} vslice_dummy_var_502 := CyyDbgPrintEx(9, Tmp_918);
    call {:si_unique_call 1961} sdv_737 := CyyCompleteIfError(DeviceObject_22, Irp_20);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} sdv_737 != 0;
    Tmp_922 := strConst__li2bpl195;
    call {:si_unique_call 1962} vslice_dummy_var_503 := CyyDbgPrintEx(2, Tmp_922);
    Tmp_915 := -1073741536;
    goto L1;

  anon11_Then:
    assume {:partition} sdv_737 == 0;
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    call {:si_unique_call 1963} sdv_739 := sdv_IoGetCurrentIrpStackLocation(Irp_20);
    assume {:nonnull} sdv_739 != 0;
    assume sdv_739 > 0;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:nonnull} extension_7 != 0;
    assume extension_7 > 0;
    call {:si_unique_call 1964} status_25 := CyyStartOrQueue(extension_7, Irp_20, ReadQueue__CYY_DEVICE_EXTENSION(extension_7), CurrentReadIrp__CYY_DEVICE_EXTENSION(extension_7), li2bplFunctionConstant376);
    Tmp_916 := strConst__li2bpl196;
    call {:si_unique_call 1965} vslice_dummy_var_504 := CyyDbgPrintEx(2, Tmp_916);
    Tmp_915 := status_25;
    goto L1;

  anon12_Then:
    assume {:nonnull} Irp_20 != 0;
    assume Irp_20 > 0;
    Tmp_921 := strConst__li2bpl3;
    call {:si_unique_call 1966} vslice_dummy_var_505 := CyyDbgPrintEx(9, Tmp_921);
    call {:si_unique_call 1967} sdv_IoCompleteRequest(0, 0);
    call {:si_unique_call 1968} CyyIRPEpilogue(extension_7);
    Tmp_920 := strConst__li2bpl197;
    call {:si_unique_call 1969} vslice_dummy_var_506 := CyyDbgPrintEx(2, Tmp_920);
    Tmp_915 := 0;
    goto L1;
}



procedure {:dopa "Mem_T.INT4"} dummy_for_pa();



procedure corralExplainErrorInit();



procedure corralExtraInit();
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation corralExtraInit()
{

  anon0:
    assume 0 < alloc_init;
    assume alloc_init < alloc;
    return;
}



function {:inline true} {:fieldmap "Mem_T.Affinity__CONFIG_DATA"} {:fieldname "Affinity"} Affinity__CONFIG_DATA(x: int) : int
{
  x + 136
}

function {:inline true} {:fieldmap "Mem_T.Affinity_unnamed_tag_43"} {:fieldname "Affinity"} Affinity_unnamed_tag_43(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "AllDevObjs"} AllDevObjs__CYY_GLOBALS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "AlternativeLists"} AlternativeLists__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.PVOID"} {:fieldname "Argument4"} Argument4_unnamed_tag_40(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.unnamed_tag_3"} {:fieldname "AssociatedIrp"} AssociatedIrp__IRP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.BaseIOAddress__SERIAL_WMI_HW_DATA"} {:fieldname "BaseIOAddress"} BaseIOAddress__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.BaudRate__SERIAL_BAUD_RATE"} {:fieldname "BaudRate"} BaudRate__SERIAL_BAUD_RATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Baud__CYY_IOCTL_BAUD"} {:fieldname "Baud"} Baud__CYY_IOCTL_BAUD(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BitsPerByte__SERIAL_WMI_COMM_DATA"} {:fieldname "BitsPerByte"} BitsPerByte__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Blink__LIST_ENTRY"} {:fieldname "Blink"} Blink__LIST_ENTRY(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CONFIG_DATA"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 100
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryAddressSpace__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemoryAddressSpace"} BoardMemoryAddressSpace__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 584
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CONFIG_DATA"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CONFIG_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.BoardMemoryLength__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemoryLength"} BoardMemoryLength__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 436
}

function {:inline true} {:fieldmap "Mem_T.BoardMemory__CYY_DEVICE_EXTENSION"} {:fieldname "BoardMemory"} BoardMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 232
}

function {:inline true} {:fieldmap "Mem_T.BreakChar__SERIAL_CHARS"} {:fieldname "BreakChar"} BreakChar__SERIAL_CHARS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BufferSizePt8__CYY_DEVICE_EXTENSION"} {:fieldname "BufferSizePt8"} BufferSizePt8__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 372
}

function {:inline true} {:fieldmap "Mem_T.BufferSize__CYY_DEVICE_EXTENSION"} {:fieldname "BufferSize"} BufferSize__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 368
}

function {:inline true} {:fieldmap "Mem_T.Buffer__UNICODE_STRING"} {:fieldname "Buffer"} Buffer__UNICODE_STRING(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "BusNumber"} BusNumber__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CONFIG_DATA"} {:fieldname "BusNumber"} BusNumber__CONFIG_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.BusNumber__CYY_DEVICE_EXTENSION"} {:fieldname "BusNumber"} BusNumber__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 588
}

function {:inline true} {:fieldmap "Mem_T.CDClock__CYY_DEVICE_EXTENSION"} {:fieldname "CDClock"} CDClock__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3424
}

function {:inline true} {:fieldmap "Mem_T.CancelIrql__IRP"} {:fieldname "CancelIrql"} CancelIrql__IRP(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.CancelRoutine__IRP"} {:fieldname "CancelRoutine"} CancelRoutine__IRP(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.Cancel__IRP"} {:fieldname "Cancel"} Cancel__IRP(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.Capabilities_unnamed_tag_28"} {:fieldname "Capabilities"} Capabilities_unnamed_tag_28(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Cd1400__CYY_DEVICE_EXTENSION"} {:fieldname "Cd1400"} Cd1400__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 236
}

function {:inline true} {:fieldmap "Mem_T.Cd1400__CYY_DISPATCH"} {:fieldname "Cd1400"} Cd1400__CYY_DISPATCH(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CdChannel__CYY_DEVICE_EXTENSION"} {:fieldname "CdChannel"} CdChannel__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 260
}

function {:inline true} {:fieldmap "Mem_T.CharsCopied__SERIAL_UPDATE_CHAR"} {:fieldname "CharsCopied"} CharsCopied__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.CharsInInterruptBuffer__CYY_DEVICE_EXTENSION"} {:fieldname "CharsInInterruptBuffer"} CharsInInterruptBuffer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 344
}

function {:inline true} {:fieldmap "Mem_T.CmdFailureLog__CYY_DEVICE_EXTENSION"} {:fieldname "CmdFailureLog"} CmdFailureLog__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3452
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommErrorDpc"} CommErrorDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 836
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CommWaitDpc"} CommWaitDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 876
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteImmediateDpc"} CompleteImmediateDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 916
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteReadDpc"} CompleteReadDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 676
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "CompleteWriteDpc"} CompleteWriteDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 636
}

function {:inline true} {:fieldmap "Mem_T.Completed__SERIAL_UPDATE_CHAR"} {:fieldname "Completed"} Completed__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.CompletionRoutine__IO_STACK_LOCATION"} {:fieldname "CompletionRoutine"} CompletionRoutine__IO_STACK_LOCATION(x: int) : int
{
  x + 496
}

function {:inline true} {:fieldmap "Mem_T.ControlHandShake__SERIAL_HANDFLOW"} {:fieldname "ControlHandShake"} ControlHandShake__SERIAL_HANDFLOW(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CountOfTryingToLowerRTS__CYY_DEVICE_EXTENSION"} {:fieldname "CountOfTryingToLowerRTS"} CountOfTryingToLowerRTS__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 424
}

function {:inline true} {:fieldmap "Mem_T.Count__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "Count"} Count__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Count__IO_RESOURCE_LIST"} {:fieldname "Count"} Count__IO_RESOURCE_LIST(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Counter__SERIAL_XOFF_COUNTER"} {:fieldname "Counter"} Counter__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Create_unnamed_tag_8"} {:fieldname "Create"} Create_unnamed_tag_8(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.CreatedSerialCommEntry__CYY_DEVICE_EXTENSION"} {:fieldname "CreatedSerialCommEntry"} CreatedSerialCommEntry__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 624
}

function {:inline true} {:fieldmap "Mem_T.CreatedSymbolicLink__CYY_DEVICE_EXTENSION"} {:fieldname "CreatedSymbolicLink"} CreatedSymbolicLink__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 620
}

function {:inline true} {:fieldmap "Mem_T.CurrentBaud__CYY_DEVICE_EXTENSION"} {:fieldname "CurrentBaud"} CurrentBaud__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 416
}

function {:inline true} {:fieldmap "Mem_T.CurrentCharSlot__CYY_DEVICE_EXTENSION"} {:fieldname "CurrentCharSlot"} CurrentCharSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 348
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentImmediateIrp"} CurrentImmediateIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 320
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentMaskIrp"} CurrentMaskIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 308
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentPurgeIrp"} CurrentPurgeIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentReadIrp"} CurrentReadIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 300
}

function {:inline true} {:fieldmap "Mem_T.CurrentRxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentRxQueue"} CurrentRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.CurrentStackLocation_unnamed_tag_7"} {:fieldname "CurrentStackLocation"} CurrentStackLocation_unnamed_tag_7(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.CurrentTxQueue__SERIAL_COMMPROP"} {:fieldname "CurrentTxQueue"} CurrentTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWaitIrp"} CurrentWaitIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentWriteIrp"} CurrentWriteIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 304
}

function {:inline true} {:fieldmap "Mem_T.P_IRP"} {:fieldname "CurrentXoffIrp"} CurrentXoffIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 324
}

function {:inline true} {:fieldmap "Mem_T.CutOverAmount__CYY_DEVICE_EXTENSION"} {:fieldname "CutOverAmount"} CutOverAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "CyyStartEvent"} CyyStartEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2448
}

function {:inline true} {:fieldmap "Mem_T.DTRset__CYY_DEVICE_EXTENSION"} {:fieldname "DTRset"} DTRset__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3440
}

function {:inline true} {:fieldmap "Mem_T.Data1__GUID"} {:fieldname "Data1"} Data1__GUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Data2__GUID"} {:fieldname "Data2"} Data2__GUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Data3__GUID"} {:fieldname "Data3"} Data3__GUID(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.Data4__GUID"} {:fieldname "Data4"} Data4__GUID(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DataLength__KEY_VALUE_FULL_INFORMATION"} {:fieldname "DataLength"} DataLength__KEY_VALUE_FULL_INFORMATION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Data__CYY_IOCTL_SYNC"} {:fieldname "Data"} Data__CYY_IOCTL_SYNC(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeferredRoutine__KDPC"} {:fieldname "DeferredRoutine"} DeferredRoutine__KDPC(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Descriptors__IO_RESOURCE_LIST"} {:fieldname "Descriptors"} Descriptors__IO_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DeviceCapabilities_unnamed_tag_8"} {:fieldname "DeviceCapabilities"} DeviceCapabilities_unnamed_tag_8(x: int) : int
{
  x + 312
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceClassSymbolicName"} DeviceClassSymbolicName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2292
}

function {:inline true} {:fieldmap "Mem_T.DeviceExtension__DEVICE_OBJECT"} {:fieldname "DeviceExtension"} DeviceExtension__DEVICE_OBJECT(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.DeviceIoControl_unnamed_tag_8"} {:fieldname "DeviceIoControl"} DeviceIoControl_unnamed_tag_8(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceIsOpened__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceIsOpened"} DeviceIsOpened__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 540
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DeviceName"} DeviceName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceObject"} DeviceObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 216
}

function {:inline true} {:fieldmap "Mem_T.DeviceObject__IO_STACK_LOCATION"} {:fieldname "DeviceObject"} DeviceObject__IO_STACK_LOCATION(x: int) : int
{
  x + 488
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "DevicePNPAccept"} DevicePNPAccept__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2308
}

function {:inline true} {:fieldmap "Mem_T.DeviceStateMap__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceStateMap"} DeviceStateMap__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2636
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceState"} DeviceState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2572
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__DEVICE_CAPABILITIES"} {:fieldname "DeviceState"} DeviceState__DEVICE_CAPABILITIES(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.DeviceState__POWER_STATE"} {:fieldname "DeviceState"} DeviceState__POWER_STATE(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__CYY_DEVICE_EXTENSION"} {:fieldname "DeviceWake"} DeviceWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3084
}

function {:inline true} {:fieldmap "Mem_T.DeviceWake__DEVICE_CAPABILITIES"} {:fieldname "DeviceWake"} DeviceWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "DosName"} DosName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 200
}

function {:inline true} {:fieldmap "Mem_T.DpcCount__CYY_DEVICE_EXTENSION"} {:fieldname "DpcCount"} DpcCount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3292
}

function {:inline true} {:fieldmap "Mem_T.Dpc__KTIMER"} {:fieldname "Dpc"} Dpc__KTIMER(x: int) : int
{
  x + 152
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__CYY_DEVICE_EXTENSION"} {:fieldname "DriverObject"} DriverObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2164
}

function {:inline true} {:fieldmap "Mem_T.DriverObject__DEVICE_OBJECT"} {:fieldname "DriverObject"} DriverObject__DEVICE_OBJECT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.DumpDataSize__IO_ERROR_LOG_PACKET"} {:fieldname "DumpDataSize"} DumpDataSize__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.DumpData__IO_ERROR_LOG_PACKET"} {:fieldname "DumpData"} DumpData__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.EofChar__SERIAL_CHARS"} {:fieldname "EofChar"} EofChar__SERIAL_CHARS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.ErrorChar__SERIAL_CHARS"} {:fieldname "ErrorChar"} ErrorChar__SERIAL_CHARS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.ErrorCode__IO_ERROR_LOG_PACKET"} {:fieldname "ErrorCode"} ErrorCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.ErrorWord__CYY_DEVICE_EXTENSION"} {:fieldname "ErrorWord"} ErrorWord__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 400
}

function {:inline true} {:fieldmap "Mem_T.EscapeChar__CYY_DEVICE_EXTENSION"} {:fieldname "EscapeChar"} EscapeChar__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 608
}

function {:inline true} {:fieldmap "Mem_T.EventChar__SERIAL_CHARS"} {:fieldname "EventChar"} EventChar__SERIAL_CHARS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.ExecuteWmiMethod__WMILIB_CONTEXT"} {:fieldname "ExecuteWmiMethod"} ExecuteWmiMethod__WMILIB_CONTEXT(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYY_IOCTL_BAUD"} {:fieldname "Extension"} Extension__CYY_IOCTL_BAUD(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__CYY_IOCTL_SYNC"} {:fieldname "Extension"} Extension__CYY_IOCTL_SYNC(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_RESIZE_PARAMS"} {:fieldname "Extension"} Extension__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extension__SERIAL_UPDATE_CHAR"} {:fieldname "Extension"} Extension__SERIAL_UPDATE_CHAR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Extensions__CYY_DISPATCH"} {:fieldname "Extensions"} Extensions__CYY_DISPATCH(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.FilterResourceRequirements_unnamed_tag_8"} {:fieldname "FilterResourceRequirements"} FilterResourceRequirements_unnamed_tag_8(x: int) : int
{
  x + 316
}

function {:inline true} {:fieldmap "Mem_T.FinalStatus__IO_ERROR_LOG_PACKET"} {:fieldname "FinalStatus"} FinalStatus__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.FirstReadableChar__CYY_DEVICE_EXTENSION"} {:fieldname "FirstReadableChar"} FirstReadableChar__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 356
}

function {:inline true} {:fieldmap "Mem_T.Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "Flags"} Flags__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "Flags"} Flags__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2440
}

function {:inline true} {:fieldmap "Mem_T.Flink__LIST_ENTRY"} {:fieldname "Flink"} Flink__LIST_ENTRY(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.FlowReplace__SERIAL_HANDFLOW"} {:fieldname "FlowReplace"} FlowReplace__SERIAL_HANDFLOW(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.GuidCount__WMILIB_CONTEXT"} {:fieldname "GuidCount"} GuidCount__WMILIB_CONTEXT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.GuidList__WMILIB_CONTEXT"} {:fieldname "GuidList"} GuidList__WMILIB_CONTEXT(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HandFlow__CYY_DEVICE_EXTENSION"} {:fieldname "HandFlow"} HandFlow__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 492
}

function {:inline true} {:fieldmap "Mem_T.Header__KEVENT"} {:fieldname "Header"} Header__KEVENT(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.High1Time__KSYSTEM_TIME"} {:fieldname "High1Time"} High1Time__KSYSTEM_TIME(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.High2Time__KSYSTEM_TIME"} {:fieldname "High2Time"} High2Time__KSYSTEM_TIME(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.HighPart__LUID"} {:fieldname "HighPart"} HighPart__LUID(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.HistoryMask__CYY_DEVICE_EXTENSION"} {:fieldname "HistoryMask"} HistoryMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 384
}

function {:inline true} {:fieldmap "Mem_T.IdType_unnamed_tag_32"} {:fieldname "IdType"} IdType_unnamed_tag_32(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ImmediateTotalTimer"} ImmediateTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1676
}

function {:inline true} {:fieldmap "Mem_T.InSize__SERIAL_QUEUE_SIZE"} {:fieldname "InSize"} InSize__SERIAL_QUEUE_SIZE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Information__IO_STATUS_BLOCK"} {:fieldname "Information"} Information__IO_STATUS_BLOCK(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.InputBufferLength_unnamed_tag_20"} {:fieldname "InputBufferLength"} InputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR"} {:fieldname "InterfaceType"} InterfaceType__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CONFIG_DATA"} {:fieldname "InterfaceType"} InterfaceType__CONFIG_DATA(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.InterfaceType__CYY_DEVICE_EXTENSION"} {:fieldname "InterfaceType"} InterfaceType__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 592
}

function {:inline true} {:fieldmap "Mem_T.InterruptMode__CONFIG_DATA"} {:fieldname "InterruptMode"} InterruptMode__CONFIG_DATA(x: int) : int
{
  x + 116
}

function {:inline true} {:fieldmap "Mem_T.InterruptReadBuffer__CYY_DEVICE_EXTENSION"} {:fieldname "InterruptReadBuffer"} InterruptReadBuffer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 336
}

function {:inline true} {:fieldmap "Mem_T.InterruptShareable__CYY_DEVICE_EXTENSION"} {:fieldname "InterruptShareable"} InterruptShareable__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 616
}

function {:inline true} {:fieldmap "Mem_T.InterruptType__SERIAL_WMI_HW_DATA"} {:fieldname "InterruptType"} InterruptType__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.P_KINTERRUPT"} {:fieldname "Interrupt"} Interrupt__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 264
}

function {:inline true} {:fieldmap "Mem_T.Interrupt_unnamed_tag_41"} {:fieldname "Interrupt"} Interrupt_unnamed_tag_41(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IntervalReadTimeoutDpc"} IntervalReadTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 756
}

function {:inline true} {:fieldmap "Mem_T.IntervalTimeToUse__CYY_DEVICE_EXTENSION"} {:fieldname "IntervalTimeToUse"} IntervalTimeToUse__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 212
}

function {:inline true} {:fieldmap "Mem_T.IntervalTime__CYY_DEVICE_EXTENSION"} {:fieldname "IntervalTime"} IntervalTime__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.IoControlCode_unnamed_tag_20"} {:fieldname "IoControlCode"} IoControlCode_unnamed_tag_20(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IoResourceRequirementList_unnamed_tag_29"} {:fieldname "IoResourceRequirementList"} IoResourceRequirementList_unnamed_tag_29(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IoStatus__IRP"} {:fieldname "IoStatus"} IoStatus__IRP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.IrpMaskLocation__CYY_DEVICE_EXTENSION"} {:fieldname "IrpMaskLocation"} IrpMaskLocation__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 388
}

function {:inline true} {:fieldmap "Mem_T.IrqAffinityMask__SERIAL_WMI_HW_DATA"} {:fieldname "IrqAffinityMask"} IrqAffinityMask__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.IrqLevel__SERIAL_WMI_HW_DATA"} {:fieldname "IrqLevel"} IrqLevel__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.IrqNumber__SERIAL_WMI_HW_DATA"} {:fieldname "IrqNumber"} IrqNumber__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.IrqVector__SERIAL_WMI_HW_DATA"} {:fieldname "IrqVector"} IrqVector__SERIAL_WMI_HW_DATA(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Irql__CYY_DEVICE_EXTENSION"} {:fieldname "Irql"} Irql__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 560
}

function {:inline true} {:fieldmap "Mem_T.IsBusy__SERIAL_WMI_COMM_DATA"} {:fieldname "IsBusy"} IsBusy__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.IsPci__CYY_DEVICE_EXTENSION"} {:fieldname "IsPci"} IsPci__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3456
}

function {:inline true} {:fieldmap "Mem_T.IsPci__CYY_DISPATCH"} {:fieldname "IsPci"} IsPci__CYY_DISPATCH(x: int) : int
{
  x + 256
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "IsrUnlockPagesDpc"} IsrUnlockPagesDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1156
}

function {:inline true} {:fieldmap "Mem_T.IsrWaitMask__CYY_DEVICE_EXTENSION"} {:fieldname "IsrWaitMask"} IsrWaitMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.LastCharSlot__CYY_DEVICE_EXTENSION"} {:fieldname "LastCharSlot"} LastCharSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 352
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_16"} {:fieldname "Length"} Length_unnamed_tag_16(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Length_unnamed_tag_42"} {:fieldname "Length"} Length_unnamed_tag_42(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Level_unnamed_tag_43"} {:fieldname "Level"} Level_unnamed_tag_43(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ListEntry"} ListEntry_unnamed_tag_7(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.List__CM_RESOURCE_LIST"} {:fieldname "List"} List__CM_RESOURCE_LIST(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.List__IO_RESOURCE_REQUIREMENTS_LIST"} {:fieldname "List"} List__IO_RESOURCE_REQUIREMENTS_LIST(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "LongIntervalAmount"} LongIntervalAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.LowPart__KSYSTEM_TIME"} {:fieldname "LowPart"} LowPart__KSYSTEM_TIME(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowPart__LUID"} {:fieldname "LowPart"} LowPart__LUID(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.LowerDeviceObject__CYY_DEVICE_EXTENSION"} {:fieldname "LowerDeviceObject"} LowerDeviceObject__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2156
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "LowerRTSTimer"} LowerRTSTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1996
}

function {:inline true} {:fieldmap "Mem_T.MSVR_DTR__CYY_DEVICE_EXTENSION"} {:fieldname "MSVR_DTR"} MSVR_DTR__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3432
}

function {:inline true} {:fieldmap "Mem_T.MSVR_RTS__CYY_DEVICE_EXTENSION"} {:fieldname "MSVR_RTS"} MSVR_RTS__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3428
}

function {:inline true} {:fieldmap "Mem_T.MajorFunctionCode__IO_ERROR_LOG_PACKET"} {:fieldname "MajorFunctionCode"} MajorFunctionCode__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__DRIVER_OBJECT"} {:fieldname "MajorFunction"} MajorFunction__DRIVER_OBJECT(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.MajorFunction__IO_STACK_LOCATION"} {:fieldname "MajorFunction"} MajorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "MaskQueue"} MaskQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 284
}

function {:inline true} {:fieldmap "Mem_T.MaxBaud__SERIAL_COMMPROP"} {:fieldname "MaxBaud"} MaxBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.MaxRxQueue__SERIAL_COMMPROP"} {:fieldname "MaxRxQueue"} MaxRxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.MaxTxQueue__SERIAL_COMMPROP"} {:fieldname "MaxTxQueue"} MaxTxQueue__SERIAL_COMMPROP(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.MaximumBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumBaudRate"} MaximumBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.MaximumInputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumInputBufferSize"} MaximumInputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.MaximumLength__UNICODE_STRING"} {:fieldname "MaximumLength"} MaximumLength__UNICODE_STRING(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA"} {:fieldname "MaximumOutputBufferSize"} MaximumOutputBufferSize__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_41"} {:fieldname "Memory"} Memory_unnamed_tag_41(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.Memory_unnamed_tag_53"} {:fieldname "Memory"} Memory_unnamed_tag_53(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.MinorFunction__IO_STACK_LOCATION"} {:fieldname "MinorFunction"} MinorFunction__IO_STACK_LOCATION(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.NewBufferSize__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBufferSize"} NewBufferSize__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.NewBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "NewBuffer"} NewBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "NtNameForPort"} NtNameForPort__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 176
}

function {:inline true} {:fieldmap "Mem_T.NumberMoved__SERIAL_RESIZE_PARAMS"} {:fieldname "NumberMoved"} NumberMoved__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.NumberNeededForRead__CYY_DEVICE_EXTENSION"} {:fieldname "NumberNeededForRead"} NumberNeededForRead__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 376
}

function {:inline true} {:fieldmap "Mem_T.NumberOfStrings__IO_ERROR_LOG_PACKET"} {:fieldname "NumberOfStrings"} NumberOfStrings__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "ObjectDirectory"} ObjectDirectory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 164
}

function {:inline true} {:fieldmap "Mem_T.OldBuffer__SERIAL_RESIZE_PARAMS"} {:fieldname "OldBuffer"} OldBuffer__SERIAL_RESIZE_PARAMS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "OpenCount"} OpenCount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2444
}

function {:inline true} {:fieldmap "Mem_T.Options_unnamed_tag_9"} {:fieldname "Options"} Options_unnamed_tag_9(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.OriginalBoardMemory__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalBoardMemory"} OriginalBoardMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.OriginalCd1400__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalCd1400"} OriginalCd1400__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 240
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__CONFIG_DATA"} {:fieldname "OriginalIrql"} OriginalIrql__CONFIG_DATA(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.OriginalIrql__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalIrql"} OriginalIrql__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 568
}

function {:inline true} {:fieldmap "Mem_T.OriginalRuntimeMemory__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalRuntimeMemory"} OriginalRuntimeMemory__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__CONFIG_DATA"} {:fieldname "OriginalVector"} OriginalVector__CONFIG_DATA(x: int) : int
{
  x + 120
}

function {:inline true} {:fieldmap "Mem_T.OriginalVector__CYY_DEVICE_EXTENSION"} {:fieldname "OriginalVector"} OriginalVector__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 564
}

function {:inline true} {:fieldmap "Mem_T.Others_unnamed_tag_8"} {:fieldname "Others"} Others_unnamed_tag_8(x: int) : int
{
  x + 456
}

function {:inline true} {:fieldmap "Mem_T.OurIsrContext__CYY_DEVICE_EXTENSION"} {:fieldname "OurIsrContext"} OurIsrContext__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 224
}

function {:inline true} {:fieldmap "Mem_T.OurIsr__CYY_DEVICE_EXTENSION"} {:fieldname "OurIsr"} OurIsr__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 220
}

function {:inline true} {:fieldmap "Mem_T.OutputBufferLength_unnamed_tag_20"} {:fieldname "OutputBufferLength"} OutputBufferLength_unnamed_tag_20(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Overlay_unnamed_tag_6"} {:fieldname "Overlay"} Overlay_unnamed_tag_6(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.OwnsPowerPolicy__CYY_DEVICE_EXTENSION"} {:fieldname "OwnsPowerPolicy"} OwnsPowerPolicy__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3076
}

function {:inline true} {:fieldmap "Mem_T.PNPState__CYY_DEVICE_EXTENSION"} {:fieldname "PNPState"} PNPState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2436
}

function {:inline true} {:fieldmap "Mem_T.PacketLength__SERIAL_COMMPROP"} {:fieldname "PacketLength"} PacketLength__SERIAL_COMMPROP(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.PacketVersion__SERIAL_COMMPROP"} {:fieldname "PacketVersion"} PacketVersion__SERIAL_COMMPROP(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parameters__IO_STACK_LOCATION"} {:fieldname "Parameters"} Parameters__IO_STACK_LOCATION(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.ParityCheckEnable__SERIAL_WMI_COMM_DATA"} {:fieldname "ParityCheckEnable"} ParityCheckEnable__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_LINE_CONTROL"} {:fieldname "Parity"} Parity__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Parity__SERIAL_WMI_COMM_DATA"} {:fieldname "Parity"} Parity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PartialDescriptors__CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialDescriptors"} PartialDescriptors__CM_PARTIAL_RESOURCE_LIST(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T._CM_PARTIAL_RESOURCE_LIST"} {:fieldname "PartialResourceList"} PartialResourceList__CM_FULL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.PciSlot__CYY_DEVICE_EXTENSION"} {:fieldname "PciSlot"} PciSlot__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3460
}

function {:inline true} {:fieldmap "Mem_T.Pdo__CYY_DEVICE_EXTENSION"} {:fieldname "Pdo"} Pdo__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3088
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingDpcEvent"} PendingDpcEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3296
}

function {:inline true} {:fieldmap "Mem_T.PendingIRPCnt__CYY_DEVICE_EXTENSION"} {:fieldname "PendingIRPCnt"} PendingIRPCnt__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2304
}

function {:inline true} {:fieldmap "Mem_T.VOID"} {:fieldname "PendingIRPEvent"} PendingIRPEvent__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2312
}

function {:inline true} {:fieldmap "Mem_T.PendingReturned__IRP"} {:fieldname "PendingReturned"} PendingReturned__IRP(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.PendingWakeIrp__CYY_DEVICE_EXTENSION"} {:fieldname "PendingWakeIrp"} PendingWakeIrp__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3096
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "PerhapsLowerRTSDpc"} PerhapsLowerRTSDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1116
}

function {:inline true} {:fieldmap "Mem_T.PhysicalBoardMemory__CONFIG_DATA"} {:fieldname "PhysicalBoardMemory"} PhysicalBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.PhysicalRuntime__CONFIG_DATA"} {:fieldname "PhysicalRuntime"} PhysicalRuntime__CONFIG_DATA(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "PortIndex"} PortIndex__CONFIG_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.PortIndex__CYY_DEVICE_EXTENSION"} {:fieldname "PortIndex"} PortIndex__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 596
}

function {:inline true} {:fieldmap "Mem_T.PowerState__CYY_DEVICE_EXTENSION"} {:fieldname "PowerState"} PowerState__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2160
}

function {:inline true} {:fieldmap "Mem_T.Power_unnamed_tag_8"} {:fieldname "Power"} Power_unnamed_tag_8(x: int) : int
{
  x + 380
}

function {:inline true} {:fieldmap "Mem_T.ProvCapabilities__SERIAL_COMMPROP"} {:fieldname "ProvCapabilities"} ProvCapabilities__SERIAL_COMMPROP(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.ProvSubType__SERIAL_COMMPROP"} {:fieldname "ProvSubType"} ProvSubType__SERIAL_COMMPROP(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "PurgeQueue"} PurgeQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 292
}

function {:inline true} {:fieldmap "Mem_T.QuadPart__LARGE_INTEGER"} {:fieldname "QuadPart"} QuadPart__LARGE_INTEGER(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.QueryDeviceRelations_unnamed_tag_8"} {:fieldname "QueryDeviceRelations"} QueryDeviceRelations_unnamed_tag_8(x: int) : int
{
  x + 288
}

function {:inline true} {:fieldmap "Mem_T.QueryId_unnamed_tag_8"} {:fieldname "QueryId"} QueryId_unnamed_tag_8(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "QueryWmiDataBlock"} QueryWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.QueryWmiRegInfo__WMILIB_CONTEXT"} {:fieldname "QueryWmiRegInfo"} QueryWmiRegInfo__WMILIB_CONTEXT(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.RTSset__CYY_DEVICE_EXTENSION"} {:fieldname "RTSset"} RTSset__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3436
}

function {:inline true} {:fieldmap "Mem_T.RXHolding__CYY_DEVICE_EXTENSION"} {:fieldname "RXHolding"} RXHolding__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 396
}

function {:inline true} {:fieldmap "Mem_T.ReadBufferBase__CYY_DEVICE_EXTENSION"} {:fieldname "ReadBufferBase"} ReadBufferBase__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 340
}

function {:inline true} {:fieldmap "Mem_T.ReadIntervalTimeout__SERIAL_TIMEOUTS"} {:fieldname "ReadIntervalTimeout"} ReadIntervalTimeout__SERIAL_TIMEOUTS(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "ReadQueue"} ReadQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 268
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestIntervalTimer"} ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1356
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "ReadRequestTotalTimer"} ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1196
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutConstant"} ReadTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "ReadTotalTimeoutMultiplier"} ReadTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Read_unnamed_tag_8"} {:fieldname "Read"} Read_unnamed_tag_8(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.Reopen__CYY_DEVICE_STATE"} {:fieldname "Reopen"} Reopen__CYY_DEVICE_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.RetryCount__IO_ERROR_LOG_PACKET"} {:fieldname "RetryCount"} RetryCount__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CONFIG_DATA"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CONFIG_DATA(x: int) : int
{
  x + 96
}

function {:inline true} {:fieldmap "Mem_T.RuntimeAddressSpace__CYY_DEVICE_EXTENSION"} {:fieldname "RuntimeAddressSpace"} RuntimeAddressSpace__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 580
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CONFIG_DATA"} {:fieldname "RuntimeLength"} RuntimeLength__CONFIG_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.RuntimeLength__CYY_DEVICE_EXTENSION"} {:fieldname "RuntimeLength"} RuntimeLength__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 432
}

function {:inline true} {:fieldmap "Mem_T.Runtime__CYY_DEVICE_EXTENSION"} {:fieldname "Runtime"} Runtime__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 228
}

function {:inline true} {:fieldmap "Mem_T.RxFIFODefault__CYY_REGISTRY_DATA"} {:fieldname "RxFIFODefault"} RxFIFODefault__CYY_REGISTRY_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "RxFIFO"} RxFIFO__CONFIG_DATA(x: int) : int
{
  x + 104
}

function {:inline true} {:fieldmap "Mem_T.RxFifoTrigger__CYY_DEVICE_EXTENSION"} {:fieldname "RxFifoTrigger"} RxFifoTrigger__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 612
}

function {:inline true} {:fieldmap "Mem_T.SendWaitWake__CYY_DEVICE_EXTENSION"} {:fieldname "SendWaitWake"} SendWaitWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3092
}

function {:inline true} {:fieldmap "Mem_T.SequenceNumber__IO_ERROR_LOG_PACKET"} {:fieldname "SequenceNumber"} SequenceNumber__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SerialCount"} SerialCount__CONFIGURATION_INFORMATION(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.ServiceMask__SERIAL_COMMPROP"} {:fieldname "ServiceMask"} ServiceMask__SERIAL_COMMPROP(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataBlock__WMILIB_CONTEXT"} {:fieldname "SetWmiDataBlock"} SetWmiDataBlock__WMILIB_CONTEXT(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.SetWmiDataItem__WMILIB_CONTEXT"} {:fieldname "SetWmiDataItem"} SetWmiDataItem__WMILIB_CONTEXT(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.SettableBaudRate__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableBaudRate"} SettableBaudRate__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SettableBaud__SERIAL_COMMPROP"} {:fieldname "SettableBaud"} SettableBaud__SERIAL_COMMPROP(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.SettableDataBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableDataBits"} SettableDataBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 76
}

function {:inline true} {:fieldmap "Mem_T.SettableData__SERIAL_COMMPROP"} {:fieldname "SettableData"} SettableData__SERIAL_COMMPROP(x: int) : int
{
  x + 44
}

function {:inline true} {:fieldmap "Mem_T.SettableFlowControl__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableFlowControl"} SettableFlowControl__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 80
}

function {:inline true} {:fieldmap "Mem_T.SettableParams__SERIAL_COMMPROP"} {:fieldname "SettableParams"} SettableParams__SERIAL_COMMPROP(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.SettableParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParityCheck"} SettableParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 88
}

function {:inline true} {:fieldmap "Mem_T.SettableParity__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableParity"} SettableParity__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 84
}

function {:inline true} {:fieldmap "Mem_T.SettableStopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "SettableStopBits"} SettableStopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 92
}

function {:inline true} {:fieldmap "Mem_T.SettableStopParity__SERIAL_COMMPROP"} {:fieldname "SettableStopParity"} SettableStopParity__SERIAL_COMMPROP(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.ShareDisposition__IO_RESOURCE_DESCRIPTOR"} {:fieldname "ShareDisposition"} ShareDisposition__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LARGE_INTEGER"} {:fieldname "ShortIntervalAmount"} ShortIntervalAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 72
}

function {:inline true} {:fieldmap "Mem_T.SignalState__DISPATCHER_HEADER"} {:fieldname "SignalState"} SignalState__DISPATCHER_HEADER(x: int) : int
{
  x + 112
}

function {:inline true} {:fieldmap "Mem_T.Signalling__DISPATCHER_HEADER"} {:fieldname "Signalling"} Signalling__DISPATCHER_HEADER(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.Size__DISPATCHER_HEADER"} {:fieldname "Size"} Size__DISPATCHER_HEADER(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "SkipNaming"} SkipNaming__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3420
}

function {:inline true} {:fieldmap "Mem_T.SpecialChars__CYY_DEVICE_EXTENSION"} {:fieldname "SpecialChars"} SpecialChars__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 468
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "StalledIrpQueue"} StalledIrpQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 2788
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "StartTimerLowerRTSDpc"} StartTimerLowerRTSDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1076
}

function {:inline true} {:fieldmap "Mem_T.Start_unnamed_tag_42"} {:fieldname "Start"} Start_unnamed_tag_42(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.State_unnamed_tag_37"} {:fieldname "State"} State_unnamed_tag_37(x: int) : int
{
  x + 40
}

function {:inline true} {:fieldmap "Mem_T.Status__IO_STATUS_BLOCK"} {:fieldname "Status"} Status__IO_STATUS_BLOCK(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_LINE_CONTROL"} {:fieldname "StopBits"} StopBits__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.StopBits__SERIAL_WMI_COMM_DATA"} {:fieldname "StopBits"} StopBits__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.StringOffset__IO_ERROR_LOG_PACKET"} {:fieldname "StringOffset"} StringOffset__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.Support16BitMode__SERIAL_WMI_COMM_DATA"} {:fieldname "Support16BitMode"} Support16BitMode__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.SupportDTRDSR__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportDTRDSR"} SupportDTRDSR__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 52
}

function {:inline true} {:fieldmap "Mem_T.SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportIntervalTimeouts"} SupportIntervalTimeouts__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 56
}

function {:inline true} {:fieldmap "Mem_T.SupportParityCheck__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportParityCheck"} SupportParityCheck__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.SupportRTSCTS__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportRTSCTS"} SupportRTSCTS__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 64
}

function {:inline true} {:fieldmap "Mem_T.SupportXonXoff__SERIAL_WMI_COMM_DATA"} {:fieldname "SupportXonXoff"} SupportXonXoff__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 68
}

function {:inline true} {:fieldmap "Mem_T.SupportedBauds__CYY_DEVICE_EXTENSION"} {:fieldname "SupportedBauds"} SupportedBauds__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 428
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "SymbolicLinkName"} SymbolicLinkName__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 188
}

function {:inline true} {:fieldmap "Mem_T.SystemBuffer_unnamed_tag_3"} {:fieldname "SystemBuffer"} SystemBuffer_unnamed_tag_3(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.SystemState__POWER_STATE"} {:fieldname "SystemState"} SystemState__POWER_STATE(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__CYY_DEVICE_EXTENSION"} {:fieldname "SystemWake"} SystemWake__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3080
}

function {:inline true} {:fieldmap "Mem_T.SystemWake__DEVICE_CAPABILITIES"} {:fieldname "SystemWake"} SystemWake__DEVICE_CAPABILITIES(x: int) : int
{
  x + 124
}

function {:inline true} {:fieldmap "Mem_T.TXHolding__CYY_DEVICE_EXTENSION"} {:fieldname "TXHolding"} TXHolding__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 392
}

function {:inline true} {:fieldmap "Mem_T.Tail__IRP"} {:fieldname "Tail"} Tail__IRP(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.Timeout__SERIAL_XOFF_COUNTER"} {:fieldname "Timeout"} Timeout__SERIAL_XOFF_COUNTER(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Timeouts__CYY_DEVICE_EXTENSION"} {:fieldname "Timeouts"} Timeouts__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 448
}

function {:inline true} {:fieldmap "Mem_T.TotalCharsQueued__CYY_DEVICE_EXTENSION"} {:fieldname "TotalCharsQueued"} TotalCharsQueued__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 404
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalImmediateTimeoutDpc"} TotalImmediateTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 956
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalReadTimeoutDpc"} TotalReadTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 716
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "TotalWriteTimeoutDpc"} TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 796
}

function {:inline true} {:fieldmap "Mem_T.TrIrql__CONFIG_DATA"} {:fieldname "TrIrql"} TrIrql__CONFIG_DATA(x: int) : int
{
  x + 132
}

function {:inline true} {:fieldmap "Mem_T.TrVector__CONFIG_DATA"} {:fieldname "TrVector"} TrVector__CONFIG_DATA(x: int) : int
{
  x + 128
}

function {:inline true} {:fieldmap "Mem_T.TranslatedBoardMemory__CONFIG_DATA"} {:fieldname "TranslatedBoardMemory"} TranslatedBoardMemory__CONFIG_DATA(x: int) : int
{
  x + 60
}

function {:inline true} {:fieldmap "Mem_T.TranslatedRuntime__CONFIG_DATA"} {:fieldname "TranslatedRuntime"} TranslatedRuntime__CONFIG_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.TxFIFODefault__CYY_REGISTRY_DATA"} {:fieldname "TxFIFODefault"} TxFIFODefault__CYY_REGISTRY_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.INT4"} {:fieldname "TxFIFO"} TxFIFO__CONFIG_DATA(x: int) : int
{
  x + 108
}

function {:inline true} {:fieldmap "Mem_T.TxFifoAmount__CYY_DEVICE_EXTENSION"} {:fieldname "TxFifoAmount"} TxFifoAmount__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 440
}

function {:inline true} {:fieldmap "Mem_T.Type3InputBuffer_unnamed_tag_20"} {:fieldname "Type3InputBuffer"} Type3InputBuffer_unnamed_tag_20(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Type__IO_RESOURCE_DESCRIPTOR"} {:fieldname "Type"} Type__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_26"} {:fieldname "Type"} Type_unnamed_tag_26(x: int) : int
{
  x + 0
}

function {:inline true} {:fieldmap "Mem_T.Type_unnamed_tag_37"} {:fieldname "Type"} Type_unnamed_tag_37(x: int) : int
{
  x + 36
}

function {:inline true} {:fieldmap "Mem_T.UniqueErrorValue__IO_ERROR_LOG_PACKET"} {:fieldname "UniqueErrorValue"} UniqueErrorValue__IO_ERROR_LOG_PACKET(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.ValidDataMask__CYY_DEVICE_EXTENSION"} {:fieldname "ValidDataMask"} ValidDataMask__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 604
}

function {:inline true} {:fieldmap "Mem_T.Vector__CYY_DEVICE_EXTENSION"} {:fieldname "Vector"} Vector__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 556
}

function {:inline true} {:fieldmap "Mem_T.Vector_unnamed_tag_43"} {:fieldname "Vector"} Vector_unnamed_tag_43(x: int) : int
{
  x + 4
}

function {:inline true} {:fieldmap "Mem_T.WmiCommData__CYY_DEVICE_EXTENSION"} {:fieldname "WmiCommData"} WmiCommData__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3144
}

function {:inline true} {:fieldmap "Mem_T.WmiFunctionControl__WMILIB_CONTEXT"} {:fieldname "WmiFunctionControl"} WmiFunctionControl__WMILIB_CONTEXT(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.WmiHwData__CYY_DEVICE_EXTENSION"} {:fieldname "WmiHwData"} WmiHwData__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3244
}

function {:inline true} {:fieldmap "Mem_T._UNICODE_STRING"} {:fieldname "WmiIdentifier"} WmiIdentifier__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3132
}

function {:inline true} {:fieldmap "Mem_T.WmiLibInfo__CYY_DEVICE_EXTENSION"} {:fieldname "WmiLibInfo"} WmiLibInfo__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 3100
}

function {:inline true} {:fieldmap "Mem_T.WordLength__SERIAL_LINE_CONTROL"} {:fieldname "WordLength"} WordLength__SERIAL_LINE_CONTROL(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T._LIST_ENTRY"} {:fieldname "WriteQueue"} WriteQueue__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 276
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "WriteRequestTotalTimer"} WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1516
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutConstant__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutConstant"} WriteTotalTimeoutConstant__SERIAL_TIMEOUTS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS"} {:fieldname "WriteTotalTimeoutMultiplier"} WriteTotalTimeoutMultiplier__SERIAL_TIMEOUTS(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.Write_unnamed_tag_8"} {:fieldname "Write"} Write_unnamed_tag_8(x: int) : int
{
  x + 48
}

function {:inline true} {:fieldmap "Mem_T.XoffChar__SERIAL_CHARS"} {:fieldname "XoffChar"} XoffChar__SERIAL_CHARS(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T.XoffCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffCharacter"} XoffCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 20
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountCompleteDpc"} XoffCountCompleteDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1036
}

function {:inline true} {:fieldmap "Mem_T._KDPC"} {:fieldname "XoffCountTimeoutDpc"} XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 996
}

function {:inline true} {:fieldmap "Mem_T._KTIMER"} {:fieldname "XoffCountTimer"} XoffCountTimer__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 1836
}

function {:inline true} {:fieldmap "Mem_T.XoffLimit__SERIAL_HANDFLOW"} {:fieldname "XoffLimit"} XoffLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.XoffXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XoffXmitThreshold"} XoffXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.XonChar__SERIAL_CHARS"} {:fieldname "XonChar"} XonChar__SERIAL_CHARS(x: int) : int
{
  x + 16
}

function {:inline true} {:fieldmap "Mem_T.XonCharacter__SERIAL_WMI_COMM_DATA"} {:fieldname "XonCharacter"} XonCharacter__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 28
}

function {:inline true} {:fieldmap "Mem_T.XonLimit__SERIAL_HANDFLOW"} {:fieldname "XonLimit"} XonLimit__SERIAL_HANDFLOW(x: int) : int
{
  x + 8
}

function {:inline true} {:fieldmap "Mem_T.XonXmitThreshold__SERIAL_WMI_COMM_DATA"} {:fieldname "XonXmitThreshold"} XonXmitThreshold__SERIAL_WMI_COMM_DATA(x: int) : int
{
  x + 32
}

function {:inline true} {:fieldmap "Mem_T.cor1__CYY_DEVICE_EXTENSION"} {:fieldname "cor1"} cor1__CYY_DEVICE_EXTENSION(x: int) : int
{
  x + 536
}

function {:inline true} {:fieldmap "Mem_T.u__CM_PARTIAL_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__CM_PARTIAL_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 12
}

function {:inline true} {:fieldmap "Mem_T.u__IO_RESOURCE_DESCRIPTOR"} {:fieldname "u"} u__IO_RESOURCE_DESCRIPTOR(x: int) : int
{
  x + 24
}

function {:inline true} {:fieldmap "Mem_T.u__LARGE_INTEGER"} {:fieldname "u"} u__LARGE_INTEGER(x: int) : int
{
  x + 8
}

const {:string ""} unique strConst__li2bpl0: int;

const {:string " The default interrupt read buffer size is: %d\n------  The XoffLimit is                         : %d\n------  The XonLimit is                          : %d\n------  The pt 8 size is                         : %d\n"} unique strConst__li2bpl43: int;

const {:string "%s%u"} unique strConst__li2bpl160: int;

const {:string "%x irp was already marked as cancelled\n"} unique strConst__li2bpl185: int;

const {:string "%x is a SETMASK irp\n"} unique strConst__li2bpl180: int;

const {:string "%x was the first irp processed by this\n------- invocation of startmask\n"} unique strConst__li2bpl181: int;

const {:string "%x will become the current wait irp\n"} unique strConst__li2bpl184: int;

const {:string "------- BusRelations Query\n"} unique strConst__li2bpl142: int;

const {:string "------- EjectionRelations Query\n"} unique strConst__li2bpl143: int;

const {:string "------- PowerRelations Query\n"} unique strConst__li2bpl144: int;

const {:string "------- RemovalRelations Query\n"} unique strConst__li2bpl145: int;

const {:string "------- Sharing interrupt for device %x\n"} unique strConst__li2bpl156: int;

const {:string "------- TargetDeviceRelation Query\n"} unique strConst__li2bpl146: int;

const {:string "------- Unknown Query\n"} unique strConst__li2bpl141: int;

const {:string "------- We should not have Port resource\n"} unique strConst__li2bpl137: int;

const {:string "<CyyDisableInterfaces\n"} unique strConst__li2bpl55: int;

const {:string "<CyyFlush (1) %X\n"} unique strConst__li2bpl189: int;

const {:string "<CyyFlush (2) %X\n"} unique strConst__li2bpl190: int;

const {:string "<CyyFlush (3) %X\n"} unique strConst__li2bpl188: int;

const {:string "<CyyGetNextWrite\n"} unique strConst__li2bpl169: int;

const {:string "<CyyGetRegistryKeyValue %X\n"} unique strConst__li2bpl5: int;

const {:string "<CyyInitMultiPort (1) %X\n"} unique strConst__li2bpl28: int;

const {:string "<CyyInitMultiPort (3) %X\n"} unique strConst__li2bpl29: int;

const {:string "<CyyKillPendingIrps\n"} unique strConst__li2bpl46: int;

const {:string "<CyyRead (1) %X\n"} unique strConst__li2bpl194: int;

const {:string "<CyyRead (2) %X\n"} unique strConst__li2bpl195: int;

const {:string "<CyyRead (3) %X\n"} unique strConst__li2bpl196: int;

const {:string "<CyyRead (4) %X\n"} unique strConst__li2bpl197: int;

const {:string "<CyyReleaseResources\n"} unique strConst__li2bpl50: int;

const {:string "<CyyRemoveDevObj %X\n"} unique strConst__li2bpl45: int;

const {:string "<CyyStartImmediate\n"} unique strConst__li2bpl2: int;

const {:string "<CyyStartRead %X\n"} unique strConst__li2bpl192: int;

const {:string "<CyyStartWrite %X\n"} unique strConst__li2bpl175: int;

const {:string "<CyyUnstallIrps\n"} unique strConst__li2bpl167: int;

const {:string "<CyyWrite (1) %X\n"} unique strConst__li2bpl170: int;

const {:string "<CyyWrite (2) %X\n"} unique strConst__li2bpl171: int;

const {:string "<CyyWrite (3) %X\n"} unique strConst__li2bpl172: int;

const {:string "<CyyWrite (4) %X\n"} unique strConst__li2bpl173: int;

const {:string ">CyyDisableInterfaces(%X, %s)\n"} unique strConst__li2bpl54: int;

const {:string ">CyyFindInitController(%X, %X)\n"} unique strConst__li2bpl38: int;

const {:string ">CyyFlush(%X, %X)\n"} unique strConst__li2bpl187: int;

const {:string ">CyyGetNextWrite(XXX)\n"} unique strConst__li2bpl168: int;

const {:string ">CyyGetRegistryKeyValue(XXX)\n"} unique strConst__li2bpl4: int;

const {:string ">CyyInitMultiPort(%X, %X, %X)\n"} unique strConst__li2bpl27: int;

const {:string ">CyyKillPendingIrps(%X)\n"} unique strConst__li2bpl47: int;

const {:string ">CyyRead(%X, %X)\n"} unique strConst__li2bpl198: int;

const {:string ">CyyReleaseResources(%X)\n"} unique strConst__li2bpl48: int;

const {:string ">CyyRemoveDevObj(%X)\n"} unique strConst__li2bpl44: int;

const {:string ">CyyStartImmediate(%X)\n"} unique strConst__li2bpl1: int;

const {:string ">CyyStartRead(%X)\n"} unique strConst__li2bpl193: int;

const {:string ">CyyStartWrite(%X)\n"} unique strConst__li2bpl176: int;

const {:string ">CyyUnstallIrps(%X)\n"} unique strConst__li2bpl165: int;

const {:string ">CyyWrite(%X, %X)\n"} unique strConst__li2bpl174: int;

const {:string "About to connect to interrupt for port %wZ\n------- address of extension is %x\n"} unique strConst__li2bpl119: int;

const {:string "Aha! It is a first multi\n"} unique strConst__li2bpl33: int;

const {:string "Aha! It is a multiport node\n"} unique strConst__li2bpl35: int;

const {:string "Already in requested power state\n"} unique strConst__li2bpl23: int;

const {:string "Attempting to init %wZ\n------- Runtime Memory is %x\n------- Board Memory is %x\n------- BusNumber is %d\n------- BusType is %d\n------- Runtime AddressSpace is %d\n------- Board AddressSpace is %d\n------- Interrupt Mode is %d\n"} unique strConst__li2bpl39: int;

const {:string "Board Memory address: %x\n"} unique strConst__li2bpl73: int;

const {:string "Bogus Runtime address %x\n"} unique strConst__li2bpl84: int;

const {:string "Bogus board address %x\n"} unique strConst__li2bpl83: int;

const {:string "Bogus vector %x\n"} unique strConst__li2bpl82: int;

const {:string "Can't filter NULL resources!\n"} unique strConst__li2bpl138: int;

const {:string "Canceling wait for irp %x\n"} unique strConst__li2bpl177: int;

const {:string "Cleaning up failed start\n"} unique strConst__li2bpl113: int;

const {:string "Clearing DTR for Port%d Pci%d\n"} unique strConst__li2bpl164: int;

const {:string "Clearing RTS for Port%d Pci%d\n"} unique strConst__li2bpl163: int;

const {:string "Close open count bad for: 0x%x\n"} unique strConst__li2bpl58: int;

const {:string "Close prologue failed for: %x\n"} unique strConst__li2bpl57: int;

const {:string "Com Board AddressSpace: %x\n"} unique strConst__li2bpl77: int;

const {:string "Com InterfaceType: %x\n"} unique strConst__li2bpl79: int;

const {:string "Com InterruptMode: %x\n"} unique strConst__li2bpl78: int;

const {:string "Com OriginalIrql: %x\n"} unique strConst__li2bpl81: int;

const {:string "Com OriginalVector: %x\n"} unique strConst__li2bpl80: int;

const {:string "Com Port BusNumber: %x\n"} unique strConst__li2bpl75: int;

const {:string "Com Port Index: %x\n"} unique strConst__li2bpl74: int;

const {:string "Com Runtime AddressSpace: %x\n"} unique strConst__li2bpl76: int;

const {:string "Complete Irp: %X\n"} unique strConst__li2bpl3: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different Runtime addresses\n"} unique strConst__li2bpl36: int;

const {:string "Configuration error for %wZ\n------- Same multiport - different interrupts\n"} unique strConst__li2bpl34: int;

const {:string "Connected interrupt %08X\n"} unique strConst__li2bpl122: int;

const {:string "Could not map Board memory for device registers for %wZ\n"} unique strConst__li2bpl42: int;

const {:string "Could not map Runtime memory for device registers for %wZ\n"} unique strConst__li2bpl41: int;

const {:string "Couldn't allocate memory for Dos name\n"} unique strConst__li2bpl97: int;

const {:string "Couldn't allocate memory for WMI name\n"} unique strConst__li2bpl99: int;

const {:string "Couldn't allocate memory for buffer\n"} unique strConst__li2bpl101: int;

const {:string "Couldn't allocate memory for device name\n"} unique strConst__li2bpl102: int;

const {:string "Couldn't allocate memory for symbolic link name\n"} unique strConst__li2bpl98: int;

const {:string "Couldn't allocate memory for the\n------  user configuration record\n"} unique strConst__li2bpl123: int;

const {:string "Couldn't connect to interrupt for %wZ\n"} unique strConst__li2bpl121: int;

const {:string "Couldn't create the device map entry\n------- for port %wZ\n"} unique strConst__li2bpl95: int;

const {:string "Couldn't create the symbolic link\nfor port %wZ\n"} unique strConst__li2bpl96: int;

const {:string "Couldn't delete value entry %wZ\n"} unique strConst__li2bpl105: int;

const {:string "Couldn't register class association for port %wZ\n"} unique strConst__li2bpl92: int;

const {:string "Couldn't set class association for port %wZ\n"} unique strConst__li2bpl93: int;

const {:string "Count: %x  Addr: 0x%x\n"} unique strConst__li2bpl59: int;

const {:string "Cyclom-Y\\Port"} unique strConst__li2bpl161: int;

const {:string "CyyFinishStartDevice got NULL pDevExt\n"} unique strConst__li2bpl115: int;

const {:string "CyyGetRegistryKeyValue PortResources failed - %x\n"} unique strConst__li2bpl111: int;

const {:string "CyyGetRegistryKeyValue PortResourcesTr failed - %x\n"} unique strConst__li2bpl112: int;

const {:string "CyyRelinquishPowerPolicy"} unique strConst__li2bpl124: int;

const {:string "CyySkipExternalNaming"} unique strConst__li2bpl86: int;

const {:string "DPC's drained: %x\n"} unique strConst__li2bpl61: int;

const {:string "Deleting Link %wZ\n"} unique strConst__li2bpl104: int;

const {:string "DevicePowerState\n"} unique strConst__li2bpl22: int;

const {:string "Dispatch entry for: %x\n"} unique strConst__li2bpl6: int;

const {:string "DosDevices"} unique strConst__li2bpl90: int;

const {:string "DosName is %wZ\n"} unique strConst__li2bpl91: int;

const {:string "Draining DPC's: %x\n"} unique strConst__li2bpl62: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around CD1400 registers\n"} unique strConst__li2bpl32: int;

const {:string "Error in config record for %wZ\n------  Runtime memory wraps around physical memory\n"} unique strConst__li2bpl30: int;

const {:string "Error in config record for %wZ\n------  board memory wraps around physical memory\n"} unique strConst__li2bpl31: int;

const {:string "External Naming Failed - Status %x\n"} unique strConst__li2bpl118: int;

const {:string "FALSE"} unique strConst__li2bpl52: int;

const {:string "Getting PortName/Identifier failed - %x\n"} unique strConst__li2bpl100: int;

const {:string "Going to power state D0\n"} unique strConst__li2bpl25: int;

const {:string "Going to power state D3\n"} unique strConst__li2bpl24: int;

const {:string "Got IRP_MN_CANCEL_REMOVE_DEVICE Irp "} unique strConst__li2bpl125: int;

const {:string "Got IRP_MN_CANCEL_STOP_DEVICE Irp "} unique strConst__li2bpl126: int;

const {:string "Got IRP_MN_EJECT Irp\n"} unique strConst__li2bpl132: int;

const {:string "Got IRP_MN_FILTER_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl153: int;

const {:string "Got IRP_MN_POWER_SEQUENCE Irp\n"} unique strConst__li2bpl17: int;

const {:string "Got IRP_MN_QUERY_DEVICE_CAPABILITIES IRP\n"} unique strConst__li2bpl139: int;

const {:string "Got IRP_MN_QUERY_DEVICE_RELATIONS Irp\n"} unique strConst__li2bpl127: int;

const {:string "Got IRP_MN_QUERY_ID Irp\n"} unique strConst__li2bpl159: int;

const {:string "Got IRP_MN_QUERY_INTERFACE Irp\n"} unique strConst__li2bpl128: int;

const {:string "Got IRP_MN_QUERY_POWER Irp\n"} unique strConst__li2bpl19: int;

const {:string "Got IRP_MN_QUERY_REMOVE_DEVICE Irp "} unique strConst__li2bpl150: int;

const {:string "Got IRP_MN_QUERY_RESOURCE_REQUIREMENTS Irp\n"} unique strConst__li2bpl129: int;

const {:string "Got IRP_MN_QUERY_STOP_DEVICE Irp "} unique strConst__li2bpl147: int;

const {:string "Got IRP_MN_READ_CONFIG Irp\n"} unique strConst__li2bpl130: int;

const {:string "Got IRP_MN_REMOVE_DEVICE Irp "} unique strConst__li2bpl149: int;

const {:string "Got IRP_MN_SET_LOCK Irp\n"} unique strConst__li2bpl133: int;

const {:string "Got IRP_MN_SET_POWER Irp\n"} unique strConst__li2bpl18: int;

const {:string "Got IRP_MN_START_DEVICE Irp\n"} unique strConst__li2bpl151: int;

const {:string "Got IRP_MN_STOP_DEVICE Irp "} unique strConst__li2bpl148: int;

const {:string "Got IRP_MN_SURPRISE_REMOVAL Irp "} unique strConst__li2bpl134: int;

const {:string "Got IRP_MN_WAIT_WAKE Irp\n"} unique strConst__li2bpl16: int;

const {:string "Got IRP_MN_WRITE_CONFIG Irp\n"} unique strConst__li2bpl131: int;

const {:string "ID is sole ID\n"} unique strConst__li2bpl136: int;

const {:string "Identifier"} unique strConst__li2bpl88: int;

const {:string "In CyyCancelWait\n"} unique strConst__li2bpl178: int;

const {:string "In CyyClose\n"} unique strConst__li2bpl60: int;

const {:string "In CyyCreateOpen\n"} unique strConst__li2bpl56: int;

const {:string "In CyyGotoPowerState\n"} unique strConst__li2bpl14: int;

const {:string "In CyySetPowerD3\n"} unique strConst__li2bpl26: int;

const {:string "In CyyStartMask\n"} unique strConst__li2bpl186: int;

const {:string "In CyyUndoExternalNaming for extension: %x of port %wZ\n"} unique strConst__li2bpl103: int;

const {:string "In Ioctl processing for set mask\n"} unique strConst__li2bpl10: int;

const {:string "In Ioctl processing for wait mask\n"} unique strConst__li2bpl7: int;

const {:string "Initializing for configuration record of %wZ\n"} unique strConst__li2bpl40: int;

const {:string "Invalid Bus type %x\n"} unique strConst__li2bpl71: int;

const {:string "Invalid size fo the buffer %d\n"} unique strConst__li2bpl11: int;

const {:string "Invalid size for the buffer %d\n"} unique strConst__li2bpl9: int;

const {:string "IoConnectInterrupt Args:\nInterrupt           %x\nOurIsr              %x\nOurIsrContext       %x\nNULL\nVector              %x\nIrql                %x\nInterruptMode       %x\nInterruptShareable  %x\nProcessorAffinity   %x\nFALSE\n"} unique strConst__li2bpl120: int;

const {:string "IoOpenDeviceRegistryKey failed - %x \n"} unique strConst__li2bpl66: int;

const {:string "It is a bug to pend Irp without checking Irp->Cancel"} unique strConst__li2bpl162: int;

const {:string "Leaving CyyGotoPowerState\n"} unique strConst__li2bpl15: int;

const {:string "List has %x lists (including alternatives)\n"} unique strConst__li2bpl154: int;

const {:string "List has %x resources in it\n"} unique strConst__li2bpl155: int;

const {:string "Mapping power capabilities\n"} unique strConst__li2bpl140: int;

const {:string "Matched to %x\n"} unique strConst__li2bpl37: int;

const {:string "Not doing external naming -- state is %x\n"} unique strConst__li2bpl117: int;

const {:string "Perhaps another mask irp was found in the queue\n------- %x/%x <- values should be the same\n"} unique strConst__li2bpl182: int;

const {:string "Port index too large %x\n"} unique strConst__li2bpl70: int;

const {:string "PortIndex"} unique strConst__li2bpl69: int;

const {:string "PortName"} unique strConst__li2bpl87: int;

const {:string "PortResources"} unique strConst__li2bpl109: int;

const {:string "PortResourcesTr"} unique strConst__li2bpl110: int;

const {:string "Read name %wZ\n"} unique strConst__li2bpl106: int;

const {:string "Release - disconnecting interrupt %X\n"} unique strConst__li2bpl49: int;

const {:string "Release - freeing multi context\n"} unique strConst__li2bpl51: int;

const {:string "Runtime Memory address: %x\n"} unique strConst__li2bpl85: int;

const {:string "RxFIFO"} unique strConst__li2bpl67: int;

const {:string "SERIALCOMM"} unique strConst__li2bpl94: int;

const {:string "STARTMASK - CurrentMaskIrp: %x\n"} unique strConst__li2bpl179: int;

const {:string "Sharing Board Memory for device %x\n"} unique strConst__li2bpl158: int;

const {:string "Sharing Runtime Memory for device %x\n"} unique strConst__li2bpl157: int;

const {:string "Starting or queuing set mask irp %x\n"} unique strConst__li2bpl12: int;

const {:string "Starting or queuing wait mask irp%x\n"} unique strConst__li2bpl8: int;

const {:string "SystemPowerState\n"} unique strConst__li2bpl21: int;

const {:string "TR resource pointer is %x\n"} unique strConst__li2bpl65: int;

const {:string "TRUE"} unique strConst__li2bpl53: int;

const {:string "There aren't that many of those\nbusses on this system,%x\n"} unique strConst__li2bpl72: int;

const {:string "TxFIFO"} unique strConst__li2bpl68: int;

const {:string "UNKNOWN PowerState\n"} unique strConst__li2bpl20: int;

const {:string "Unknown mask %x\n"} unique strConst__li2bpl13: int;

const {:string "Unstalling Irp 0x%x with 0x%x\n"} unique strConst__li2bpl166: int;

const {:string "WaitIrp is invalid\n------- IsrWaitMask: %x\n------- CurrentWaitIrp: %x\n"} unique strConst__li2bpl183: int;

const {:string "\\"} unique strConst__li2bpl89: int;

const {:string "caller"} unique strConst__li2bpl191: int;

const {:string "entering CyyGetPortInfo\n"} unique strConst__li2bpl63: int;

const {:string "entering CyyStartDevice\n"} unique strConst__li2bpl107: int;

const {:string "error with IoCallDriver %x\n"} unique strConst__li2bpl108: int;

const {:string "failing; device open\n"} unique strConst__li2bpl152: int;

const {:string "for device %x\n"} unique strConst__li2bpl135: int;

const {:string "leaving CyyFinishStartDevice\n"} unique strConst__li2bpl114: int;

const {:string "pDevExt: Interrupt %x\n-------               OurIsr %x\n"} unique strConst__li2bpl116: int;

const {:string "resource pointer is %x\n"} unique strConst__li2bpl64: int;

const {:allocated} li2bplFunctionConstant113: int;

axiom li2bplFunctionConstant113 == 113;

const {:allocated} li2bplFunctionConstant125: int;

axiom li2bplFunctionConstant125 == 125;

const {:allocated} li2bplFunctionConstant126: int;

axiom li2bplFunctionConstant126 == 126;

const {:allocated} li2bplFunctionConstant127: int;

axiom li2bplFunctionConstant127 == 127;

const {:allocated} li2bplFunctionConstant128: int;

axiom li2bplFunctionConstant128 == 128;

const {:allocated} li2bplFunctionConstant129: int;

axiom li2bplFunctionConstant129 == 129;

const {:allocated} li2bplFunctionConstant130: int;

axiom li2bplFunctionConstant130 == 130;

const {:allocated} li2bplFunctionConstant131: int;

axiom li2bplFunctionConstant131 == 131;

const {:allocated} li2bplFunctionConstant144: int;

axiom li2bplFunctionConstant144 == 144;

const {:allocated} li2bplFunctionConstant149: int;

axiom li2bplFunctionConstant149 == 149;

const {:allocated} li2bplFunctionConstant151: int;

axiom li2bplFunctionConstant151 == 151;

const {:allocated} li2bplFunctionConstant161: int;

axiom li2bplFunctionConstant161 == 161;

const {:allocated} li2bplFunctionConstant177: int;

axiom li2bplFunctionConstant177 == 177;

const {:allocated} li2bplFunctionConstant178: int;

axiom li2bplFunctionConstant178 == 178;

const {:allocated} li2bplFunctionConstant179: int;

axiom li2bplFunctionConstant179 == 179;

const {:allocated} li2bplFunctionConstant180: int;

axiom li2bplFunctionConstant180 == 180;

const {:allocated} li2bplFunctionConstant181: int;

axiom li2bplFunctionConstant181 == 181;

const {:allocated} li2bplFunctionConstant182: int;

axiom li2bplFunctionConstant182 == 182;

const {:allocated} li2bplFunctionConstant194: int;

axiom li2bplFunctionConstant194 == 194;

const {:allocated} li2bplFunctionConstant195: int;

axiom li2bplFunctionConstant195 == 195;

const {:allocated} li2bplFunctionConstant196: int;

axiom li2bplFunctionConstant196 == 196;

const {:allocated} li2bplFunctionConstant197: int;

axiom li2bplFunctionConstant197 == 197;

const {:allocated} li2bplFunctionConstant198: int;

axiom li2bplFunctionConstant198 == 198;

const {:allocated} li2bplFunctionConstant199: int;

axiom li2bplFunctionConstant199 == 199;

const {:allocated} li2bplFunctionConstant200: int;

axiom li2bplFunctionConstant200 == 200;

const {:allocated} li2bplFunctionConstant201: int;

axiom li2bplFunctionConstant201 == 201;

const {:allocated} li2bplFunctionConstant202: int;

axiom li2bplFunctionConstant202 == 202;

const {:allocated} li2bplFunctionConstant203: int;

axiom li2bplFunctionConstant203 == 203;

const {:allocated} li2bplFunctionConstant204: int;

axiom li2bplFunctionConstant204 == 204;

const {:allocated} li2bplFunctionConstant205: int;

axiom li2bplFunctionConstant205 == 205;

const {:allocated} li2bplFunctionConstant218: int;

axiom li2bplFunctionConstant218 == 218;

const {:allocated} li2bplFunctionConstant226: int;

axiom li2bplFunctionConstant226 == 226;

const {:allocated} li2bplFunctionConstant227: int;

axiom li2bplFunctionConstant227 == 227;

const {:allocated} li2bplFunctionConstant228: int;

axiom li2bplFunctionConstant228 == 228;

const {:allocated} li2bplFunctionConstant229: int;

axiom li2bplFunctionConstant229 == 229;

const {:allocated} li2bplFunctionConstant230: int;

axiom li2bplFunctionConstant230 == 230;

const {:allocated} li2bplFunctionConstant231: int;

axiom li2bplFunctionConstant231 == 231;

const {:allocated} li2bplFunctionConstant232: int;

axiom li2bplFunctionConstant232 == 232;

const {:allocated} li2bplFunctionConstant233: int;

axiom li2bplFunctionConstant233 == 233;

const {:allocated} li2bplFunctionConstant234: int;

axiom li2bplFunctionConstant234 == 234;

const {:allocated} li2bplFunctionConstant236: int;

axiom li2bplFunctionConstant236 == 236;

const {:allocated} li2bplFunctionConstant284: int;

axiom li2bplFunctionConstant284 == 284;

const {:allocated} li2bplFunctionConstant285: int;

axiom li2bplFunctionConstant285 == 285;

const {:allocated} li2bplFunctionConstant289: int;

axiom li2bplFunctionConstant289 == 289;

const {:allocated} li2bplFunctionConstant290: int;

axiom li2bplFunctionConstant290 == 290;

const {:allocated} li2bplFunctionConstant295: int;

axiom li2bplFunctionConstant295 == 295;

const {:allocated} li2bplFunctionConstant327: int;

axiom li2bplFunctionConstant327 == 327;

const {:allocated} li2bplFunctionConstant334: int;

axiom li2bplFunctionConstant334 == 334;

const {:allocated} li2bplFunctionConstant335: int;

axiom li2bplFunctionConstant335 == 335;

const {:allocated} li2bplFunctionConstant336: int;

axiom li2bplFunctionConstant336 == 336;

const {:allocated} li2bplFunctionConstant337: int;

axiom li2bplFunctionConstant337 == 337;

const {:allocated} li2bplFunctionConstant338: int;

axiom li2bplFunctionConstant338 == 338;

const {:allocated} li2bplFunctionConstant339: int;

axiom li2bplFunctionConstant339 == 339;

const {:allocated} li2bplFunctionConstant355: int;

axiom li2bplFunctionConstant355 == 355;

const {:allocated} li2bplFunctionConstant356: int;

axiom li2bplFunctionConstant356 == 356;

const {:allocated} li2bplFunctionConstant357: int;

axiom li2bplFunctionConstant357 == 357;

const {:allocated} li2bplFunctionConstant358: int;

axiom li2bplFunctionConstant358 == 358;

const {:allocated} li2bplFunctionConstant360: int;

axiom li2bplFunctionConstant360 == 360;

const {:allocated} li2bplFunctionConstant361: int;

axiom li2bplFunctionConstant361 == 361;

const {:allocated} li2bplFunctionConstant362: int;

axiom li2bplFunctionConstant362 == 362;

const {:allocated} li2bplFunctionConstant363: int;

axiom li2bplFunctionConstant363 == 363;

const {:allocated} li2bplFunctionConstant364: int;

axiom li2bplFunctionConstant364 == 364;

const {:allocated} li2bplFunctionConstant365: int;

axiom li2bplFunctionConstant365 == 365;

const {:allocated} li2bplFunctionConstant366: int;

axiom li2bplFunctionConstant366 == 366;

const {:allocated} li2bplFunctionConstant367: int;

axiom li2bplFunctionConstant367 == 367;

const {:allocated} li2bplFunctionConstant368: int;

axiom li2bplFunctionConstant368 == 368;

const {:allocated} li2bplFunctionConstant369: int;

axiom li2bplFunctionConstant369 == 369;

const {:allocated} li2bplFunctionConstant370: int;

axiom li2bplFunctionConstant370 == 370;

const {:allocated} li2bplFunctionConstant371: int;

axiom li2bplFunctionConstant371 == 371;

const {:allocated} li2bplFunctionConstant372: int;

axiom li2bplFunctionConstant372 == 372;

const {:allocated} li2bplFunctionConstant373: int;

axiom li2bplFunctionConstant373 == 373;

const {:allocated} li2bplFunctionConstant374: int;

axiom li2bplFunctionConstant374 == 374;

const {:allocated} li2bplFunctionConstant375: int;

axiom li2bplFunctionConstant375 == 375;

const {:allocated} li2bplFunctionConstant376: int;

axiom li2bplFunctionConstant376 == 376;

const {:allocated} li2bplFunctionConstant423: int;

axiom li2bplFunctionConstant423 == 423;

const {:allocated} li2bplFunctionConstant424: int;

axiom li2bplFunctionConstant424 == 424;

const {:allocated} li2bplFunctionConstant437: int;

axiom li2bplFunctionConstant437 == 437;

const {:allocated} li2bplFunctionConstant458: int;

axiom li2bplFunctionConstant458 == 458;

const {:allocated} li2bplFunctionConstant459: int;

axiom li2bplFunctionConstant459 == 459;

const {:allocated} li2bplFunctionConstant465: int;

axiom li2bplFunctionConstant465 == 465;

const {:allocated} li2bplFunctionConstant515: int;

axiom li2bplFunctionConstant515 == 515;

const {:allocated} li2bplFunctionConstant517: int;

axiom li2bplFunctionConstant517 == 517;

const {:allocated} li2bplFunctionConstant520: int;

axiom li2bplFunctionConstant520 == 520;

implementation {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#0(actual_Extension_12: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_541: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} sdv_543: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Extension_12: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_507: int;
  var vslice_dummy_var_508: int;
  var vslice_dummy_var_509: int;
  var vslice_dummy_var_510: int;
  var vslice_dummy_var_511: int;
  var vslice_dummy_var_234: int;
  var vslice_dummy_var_235: int;

  anon0:
    call {:si_unique_call 1970} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 1971} vslice_dummy_var_507 := __HAVOC_malloc(4);
    Extension_12 := actual_Extension_12;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 1972} Tmp_581 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_234;
    call {:si_unique_call 1973} sdv_541 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_234);
    assume {:nonnull} sdv_541 != 0;
    assume sdv_541 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_541)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 1974} vslice_dummy_var_508 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 1975} CyyRundownIrpRefs(CurrentOpIrp_3, IntervalTimer_1, TotalTimer_1, Extension_12);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_235;
    call {:si_unique_call 1976} sdv_543 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_235);
    assume {:nonnull} sdv_543 != 0;
    assume sdv_543 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_585;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_582;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 1977} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_581 := strConst__li2bpl3;
    call {:si_unique_call 1978} vslice_dummy_var_511 := CyyDbgPrintEx(9, Tmp_581);
    call {:si_unique_call 1979} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1980} CyyIRPEpilogue(Extension_12);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 1981} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant128;
    call {:si_unique_call 1982} CyyGetNextImmediate(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  L37:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant376;
    call {:si_unique_call 1983} vslice_dummy_var_510 := CyyStartRead(Extension_12);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 1984} vslice_dummy_var_509 := CyyStartWrite#0(Extension_12);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 1985} CyyGetNextIrp(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant198;
    call {:si_unique_call 1986} CyyGetNextWrite(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 1987} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#0(actual_Extension_12: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#1(actual_Extension_12: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int)
{
  var {:pointer} s_p_e_c_i_a_l_13: int;
  var {:pointer} sdv_541: int;
  var {:pointer} Tmp_581: int;
  var {:pointer} newIrp: int;
  var {:pointer} Tmp_582: int;
  var {:scalar} s_p_e_c_i_a_l_14: int;
  var {:pointer} sdv_543: int;
  var {:pointer} oldIrp: int;
  var {:pointer} Tmp_585: int;
  var {:pointer} Extension_12: int;
  var {:scalar} SynchRoutine: int;
  var {:scalar} IrqlForRelease: int;
  var {:scalar} StatusToUse: int;
  var {:pointer} CurrentOpIrp_3: int;
  var {:pointer} QueueToProcess_1: int;
  var {:pointer} IntervalTimer_1: int;
  var {:pointer} TotalTimer_1: int;
  var {:scalar} Starter_1: int;
  var {:scalar} GetNextIrp: int;
  var {:scalar} RefType: int;
  var vslice_dummy_var_512: int;
  var vslice_dummy_var_513: int;
  var vslice_dummy_var_514: int;
  var vslice_dummy_var_515: int;
  var vslice_dummy_var_516: int;
  var vslice_dummy_var_236: int;
  var vslice_dummy_var_237: int;

  anon0:
    call {:si_unique_call 1988} newIrp := __HAVOC_malloc(4);
    call {:si_unique_call 1989} vslice_dummy_var_512 := __HAVOC_malloc(4);
    Extension_12 := actual_Extension_12;
    SynchRoutine := actual_SynchRoutine;
    IrqlForRelease := actual_IrqlForRelease;
    StatusToUse := actual_StatusToUse;
    CurrentOpIrp_3 := actual_CurrentOpIrp_3;
    QueueToProcess_1 := actual_QueueToProcess_1;
    IntervalTimer_1 := actual_IntervalTimer_1;
    TotalTimer_1 := actual_TotalTimer_1;
    Starter_1 := actual_Starter_1;
    GetNextIrp := actual_GetNextIrp;
    RefType := actual_RefType;
    call {:si_unique_call 1990} Tmp_581 := __HAVOC_malloc(72);
    s_p_e_c_i_a_l_14 := RefType;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_236;
    call {:si_unique_call 1991} sdv_541 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_236);
    assume {:nonnull} sdv_541 != 0;
    assume sdv_541 > 0;
    s_p_e_c_i_a_l_13 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_541)));
    assume {:nonnull} s_p_e_c_i_a_l_13 != 0;
    assume s_p_e_c_i_a_l_13 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} SynchRoutine != 0;
    call {:si_unique_call 1992} vslice_dummy_var_513 := KeSynchronizeExecution(0, SynchRoutine, 0);
    goto L12;

  L12:
    call {:si_unique_call 1993} CyyRundownIrpRefs(CurrentOpIrp_3, IntervalTimer_1, TotalTimer_1, Extension_12);
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc vslice_dummy_var_237;
    call {:si_unique_call 1994} sdv_543 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_237);
    assume {:nonnull} sdv_543 != 0;
    assume sdv_543 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_585;
    assume {:nonnull} Tmp_585 != 0;
    assume Tmp_585 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} StatusToUse == -1073741536;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc Tmp_582;
    assume {:nonnull} Tmp_582 != 0;
    assume Tmp_582 > 0;
    goto L28;

  L28:
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    havoc oldIrp;
    assume {:nonnull} CurrentOpIrp_3 != 0;
    assume CurrentOpIrp_3 > 0;
    call {:si_unique_call 1995} IoReleaseCancelSpinLock(IrqlForRelease);
    Tmp_581 := strConst__li2bpl3;
    call {:si_unique_call 1996} vslice_dummy_var_516 := CyyDbgPrintEx(9, Tmp_581);
    call {:si_unique_call 1997} sdv_IoCompleteRequest(0, 2);
    call {:si_unique_call 1998} CyyIRPEpilogue(Extension_12);
    goto L1;

  L1:
    return;

  anon18_Then:
    call {:si_unique_call 1999} IoReleaseCancelSpinLock(IrqlForRelease);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant128;
    call {:si_unique_call 2000} CyyGetNextImmediate(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  L37:
    assume {:nonnull} newIrp != 0;
    assume newIrp > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant376;
    call {:si_unique_call 2001} vslice_dummy_var_515 := CyyStartRead(Extension_12);
    goto L1;

  anon21_Then:
    assume {:IndirectCall} true;
    assume Starter_1 == li2bplFunctionConstant194;
    call {:si_unique_call 2002} vslice_dummy_var_514 := CyyStartWrite#1(Extension_12);
    goto L1;

  anon20_Then:
    goto L1;

  anon22_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant144;
    call {:si_unique_call 2003} CyyGetNextIrp(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  anon19_Then:
    assume {:IndirectCall} true;
    assume GetNextIrp == li2bplFunctionConstant198;
    call {:si_unique_call 2004} CyyGetNextWrite(CurrentOpIrp_3, QueueToProcess_1, newIrp, 1, Extension_12);
    goto L37;

  anon24_Then:
    assume {:partition} StatusToUse != -1073741536;
    goto L28;

  anon17_Then:
    call {:si_unique_call 2005} IoReleaseCancelSpinLock(IrqlForRelease);
    goto L1;

  anon23_Then:
    assume {:partition} SynchRoutine == 0;
    goto L12;
}



procedure {:origName "CyyTryToCompleteCurrent"} CyyTryToCompleteCurrent#1(actual_Extension_12: int, actual_SynchRoutine: int, actual_IrqlForRelease: int, actual_StatusToUse: int, actual_CurrentOpIrp_3: int, actual_QueueToProcess_1: int, actual_IntervalTimer_1: int, actual_TotalTimer_1: int, actual_Starter_1: int, actual_GetNextIrp: int, actual_RefType: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartWrite"} CyyStartWrite#0(actual_Extension_17: int) returns (Tmp_633: int)
{
  var {:pointer} Tmp_634: int;
  var {:pointer} s_p_e_c_i_a_l_19: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_20: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} sdv_590: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} sdv_591: int;
  var {:pointer} sdv_592: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_21: int;
  var {:pointer} sdv_593: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_595: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_638: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} Tmp_640: int;
  var {:scalar} s_p_e_c_i_a_l_24: int;
  var {:pointer} Extension_17: int;
  var vslice_dummy_var_517: int;
  var vslice_dummy_var_518: int;
  var vslice_dummy_var_519: int;
  var vslice_dummy_var_520: int;
  var vslice_dummy_var_521: int;
  var vslice_dummy_var_238: int;
  var vslice_dummy_var_239: int;
  var vslice_dummy_var_240: int;
  var vslice_dummy_var_241: int;
  var vslice_dummy_var_242: int;
  var vslice_dummy_var_243: int;
  var vslice_dummy_var_244: int;

  anon0:
    call {:si_unique_call 2006} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2007} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2008} Timeouts_1 := __HAVOC_malloc(20);
    Extension_17 := actual_Extension_17;
    call {:si_unique_call 2009} Tmp_635 := __HAVOC_malloc(76);
    call {:si_unique_call 2010} Tmp_637 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_637 := strConst__li2bpl176;
    call {:si_unique_call 2011} vslice_dummy_var_520 := CyyDbgPrintEx(2, Tmp_637);
    goto L14;

  L14:
    call {:si_unique_call 2012} Tmp_634, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_636, OldIrql_9, sdv_591, sdv_595, Tmp_638, Tmp_640 := CyyStartWrite#0_loop_L14(Tmp_634, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_636, OldIrql_9, sdv_591, NewIrp_3, sdv_595, Tmp_638, Timeouts_1, Tmp_640, Extension_17);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2037} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2038} IoAcquireCancelSpinLock(Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_238;
    call {:si_unique_call 2013} sdv_591 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_238);
    assume {:nonnull} sdv_591 != 0;
    assume sdv_591 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_239;
    call {:si_unique_call 2014} sdv_593 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_239);
    assume {:nonnull} sdv_593 != 0;
    assume sdv_593 > 0;
    s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_593)));
    assume {:nonnull} s_p_e_c_i_a_l_19 != 0;
    assume s_p_e_c_i_a_l_19 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_639;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume false;
    return;

  anon26_Then:
    call {:si_unique_call 2015} IoReleaseCancelSpinLock(OldIrql_9);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2016} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2017} sdv_KeAcquireSpinLock(0, Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2018} sdv_KeReleaseSpinLock(0, OldIrql_9);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_240;
    call {:si_unique_call 2019} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_240);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_640;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_241;
    call {:si_unique_call 2020} sdv_595 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_241);
    assume {:nonnull} sdv_595 != 0;
    assume sdv_595 > 0;
    call {:si_unique_call 2021} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2022} IoAcquireCancelSpinLock(Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_636;
    call {:si_unique_call 2023} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2024} IoReleaseCancelSpinLock(OldIrql_9);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_638;
    assume {:nonnull} Tmp_638 != 0;
    assume Tmp_638 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 2025} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_17), WriteQueue__CYY_DEVICE_EXTENSION(Extension_17), NewIrp_3, 1, Extension_17);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L79;

  L79:
    Tmp_635 := strConst__li2bpl175;
    call {:si_unique_call 2026} vslice_dummy_var_521 := CyyDbgPrintEx(2, Tmp_635);
    Tmp_633 := FirstStatus;
    return;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon33_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2027} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant196);
    goto L136;

  L136:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_242;
    call {:si_unique_call 2028} vslice_dummy_var_519 := sdv_IoSetCancelRoutine(vslice_dummy_var_242, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_23 := 2;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_243;
    call {:si_unique_call 2029} sdv_590 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_243);
    assume {:nonnull} sdv_590 != 0;
    assume sdv_590 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_590)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 2030} vslice_dummy_var_518 := CyySetTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_17), TotalTime_1, TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_17), Extension_17);
    s_p_e_c_i_a_l_24 := 4;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_244;
    call {:si_unique_call 2031} sdv_592 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_244);
    assume {:nonnull} sdv_592 != 0;
    assume sdv_592 > 0;
    s_p_e_c_i_a_l_20 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_592)));
    assume {:nonnull} s_p_e_c_i_a_l_20 != 0;
    assume s_p_e_c_i_a_l_20 > 0;
    goto L99;

  L99:
    call {:si_unique_call 2032} vslice_dummy_var_517 := KeSynchronizeExecution(0, li2bplFunctionConstant197, 0);
    call {:si_unique_call 2033} IoReleaseCancelSpinLock(OldIrql_9);
    goto L79;

  anon36_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon32_Then:
    goto L136;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2034} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L139;

  L139:
    call {:si_unique_call 2035} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon31_Then:
    goto L139;

  anon34_Then:
    Tmp_640 := 1;
    goto L59;

  anon27_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L60;

  anon28_Then:
    goto L51;

  anon25_Then:
    call {:si_unique_call 2036} IoReleaseCancelSpinLock(OldIrql_9);
    goto L40;
}



procedure {:origName "CyyStartWrite"} CyyStartWrite#0(actual_Extension_17: int) returns (Tmp_633: int);
  modifies alloc, IrpCancelChecked, IoSetCancelRoutineCalled, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:origName "CyyStartWrite"} CyyStartWrite#1(actual_Extension_17: int) returns (Tmp_633: int)
{
  var {:pointer} Tmp_634: int;
  var {:pointer} s_p_e_c_i_a_l_19: int;
  var {:scalar} FirstStatus: int;
  var {:scalar} TotalTime_1: int;
  var {:scalar} SetFirstStatus: int;
  var {:pointer} s_p_e_c_i_a_l_20: int;
  var {:pointer} Tmp_635: int;
  var {:scalar} UseATimer_1: int;
  var {:pointer} IrpSp_1: int;
  var {:pointer} Tmp_636: int;
  var {:pointer} sdv_590: int;
  var {:scalar} OldIrql_9: int;
  var {:pointer} sdv_591: int;
  var {:pointer} sdv_592: int;
  var {:pointer} NewIrp_3: int;
  var {:scalar} s_p_e_c_i_a_l_21: int;
  var {:pointer} sdv_593: int;
  var {:pointer} Tmp_637: int;
  var {:pointer} sdv_595: int;
  var {:pointer} s_p_e_c_i_a_l_22: int;
  var {:pointer} Tmp_638: int;
  var {:scalar} s_p_e_c_i_a_l_23: int;
  var {:pointer} Tmp_639: int;
  var {:scalar} Timeouts_1: int;
  var {:scalar} Tmp_640: int;
  var {:scalar} s_p_e_c_i_a_l_24: int;
  var {:pointer} Extension_17: int;
  var vslice_dummy_var_522: int;
  var vslice_dummy_var_523: int;
  var vslice_dummy_var_524: int;
  var vslice_dummy_var_525: int;
  var vslice_dummy_var_526: int;
  var vslice_dummy_var_245: int;
  var vslice_dummy_var_246: int;
  var vslice_dummy_var_247: int;
  var vslice_dummy_var_248: int;
  var vslice_dummy_var_249: int;
  var vslice_dummy_var_250: int;
  var vslice_dummy_var_251: int;

  anon0:
    call {:si_unique_call 2039} TotalTime_1 := __HAVOC_malloc(20);
    call {:si_unique_call 2040} NewIrp_3 := __HAVOC_malloc(4);
    call {:si_unique_call 2041} Timeouts_1 := __HAVOC_malloc(20);
    Extension_17 := actual_Extension_17;
    call {:si_unique_call 2042} Tmp_635 := __HAVOC_malloc(76);
    call {:si_unique_call 2043} Tmp_637 := __HAVOC_malloc(80);
    SetFirstStatus := 0;
    Tmp_637 := strConst__li2bpl176;
    call {:si_unique_call 2044} vslice_dummy_var_525 := CyyDbgPrintEx(2, Tmp_637);
    goto L14;

  L14:
    call {:si_unique_call 2045} Tmp_634, s_p_e_c_i_a_l_19, FirstStatus, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_636, OldIrql_9, sdv_591, s_p_e_c_i_a_l_21, sdv_593, sdv_595, Tmp_638, Tmp_639, Tmp_640 := CyyStartWrite#1_loop_L14(Tmp_634, s_p_e_c_i_a_l_19, FirstStatus, TotalTime_1, SetFirstStatus, UseATimer_1, IrpSp_1, Tmp_636, OldIrql_9, sdv_591, NewIrp_3, s_p_e_c_i_a_l_21, sdv_593, sdv_595, Tmp_638, Tmp_639, Timeouts_1, Tmp_640, Extension_17);
    goto L14_last;

  L14_last:
    call {:si_unique_call 2071} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2072} IoAcquireCancelSpinLock(Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_245;
    call {:si_unique_call 2046} sdv_591 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_245);
    assume {:nonnull} sdv_591 != 0;
    assume sdv_591 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_246;
    call {:si_unique_call 2047} sdv_593 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_246);
    assume {:nonnull} sdv_593 != 0;
    assume sdv_593 > 0;
    s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_593)));
    assume {:nonnull} s_p_e_c_i_a_l_19 != 0;
    assume s_p_e_c_i_a_l_19 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_639;
    assume {:nonnull} Tmp_639 != 0;
    assume Tmp_639 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 2048} CyyTryToCompleteCurrent#0(Extension_17, li2bplFunctionConstant195, OldIrql_9, -1073741816, CurrentXoffIrp__CYY_DEVICE_EXTENSION(Extension_17), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(Extension_17), 0, 0, 16);
    goto L40;

  L40:
    UseATimer_1 := 0;
    call {:si_unique_call 2049} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2050} sdv_KeAcquireSpinLock(0, Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    call {:si_unique_call 2051} sdv_KeReleaseSpinLock(0, OldIrql_9);
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L51;

  L51:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_247;
    call {:si_unique_call 2052} IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_247);
    UseATimer_1 := 1;
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} IrpSp_1 != 0;
    assume IrpSp_1 > 0;
    havoc Tmp_640;
    goto L59;

  L59:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    assume {:nonnull} TotalTime_1 != 0;
    assume TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_248;
    call {:si_unique_call 2053} sdv_595 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_248);
    assume {:nonnull} sdv_595 != 0;
    assume sdv_595 > 0;
    call {:si_unique_call 2054} Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    call {:si_unique_call 2055} IoAcquireCancelSpinLock(Tmp_634);
    assume {:nonnull} Tmp_634 != 0;
    assume Tmp_634 > 0;
    havoc OldIrql_9;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_636;
    call {:si_unique_call 2056} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} Tmp_636 != 0;
    assume Tmp_636 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    call {:si_unique_call 2057} IoReleaseCancelSpinLock(OldIrql_9);
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc Tmp_638;
    assume {:nonnull} Tmp_638 != 0;
    assume Tmp_638 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 2058} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(Extension_17), WriteQueue__CYY_DEVICE_EXTENSION(Extension_17), NewIrp_3, 1, Extension_17);
    assume {:nonnull} NewIrp_3 != 0;
    assume NewIrp_3 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    goto L79;

  L79:
    Tmp_635 := strConst__li2bpl175;
    call {:si_unique_call 2059} vslice_dummy_var_526 := CyyDbgPrintEx(2, Tmp_635);
    Tmp_633 := FirstStatus;
    return;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    assume false;
    return;

  anon35_Then:
    assume {:partition} SetFirstStatus == 0;
    FirstStatus := -1073741536;
    SetFirstStatus := 1;
    goto L75;

  anon33_Then:
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} SetFirstStatus != 0;
    goto L87;

  L87:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2060} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant196);
    goto L136;

  L136:
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_249;
    call {:si_unique_call 2061} vslice_dummy_var_524 := sdv_IoSetCancelRoutine(vslice_dummy_var_249, li2bplFunctionConstant196);
    s_p_e_c_i_a_l_23 := 2;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_250;
    call {:si_unique_call 2062} sdv_590 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_250);
    assume {:nonnull} sdv_590 != 0;
    assume sdv_590 > 0;
    s_p_e_c_i_a_l_22 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_590)));
    assume {:nonnull} s_p_e_c_i_a_l_22 != 0;
    assume s_p_e_c_i_a_l_22 > 0;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} UseATimer_1 != 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    call {:si_unique_call 2063} vslice_dummy_var_523 := CyySetTimer(WriteRequestTotalTimer__CYY_DEVICE_EXTENSION(Extension_17), TotalTime_1, TotalWriteTimeoutDpc__CYY_DEVICE_EXTENSION(Extension_17), Extension_17);
    s_p_e_c_i_a_l_24 := 4;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    havoc vslice_dummy_var_251;
    call {:si_unique_call 2064} sdv_592 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_251);
    assume {:nonnull} sdv_592 != 0;
    assume sdv_592 > 0;
    s_p_e_c_i_a_l_20 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(sdv_592)));
    assume {:nonnull} s_p_e_c_i_a_l_20 != 0;
    assume s_p_e_c_i_a_l_20 > 0;
    goto L99;

  L99:
    call {:si_unique_call 2065} vslice_dummy_var_522 := KeSynchronizeExecution(0, li2bplFunctionConstant197, 0);
    call {:si_unique_call 2066} IoReleaseCancelSpinLock(OldIrql_9);
    goto L79;

  anon36_Then:
    assume {:partition} UseATimer_1 == 0;
    goto L99;

  anon32_Then:
    goto L136;

  anon29_Then:
    assume {:partition} SetFirstStatus == 0;
    assume {:nonnull} Extension_17 != 0;
    assume Extension_17 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2067} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L139;

  L139:
    call {:si_unique_call 2068} sdv_IoMarkIrpPending(0);
    SetFirstStatus := 1;
    FirstStatus := 259;
    goto L87;

  anon31_Then:
    goto L139;

  anon34_Then:
    Tmp_640 := 1;
    goto L59;

  anon27_Then:
    assume {:nonnull} Timeouts_1 != 0;
    assume Timeouts_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L60;

  anon28_Then:
    goto L51;

  anon26_Then:
    call {:si_unique_call 2069} IoReleaseCancelSpinLock(OldIrql_9);
    goto L40;

  anon25_Then:
    call {:si_unique_call 2070} IoReleaseCancelSpinLock(OldIrql_9);
    goto L40;
}



procedure {:origName "CyyStartWrite"} CyyStartWrite#1(actual_Extension_17: int) returns (Tmp_633: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 0 ==> IrpCancelChecked != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



function POW2(a: int) : bool;

axiom (forall x: int :: { POW2(x) } x == 0 || x == 1 || x == 2 || x == 4 || x == 8 || x == 16 || x == 32 || x == 64 || x == 128 || x == 256 || x == 512 || x == 1024 || x == 2048 || x == 4096 || x == 8192 || x == 16384 || x == 32768 || x == 65536 || x == 131072 || x == 262144 || x == 524288 || x == 1048576 || x == 2097152 || x == 4194304 || x == 8388608 || x == 16777216 || x == 33554432 || x == 67108864 || x == 134217728 || x == 268435456 || x == 536870912 || x == 1073741824 || x == 2147483648 || x == -2147483648 ==> POW2(x));

axiom (forall f: int :: { BAND(0, f) } BAND(0, f) == 0);

axiom (forall f: int :: { BAND(f, f) } BAND(f, f) == f);

axiom (forall f: int :: { BOR(0, f) } BOR(0, f) == f);

axiom (forall f: int :: { BOR(f, 0) } BOR(f, 0) == f);

axiom (forall x: int, f: int :: { BAND(x, f) } POW2(x) && POW2(f) && x != f ==> BAND(x, f) == 0);

axiom (forall a: int, b: int, c: int :: { BOR(a, BOR(b, c)) } BOR(a, BOR(b, c)) == BOR(BOR(a, b), c));

axiom (forall a: int, b: int, c: int :: { BAND(a, BOR(b, c)) } BAND(a, BOR(b, c)) == BAND(BOR(b, c), a));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(x, f1), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(x, f1), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(x, f1), f2) == f1));

axiom (forall x: int, f1: int, f2: int :: { BAND(BAND(x, BNOT(f1)), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == BAND(x, f2)) && (f1 == f2 && POW2(f1) && POW2(f2) ==> BAND(BAND(x, BNOT(f1)), f2) == 0));

axiom (forall x: int, f1: int, f2: int :: { BAND(BOR(f1, x), f2) } (f1 != f2 && POW2(f1) && POW2(f2) ==> BAND(BOR(f1, x), f2) == BAND(x, f2)) && (f1 == f2 ==> BAND(BOR(f1, x), f2) == f1));

axiom (forall x: int, y: int, f2: int :: { BAND(BAND(x, y), f2) } POW2(f2) ==> BAND(BAND(x, y), f2) == 0 || BAND(BAND(x, y), f2) == BAND(x, f2));

implementation CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6: int, in_nextQuery: int)
{

  entry:
    goto L35, exit;

  exit:
    return;

  L35:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_6 != 0;
    assume in_s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then;

  anon21_Then:
    goto anon21_Then_dummy;

  anon21_Then_dummy:
    call {:si_unique_call 2073} {:si_old_unique_call 1} CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6, in_nextQuery);
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L35(in_s_p_e_c_i_a_l_6: int, in_nextQuery: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyCDCmd_loop_L30(in_Tmp_87: int, in_chip: int, in_oneSecond: int, in_sdv_92: int, in_s_p_e_c_i_a_l_6: int, in_difference: int, in_value: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_87: int, out_sdv_92: int, out_s_p_e_c_i_a_l_6: int, out_value: int)
{

  entry:
    out_Tmp_87, out_sdv_92, out_s_p_e_c_i_a_l_6, out_value := in_Tmp_87, in_sdv_92, in_s_p_e_c_i_a_l_6, in_value;
    goto L30, exit;

  exit:
    return;

  L30:
    goto anon15_Else;

  anon15_Else:
    assume {:partition} out_value != 0;
    out_Tmp_87 := KeTickCount;
    assume {:nonnull} out_Tmp_87 != 0;
    assume out_Tmp_87 > 0;
    havoc out_s_p_e_c_i_a_l_6;
    goto L35;

  L35:
    call {:si_unique_call 2076} CyyCDCmd_loop_L35(out_s_p_e_c_i_a_l_6, in_nextQuery);
    goto L35_last;

  L35_last:
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} out_s_p_e_c_i_a_l_6 != 0;
    assume out_s_p_e_c_i_a_l_6 > 0;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_nextQuery != 0;
    assume in_nextQuery > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    call {:si_unique_call 2075} out_sdv_92 := corral_nondet();
    assume {:nonnull} in_difference != 0;
    assume in_difference > 0;
    assume {:nonnull} in_oneSecond != 0;
    assume in_oneSecond > 0;
    goto anon17_Then;

  anon17_Then:
    call {:si_unique_call 2074} out_value := corral_nondet();
    goto anon17_Then_dummy;

  anon17_Then_dummy:
    call {:si_unique_call 2077} {:si_old_unique_call 1} out_Tmp_87, out_sdv_92, out_s_p_e_c_i_a_l_6, out_value := CyyCDCmd_loop_L30(out_Tmp_87, in_chip, in_oneSecond, out_sdv_92, out_s_p_e_c_i_a_l_6, in_difference, out_value, in_startOfSpin, in_nextQuery);
    return;

  anon21_Then:
    assume false;
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L30(in_Tmp_87: int, in_chip: int, in_oneSecond: int, in_sdv_92: int, in_s_p_e_c_i_a_l_6: int, in_difference: int, in_value: int, in_startOfSpin: int, in_nextQuery: int) returns (out_Tmp_87: int, out_sdv_92: int, out_s_p_e_c_i_a_l_6: int, out_value: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5: int, in_startOfSpin: int)
{

  entry:
    goto L18, exit;

  exit:
    return;

  L18:
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    assume {:nonnull} in_s_p_e_c_i_a_l_5 != 0;
    assume in_s_p_e_c_i_a_l_5 > 0;
    assume {:nonnull} in_startOfSpin != 0;
    assume in_startOfSpin > 0;
    goto anon20_Then;

  anon20_Then:
    goto anon20_Then_dummy;

  anon20_Then_dummy:
    call {:si_unique_call 2078} {:si_old_unique_call 1} CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5, in_startOfSpin);
    return;
}



procedure {:LoopProcedure} CyyCDCmd_loop_L18(in_s_p_e_c_i_a_l_5: int, in_startOfSpin: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyFindInitController_loop_L84(in_sdv_129: int, in_pCurDevObj: int, in_sdv_141: int, in_pExtension: int, in_oldIrql: int, in_Tmp_154: int, in_PConfig: int) returns (out_sdv_129: int, out_pCurDevObj: int, out_sdv_141: int, out_pExtension: int, out_oldIrql: int, out_Tmp_154: int)
{
  var vslice_dummy_var_252: int;
  var vslice_dummy_var_253: int;
  var vslice_dummy_var_254: int;
  var vslice_dummy_var_255: int;

  entry:
    out_sdv_129, out_pCurDevObj, out_sdv_141, out_pExtension, out_oldIrql, out_Tmp_154 := in_sdv_129, in_pCurDevObj, in_sdv_141, in_pExtension, in_oldIrql, in_Tmp_154;
    goto L84, exit;

  exit:
    return;

  L84:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_PConfig != 0;
    assume in_PConfig > 0;
    assume {:nonnull} out_pExtension != 0;
    assume out_pExtension > 0;
    havoc vslice_dummy_var_252;
    havoc vslice_dummy_var_253;
    havoc vslice_dummy_var_254;
    havoc vslice_dummy_var_255;
    call {:si_unique_call 2083} out_sdv_129 := CyyMemCompare(vslice_dummy_var_252, vslice_dummy_var_253, vslice_dummy_var_254, vslice_dummy_var_255);
    goto anon52_Then;

  anon52_Then:
    assume {:partition} out_sdv_129 != 0;
    goto L85;

  L85:
    call {:si_unique_call 2081} out_Tmp_154 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    call {:si_unique_call 2082} sdv_KeAcquireSpinLock(0, out_Tmp_154);
    assume {:nonnull} out_Tmp_154 != 0;
    assume out_Tmp_154 > 0;
    havoc out_oldIrql;
    assume {:nonnull} out_pCurDevObj != 0;
    assume out_pCurDevObj > 0;
    havoc out_pCurDevObj;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    call {:si_unique_call 2080} out_sdv_141 := sdv_containing_record(out_pCurDevObj, 4);
    out_pExtension := out_sdv_141;
    goto L134;

  L134:
    call {:si_unique_call 2079} sdv_KeReleaseSpinLock(0, out_oldIrql);
    goto anon57_Else;

  anon57_Else:
    goto anon58_Else;

  anon58_Else:
    goto anon58_Else_dummy;

  anon58_Else_dummy:
    call {:si_unique_call 2084} {:si_old_unique_call 1} out_sdv_129, out_pCurDevObj, out_sdv_141, out_pExtension, out_oldIrql, out_Tmp_154 := CyyFindInitController_loop_L84(out_sdv_129, out_pCurDevObj, out_sdv_141, out_pExtension, out_oldIrql, out_Tmp_154, in_PConfig);
    return;

  anon60_Then:
    goto L134;

  anon51_Then:
    goto L85;

  anon50_Then:
    goto L85;

  anon49_Then:
    goto L85;
}



procedure {:LoopProcedure} CyyFindInitController_loop_L84(in_sdv_129: int, in_pCurDevObj: int, in_sdv_141: int, in_pExtension: int, in_oldIrql: int, in_Tmp_154: int, in_PConfig: int) returns (out_sdv_129: int, out_pCurDevObj: int, out_sdv_141: int, out_pExtension: int, out_oldIrql: int, out_Tmp_154: int);
  modifies alloc;
  free ensures out_sdv_129 == 0 || out_sdv_129 == 2 || out_sdv_129 == 1 || out_sdv_129 == in_sdv_129;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyClose_loop_L114(in_extension_2: int, in_vslice_dummy_var_149: int) returns (out_vslice_dummy_var_149: int)
{

  entry:
    out_vslice_dummy_var_149 := in_vslice_dummy_var_149;
    goto L114, exit;

  exit:
    return;

  L114:
    call {:si_unique_call 2085} out_vslice_dummy_var_149 := KeDelayExecutionThread(0, 0, 0);
    assume {:nonnull} in_extension_2 != 0;
    assume in_extension_2 > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2086} {:si_old_unique_call 1} out_vslice_dummy_var_149 := CyyClose_loop_L114(in_extension_2, out_vslice_dummy_var_149);
    return;
}



procedure {:LoopProcedure} CyyClose_loop_L114(in_extension_2: int, in_vslice_dummy_var_149: int) returns (out_vslice_dummy_var_149: int);
  free ensures out_vslice_dummy_var_149 == 0 || out_vslice_dummy_var_149 == -1073741823 || out_vslice_dummy_var_149 == in_vslice_dummy_var_149;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyClose_loop_L82(in_i: int, in_vslice_dummy_var_146: int) returns (out_i: int, out_vslice_dummy_var_146: int)
{

  entry:
    out_i, out_vslice_dummy_var_146 := in_i, in_vslice_dummy_var_146;
    goto L82, exit;

  exit:
    return;

  L82:
    assume {:CounterLoop 12} {:Counter "i"} true;
    goto anon27_Else;

  anon27_Else:
    assume {:partition} 12 > out_i;
    call {:si_unique_call 2087} out_vslice_dummy_var_146 := KeDelayExecutionThread(0, 0, 0);
    out_i := out_i + 1;
    goto anon27_Else_dummy;

  anon27_Else_dummy:
    havoc out_i;
    return;
}



procedure {:LoopProcedure} CyyClose_loop_L82(in_i: int, in_vslice_dummy_var_146: int) returns (out_i: int, out_vslice_dummy_var_146: int);
  free ensures out_vslice_dummy_var_146 == 0 || out_vslice_dummy_var_146 == -1073741823 || out_vslice_dummy_var_146 == in_vslice_dummy_var_146;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyGetPortInfo_loop_L52(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L52, exit;

  exit:
    return;

  L52:
    goto anon50_Else;

  anon50_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    goto L62;

  L62:
    out_i_1 := out_i_1 + 1;
    goto L62_dummy;

  L62_dummy:
    call {:si_unique_call 2088} {:si_old_unique_call 1} out_i_1 := CyyGetPortInfo_loop_L52(out_i_1, in_count, in_pPartialResourceDesc, in_PConfig_1);
    return;

  anon66_Then:
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon52_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto L62;

  anon51_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    assume {:nonnull} in_pPartialResourceDesc != 0;
    assume in_pPartialResourceDesc > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    goto L62;

  anon69_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    goto L62;
}



procedure {:LoopProcedure} CyyGetPortInfo_loop_L52(in_i_1: int, in_count: int, in_pPartialResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyGetPortInfo_loop_L79(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int)
{

  entry:
    out_i_1 := in_i_1;
    goto L79, exit;

  exit:
    return;

  L79:
    goto anon53_Else;

  anon53_Else:
    assume {:partition} in_count > out_i_1;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L88;

  L88:
    out_i_1 := out_i_1 + 1;
    goto L88_dummy;

  L88_dummy:
    call {:si_unique_call 2089} {:si_old_unique_call 1} out_i_1 := CyyGetPortInfo_loop_L79(out_i_1, in_count, in_pPartialTrResourceDesc, in_PConfig_1);
    return;

  anon67_Then:
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;

  anon55_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;

  anon54_Then:
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    assume {:nonnull} in_PConfig_1 != 0;
    assume in_PConfig_1 > 0;
    assume {:nonnull} in_pPartialTrResourceDesc != 0;
    assume in_pPartialTrResourceDesc > 0;
    goto L88;
}



procedure {:LoopProcedure} CyyGetPortInfo_loop_L79(in_i_1: int, in_count: int, in_pPartialTrResourceDesc: int, in_PConfig_1: int) returns (out_i_1: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyPnpDispatch_loop_L179(in_allocLen: int, in_sdv_461: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int)
{

  entry:
    out_allocLen, out_curStrLen := in_allocLen, in_curStrLen;
    goto L179, exit;

  exit:
    return;

  L179:
    out_curStrLen := in_sdv_461;
    goto anon183_Else;

  anon183_Else:
    assume {:partition} out_curStrLen != 0;
    out_allocLen := out_allocLen + out_curStrLen * 2 + 2;
    goto anon183_Else_dummy;

  anon183_Else_dummy:
    havoc out_allocLen;
    return;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L179(in_allocLen: int, in_sdv_461: int, in_curStrLen: int, in_curStr: int) returns (out_allocLen: int, out_curStrLen: int);
  free ensures out_curStrLen == in_sdv_461 || out_curStrLen == in_curStrLen;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_pDevExt_10: int, in_Tmp_454: int, in_Tmp_459: int, in_Tmp_461: int, in_pLowerDevObj_4: int, in_gotInt: int, in_pResDesc: int, in_Tmp_485: int, in_Tmp_488: int, in_j: int, in_Tmp_500: int, in_gotRuntime: int, in_vslice_dummy_var_322: int, in_vslice_dummy_var_323: int, in_vslice_dummy_var_324: int, in_vslice_dummy_var_325: int) returns (out_gotMemory: int, out_Tmp_454: int, out_Tmp_459: int, out_Tmp_461: int, out_gotInt: int, out_pResDesc: int, out_Tmp_485: int, out_Tmp_488: int, out_j: int, out_Tmp_500: int, out_gotRuntime: int, out_vslice_dummy_var_322: int, out_vslice_dummy_var_323: int, out_vslice_dummy_var_324: int, out_vslice_dummy_var_325: int)
{

  entry:
    out_gotMemory, out_Tmp_454, out_Tmp_459, out_Tmp_461, out_gotInt, out_pResDesc, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325 := in_gotMemory, in_Tmp_454, in_Tmp_459, in_Tmp_461, in_gotInt, in_pResDesc, in_Tmp_485, in_Tmp_488, in_j, in_Tmp_500, in_gotRuntime, in_vslice_dummy_var_322, in_vslice_dummy_var_323, in_vslice_dummy_var_324, in_vslice_dummy_var_325;
    goto L353, exit;

  exit:
    return;

  L353:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon137_Else;

  anon137_Else:
    out_Tmp_459 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_500;
    out_pResDesc := out_Tmp_500 + out_Tmp_459 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L370;

  L370:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_gotMemory != 0;
    goto anon141_Else;

  anon141_Else:
    assume {:partition} out_gotInt == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    goto L371_dummy;

  L371_dummy:
    call {:si_unique_call 2094} {:si_old_unique_call 1} out_gotMemory, out_Tmp_454, out_Tmp_459, out_Tmp_461, out_gotInt, out_pResDesc, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325 := CyyPnpDispatch_loop_L353(out_gotMemory, in_pResList, in_pDevExt_10, out_Tmp_454, out_Tmp_459, out_Tmp_461, in_pLowerDevObj_4, out_gotInt, out_pResDesc, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325);
    return;

  anon140_Then:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  anon139_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon173_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_485 := strConst__li2bpl157;
    call {:si_unique_call 2090} out_vslice_dummy_var_324 := CyyDbgPrintEx(12, out_Tmp_485);
    goto L370;

  anon138_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_488 := strConst__li2bpl158;
    call {:si_unique_call 2091} out_vslice_dummy_var_325 := CyyDbgPrintEx(12, out_Tmp_488);
    goto L370;

  anon174_Then:
    out_gotInt := 1;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_454 := strConst__li2bpl156;
    call {:si_unique_call 2092} out_vslice_dummy_var_323 := CyyDbgPrintEx(12, out_Tmp_454);
    goto L370;

  anon181_Then:
    goto L370;

  anon180_Then:
    out_Tmp_461 := strConst__li2bpl137;
    call {:si_unique_call 2093} out_vslice_dummy_var_322 := CyyDbgPrintEx(12, out_Tmp_461);
    goto L370;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L353(in_gotMemory: int, in_pResList: int, in_pDevExt_10: int, in_Tmp_454: int, in_Tmp_459: int, in_Tmp_461: int, in_pLowerDevObj_4: int, in_gotInt: int, in_pResDesc: int, in_Tmp_485: int, in_Tmp_488: int, in_j: int, in_Tmp_500: int, in_gotRuntime: int, in_vslice_dummy_var_322: int, in_vslice_dummy_var_323: int, in_vslice_dummy_var_324: int, in_vslice_dummy_var_325: int) returns (out_gotMemory: int, out_Tmp_454: int, out_Tmp_459: int, out_Tmp_461: int, out_gotInt: int, out_pResDesc: int, out_Tmp_485: int, out_Tmp_488: int, out_j: int, out_Tmp_500: int, out_gotRuntime: int, out_vslice_dummy_var_322: int, out_vslice_dummy_var_323: int, out_vslice_dummy_var_324: int, out_vslice_dummy_var_325: int);
  free ensures out_gotMemory == 1 || out_gotMemory == in_gotMemory;
  free ensures out_gotInt == 1 || out_gotInt == in_gotInt;
  free ensures out_gotRuntime == 1 || out_gotRuntime == in_gotRuntime;
  free ensures out_vslice_dummy_var_322 == 0 || out_vslice_dummy_var_322 == in_vslice_dummy_var_322;
  free ensures out_vslice_dummy_var_323 == 0 || out_vslice_dummy_var_323 == in_vslice_dummy_var_323;
  free ensures out_vslice_dummy_var_324 == 0 || out_vslice_dummy_var_324 == in_vslice_dummy_var_324;
  free ensures out_vslice_dummy_var_325 == 0 || out_vslice_dummy_var_325 == in_vslice_dummy_var_325;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_pDevExt_10: int, in_Tmp_452: int, in_Tmp_454: int, in_Tmp_459: int, in_Tmp_461: int, in_pLowerDevObj_4: int, in_gotInt: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_485: int, in_Tmp_488: int, in_j: int, in_Tmp_500: int, in_gotRuntime: int, in_vslice_dummy_var_321: int, in_vslice_dummy_var_322: int, in_vslice_dummy_var_323: int, in_vslice_dummy_var_324: int, in_vslice_dummy_var_325: int) returns (out_gotMemory: int, out_Tmp_452: int, out_Tmp_454: int, out_Tmp_459: int, out_Tmp_461: int, out_gotInt: int, out_pResDesc: int, out_listNum: int, out_Tmp_485: int, out_Tmp_488: int, out_j: int, out_Tmp_500: int, out_gotRuntime: int, out_vslice_dummy_var_321: int, out_vslice_dummy_var_322: int, out_vslice_dummy_var_323: int, out_vslice_dummy_var_324: int, out_vslice_dummy_var_325: int)
{

  entry:
    out_gotMemory, out_Tmp_452, out_Tmp_454, out_Tmp_459, out_Tmp_461, out_gotInt, out_pResDesc, out_listNum, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_321, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325 := in_gotMemory, in_Tmp_452, in_Tmp_454, in_Tmp_459, in_Tmp_461, in_gotInt, in_pResDesc, in_listNum, in_Tmp_485, in_Tmp_488, in_j, in_Tmp_500, in_gotRuntime, in_vslice_dummy_var_321, in_vslice_dummy_var_322, in_vslice_dummy_var_323, in_vslice_dummy_var_324, in_vslice_dummy_var_325;
    goto L344, exit;

  exit:
    return;

  L344:
    assume {:nonnull} in_pReqList != 0;
    assume in_pReqList > 0;
    goto anon136_Else;

  anon136_Else:
    out_gotRuntime := 0;
    out_gotMemory := 0;
    out_gotInt := 0;
    out_Tmp_452 := strConst__li2bpl155;
    call {:si_unique_call 2096} out_vslice_dummy_var_321 := CyyDbgPrintEx(12, out_Tmp_452);
    out_j := 0;
    goto L353;

  L353:
    call {:si_unique_call 2095} out_gotMemory, out_Tmp_454, out_Tmp_459, out_Tmp_461, out_gotInt, out_pResDesc, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325 := CyyPnpDispatch_loop_L353(out_gotMemory, in_pResList, in_pDevExt_10, out_Tmp_454, out_Tmp_459, out_Tmp_461, in_pLowerDevObj_4, out_gotInt, out_pResDesc, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325);
    goto L353_last;

  L353_last:
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    goto anon137_Then, anon137_Else;

  anon137_Else:
    out_Tmp_459 := out_j;
    assume {:nonnull} in_pResList != 0;
    assume in_pResList > 0;
    havoc out_Tmp_500;
    out_pResDesc := out_Tmp_500 + out_Tmp_459 * 380;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon180_Then, anon180_Else;

  anon180_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon174_Then, anon174_Else;

  anon174_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon173_Then, anon173_Else;

  anon173_Else:
    goto L370;

  L370:
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} out_gotRuntime != 0;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} out_gotMemory != 0;
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} out_gotInt == 0;
    goto L371;

  L371:
    out_j := out_j + 1;
    assume false;
    return;

  anon141_Then:
    assume {:partition} out_gotInt != 0;
    goto L354;

  L354:
    out_listNum := out_listNum + 1;
    goto L354_dummy;

  L354_dummy:
    call {:si_unique_call 2101} {:si_old_unique_call 1} out_gotMemory, out_Tmp_452, out_Tmp_454, out_Tmp_459, out_Tmp_461, out_gotInt, out_pResDesc, out_listNum, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_321, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325 := CyyPnpDispatch_loop_L344(out_gotMemory, in_pResList, in_pDevExt_10, out_Tmp_452, out_Tmp_454, out_Tmp_459, out_Tmp_461, in_pLowerDevObj_4, out_gotInt, out_pResDesc, out_listNum, in_pReqList, out_Tmp_485, out_Tmp_488, out_j, out_Tmp_500, out_gotRuntime, out_vslice_dummy_var_321, out_vslice_dummy_var_322, out_vslice_dummy_var_323, out_vslice_dummy_var_324, out_vslice_dummy_var_325);
    return;

  anon140_Then:
    assume {:partition} out_gotMemory == 0;
    goto L371;

  anon139_Then:
    assume {:partition} out_gotRuntime == 0;
    goto L371;

  anon173_Then:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    out_gotRuntime := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_485 := strConst__li2bpl157;
    call {:si_unique_call 2097} out_vslice_dummy_var_324 := CyyDbgPrintEx(12, out_Tmp_485);
    goto L370;

  anon138_Then:
    out_gotMemory := 1;
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_488 := strConst__li2bpl158;
    call {:si_unique_call 2098} out_vslice_dummy_var_325 := CyyDbgPrintEx(12, out_Tmp_488);
    goto L370;

  anon174_Then:
    out_gotInt := 1;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    goto anon181_Then, anon181_Else;

  anon181_Else:
    assume {:nonnull} out_pResDesc != 0;
    assume out_pResDesc > 0;
    out_Tmp_454 := strConst__li2bpl156;
    call {:si_unique_call 2099} out_vslice_dummy_var_323 := CyyDbgPrintEx(12, out_Tmp_454);
    goto L370;

  anon181_Then:
    goto L370;

  anon180_Then:
    out_Tmp_461 := strConst__li2bpl137;
    call {:si_unique_call 2100} out_vslice_dummy_var_322 := CyyDbgPrintEx(12, out_Tmp_461);
    goto L370;

  anon137_Then:
    goto L354;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L344(in_gotMemory: int, in_pResList: int, in_pDevExt_10: int, in_Tmp_452: int, in_Tmp_454: int, in_Tmp_459: int, in_Tmp_461: int, in_pLowerDevObj_4: int, in_gotInt: int, in_pResDesc: int, in_listNum: int, in_pReqList: int, in_Tmp_485: int, in_Tmp_488: int, in_j: int, in_Tmp_500: int, in_gotRuntime: int, in_vslice_dummy_var_321: int, in_vslice_dummy_var_322: int, in_vslice_dummy_var_323: int, in_vslice_dummy_var_324: int, in_vslice_dummy_var_325: int) returns (out_gotMemory: int, out_Tmp_452: int, out_Tmp_454: int, out_Tmp_459: int, out_Tmp_461: int, out_gotInt: int, out_pResDesc: int, out_listNum: int, out_Tmp_485: int, out_Tmp_488: int, out_j: int, out_Tmp_500: int, out_gotRuntime: int, out_vslice_dummy_var_321: int, out_vslice_dummy_var_322: int, out_vslice_dummy_var_323: int, out_vslice_dummy_var_324: int, out_vslice_dummy_var_325: int);
  free ensures out_gotMemory == 1 || out_gotMemory == 0 || out_gotMemory == in_gotMemory;
  free ensures out_gotInt == 1 || out_gotInt == 0 || out_gotInt == in_gotInt;
  free ensures out_gotRuntime == 1 || out_gotRuntime == 0 || out_gotRuntime == in_gotRuntime;
  free ensures out_vslice_dummy_var_321 == 0 || out_vslice_dummy_var_321 == in_vslice_dummy_var_321;
  free ensures out_vslice_dummy_var_322 == 0 || out_vslice_dummy_var_322 == in_vslice_dummy_var_322;
  free ensures out_vslice_dummy_var_323 == 0 || out_vslice_dummy_var_323 == in_vslice_dummy_var_323;
  free ensures out_vslice_dummy_var_324 == 0 || out_vslice_dummy_var_324 == in_vslice_dummy_var_324;
  free ensures out_vslice_dummy_var_325 == 0 || out_vslice_dummy_var_325 == in_vslice_dummy_var_325;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:SIextraRecBound 5} CyyPnpDispatch_loop_L465(in_Tmp_441: int, in_pDevExt_10: int, in_cap: int, in_Tmp_477: int, in_Tmp_478: int, in_pDevCaps: int, in_Tmp_516: int) returns (out_Tmp_441: int, out_cap: int, out_Tmp_477: int, out_Tmp_478: int, out_Tmp_516: int)
{

  entry:
    out_Tmp_441, out_cap, out_Tmp_477, out_Tmp_478, out_Tmp_516 := in_Tmp_441, in_cap, in_Tmp_477, in_Tmp_478, in_Tmp_516;
    goto L465, exit;

  exit:
    return;

  L465:
    assume {:CounterLoop 5} {:Counter "cap"} true;
    goto anon143_Else;

  anon143_Else:
    assume {:partition} 7 > out_cap;
    out_Tmp_516 := out_cap;
    assume {:nonnull} in_pDevExt_10 != 0;
    assume in_pDevExt_10 > 0;
    havoc out_Tmp_478;
    out_Tmp_441 := out_cap;
    assume {:nonnull} in_pDevCaps != 0;
    assume in_pDevCaps > 0;
    havoc out_Tmp_477;
    assume {:nonnull} out_Tmp_477 != 0;
    assume out_Tmp_477 > 0;
    assume {:nonnull} out_Tmp_478 != 0;
    assume out_Tmp_478 > 0;
    out_cap := out_cap + 1;
    goto anon143_Else_dummy;

  anon143_Else_dummy:
    call {:si_unique_call 2102} {:si_old_unique_call 1} out_Tmp_441, out_cap, out_Tmp_477, out_Tmp_478, out_Tmp_516 := CyyPnpDispatch_loop_L465(out_Tmp_441, in_pDevExt_10, out_cap, out_Tmp_477, out_Tmp_478, in_pDevCaps, out_Tmp_516);
    return;
}



procedure {:LoopProcedure} CyyPnpDispatch_loop_L465(in_Tmp_441: int, in_pDevExt_10: int, in_cap: int, in_Tmp_477: int, in_Tmp_478: int, in_pDevCaps: int, in_Tmp_516: int) returns (out_Tmp_441: int, out_cap: int, out_Tmp_477: int, out_Tmp_478: int, out_Tmp_516: int);
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyStartPurge_loop_L5(in_Tmp_534: int, in_Tmp_535: int, in_Mask_2: int, in_Tmp_536: int, in_OldIrql_4: int, in_NewIrp_1: int, in_Tmp_537: int, in_Tmp_538: int, in_Extension_10: int, in_vslice_dummy_var_347: int) returns (out_Tmp_534: int, out_Tmp_535: int, out_Mask_2: int, out_Tmp_536: int, out_OldIrql_4: int, out_Tmp_537: int, out_Tmp_538: int, out_vslice_dummy_var_347: int)
{
  var vslice_dummy_var_256: int;
  var vslice_dummy_var_257: int;
  var vslice_dummy_var_258: int;

  entry:
    out_Tmp_534, out_Tmp_535, out_Mask_2, out_Tmp_536, out_OldIrql_4, out_Tmp_537, out_Tmp_538, out_vslice_dummy_var_347 := in_Tmp_534, in_Tmp_535, in_Mask_2, in_Tmp_536, in_OldIrql_4, in_Tmp_537, in_Tmp_538, in_vslice_dummy_var_347;
    goto L5, exit;

  exit:
    return;

  L5:
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc out_Tmp_538;
    assume {:nonnull} out_Tmp_538 != 0;
    assume out_Tmp_538 > 0;
    havoc out_Tmp_537;
    assume {:nonnull} out_Tmp_537 != 0;
    assume out_Tmp_537 > 0;
    havoc out_Mask_2;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} BAND(out_Mask_2, 1) != 0;
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc vslice_dummy_var_257;
    call {:si_unique_call 2109} CyyKillAllReadsOrWrites(vslice_dummy_var_257, WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_10), CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_10));
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc vslice_dummy_var_258;
    call {:si_unique_call 2110} CyyKillAllReadsOrWrites(vslice_dummy_var_258, WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_10), CurrentXoffIrp__CYY_DEVICE_EXTENSION(in_Extension_10));
    goto L7;

  L7:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} BAND(out_Mask_2, 2) != 0;
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc vslice_dummy_var_256;
    call {:si_unique_call 2108} CyyKillAllReadsOrWrites(vslice_dummy_var_256, ReadQueue__CYY_DEVICE_EXTENSION(in_Extension_10), CurrentReadIrp__CYY_DEVICE_EXTENSION(in_Extension_10));
    goto L14;

  L14:
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} BAND(out_Mask_2, 8) != 0;
    call {:si_unique_call 2104} out_Tmp_536 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    call {:si_unique_call 2105} sdv_KeAcquireSpinLock(0, out_Tmp_536);
    assume {:nonnull} out_Tmp_536 != 0;
    assume out_Tmp_536 > 0;
    havoc out_OldIrql_4;
    call {:si_unique_call 2106} out_vslice_dummy_var_347 := KeSynchronizeExecution(0, li2bplFunctionConstant437, 0);
    call {:si_unique_call 2107} sdv_KeReleaseSpinLock(0, out_OldIrql_4);
    goto L18;

  L18:
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc out_Tmp_535;
    assume {:nonnull} out_Tmp_535 != 0;
    assume out_Tmp_535 > 0;
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    havoc out_Tmp_534;
    assume {:nonnull} out_Tmp_534 != 0;
    assume out_Tmp_534 > 0;
    assume {:nonnull} in_Extension_10 != 0;
    assume in_Extension_10 > 0;
    call {:si_unique_call 2103} CyyGetNextIrp(CurrentPurgeIrp__CYY_DEVICE_EXTENSION(in_Extension_10), PurgeQueue__CYY_DEVICE_EXTENSION(in_Extension_10), in_NewIrp_1, 1, in_Extension_10);
    assume {:nonnull} in_NewIrp_1 != 0;
    assume in_NewIrp_1 > 0;
    goto anon11_Then;

  anon11_Then:
    goto anon11_Then_dummy;

  anon11_Then_dummy:
    call {:si_unique_call 2111} {:si_old_unique_call 1} out_Tmp_534, out_Tmp_535, out_Mask_2, out_Tmp_536, out_OldIrql_4, out_Tmp_537, out_Tmp_538, out_vslice_dummy_var_347 := CyyStartPurge_loop_L5(out_Tmp_534, out_Tmp_535, out_Mask_2, out_Tmp_536, out_OldIrql_4, in_NewIrp_1, out_Tmp_537, out_Tmp_538, in_Extension_10, out_vslice_dummy_var_347);
    return;

  anon10_Then:
    assume {:partition} BAND(out_Mask_2, 8) == 0;
    goto L18;

  anon9_Then:
    assume {:partition} BAND(out_Mask_2, 2) == 0;
    goto L14;

  anon12_Then:
    assume {:partition} BAND(out_Mask_2, 1) == 0;
    goto L7;
}



procedure {:LoopProcedure} CyyStartPurge_loop_L5(in_Tmp_534: int, in_Tmp_535: int, in_Mask_2: int, in_Tmp_536: int, in_OldIrql_4: int, in_NewIrp_1: int, in_Tmp_537: int, in_Tmp_538: int, in_Extension_10: int, in_vslice_dummy_var_347: int) returns (out_Tmp_534: int, out_Tmp_535: int, out_Mask_2: int, out_Tmp_536: int, out_OldIrql_4: int, out_Tmp_537: int, out_Tmp_538: int, out_vslice_dummy_var_347: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_vslice_dummy_var_347 == 1 || out_vslice_dummy_var_347 == 0 || out_vslice_dummy_var_347 == in_vslice_dummy_var_347;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyKillAllStalled_loop_L10(in_currentLastIrp: int, in_Tmp_541: int, in_cancelIrql: int, in_pDevExt_11: int, in_sdv_499: int, in_sdv_500: int, in_cancelRoutine_1: int, in_PDevObj_13: int, in_vslice_dummy_var_350: int) returns (out_currentLastIrp: int, out_Tmp_541: int, out_cancelIrql: int, out_sdv_499: int, out_sdv_500: int, out_cancelRoutine_1: int, out_vslice_dummy_var_350: int)
{
  var vslice_dummy_var_259: int;

  entry:
    out_currentLastIrp, out_Tmp_541, out_cancelIrql, out_sdv_499, out_sdv_500, out_cancelRoutine_1, out_vslice_dummy_var_350 := in_currentLastIrp, in_Tmp_541, in_cancelIrql, in_sdv_499, in_sdv_500, in_cancelRoutine_1, in_vslice_dummy_var_350;
    goto L10, exit;

  exit:
    return;

  L10:
    call {:si_unique_call 2112} out_sdv_499 := sdv_IsListEmpty(0);
    goto anon13_Else;

  anon13_Else:
    assume {:partition} out_sdv_499 == 0;
    assume {:nonnull} in_pDevExt_11 != 0;
    assume in_pDevExt_11 > 0;
    havoc vslice_dummy_var_259;
    call {:si_unique_call 2121} out_sdv_500 := sdv_containing_record(vslice_dummy_var_259, 88);
    out_currentLastIrp := out_sdv_500;
    call {:si_unique_call 2122} out_vslice_dummy_var_350 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    havoc out_cancelRoutine_1;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    assume {:nonnull} out_currentLastIrp != 0;
    assume out_currentLastIrp > 0;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    goto anon14_Then, anon14_Else;

  anon14_Else:
    goto anon15_Then, anon15_Else;

  anon15_Else:
    goto anon16_Then, anon16_Else;

  anon16_Else:
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant196;
    call {:si_unique_call 2115} CyyCancelCurrentWrite(in_PDevObj_13, out_currentLastIrp);
    goto L32;

  L32:
    call {:si_unique_call 2113} out_Tmp_541 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_541 != 0;
    assume out_Tmp_541 > 0;
    call {:si_unique_call 2114} IoAcquireCancelSpinLock(out_Tmp_541);
    assume {:nonnull} out_Tmp_541 != 0;
    assume out_Tmp_541 > 0;
    havoc out_cancelIrql;
    goto L32_dummy;

  L32_dummy:
    call {:si_unique_call 2123} {:si_old_unique_call 1} out_currentLastIrp, out_Tmp_541, out_cancelIrql, out_sdv_499, out_sdv_500, out_cancelRoutine_1, out_vslice_dummy_var_350 := CyyKillAllStalled_loop_L10(out_currentLastIrp, out_Tmp_541, out_cancelIrql, in_pDevExt_11, out_sdv_499, out_sdv_500, out_cancelRoutine_1, in_PDevObj_13, out_vslice_dummy_var_350);
    return;

  anon17_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant199;
    call {:si_unique_call 2116} CyyCancelCurrentXoff(in_PDevObj_13, out_currentLastIrp);
    goto L32;

  anon16_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant125;
    call {:si_unique_call 2117} CyyCancelImmediate(in_PDevObj_13, out_currentLastIrp);
    goto L32;

  anon15_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant149;
    call {:si_unique_call 2118} CyyCancelQueued(in_PDevObj_13, out_currentLastIrp);
    goto L32;

  anon14_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant179;
    call {:si_unique_call 2119} CyyCancelWait(in_PDevObj_13, out_currentLastIrp);
    goto L32;

  anon18_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_1 == li2bplFunctionConstant151;
    call {:si_unique_call 2120} CyyFilterCancelQueued(in_PDevObj_13, out_currentLastIrp);
    goto L32;
}



procedure {:LoopProcedure} CyyKillAllStalled_loop_L10(in_currentLastIrp: int, in_Tmp_541: int, in_cancelIrql: int, in_pDevExt_11: int, in_sdv_499: int, in_sdv_500: int, in_cancelRoutine_1: int, in_PDevObj_13: int, in_vslice_dummy_var_350: int) returns (out_currentLastIrp: int, out_Tmp_541: int, out_cancelIrql: int, out_sdv_499: int, out_sdv_500: int, out_cancelRoutine_1: int, out_vslice_dummy_var_350: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_sdv_499 == 1 || out_sdv_499 == 0 || out_sdv_499 == in_sdv_499;
  free ensures out_vslice_dummy_var_350 == 1 || out_vslice_dummy_var_350 == 0 || out_vslice_dummy_var_350 == in_vslice_dummy_var_350;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyUnstallIrps_loop_L16(in_Tmp_547: int, in_Tmp_548: int, in_sdv_508: int, in_Tmp_549: int, in_oldIrql_5: int, in_pIrpStack_5: int, in_Tmp_551: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_354: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_357: int) returns (out_Tmp_547: int, out_Tmp_548: int, out_sdv_508: int, out_Tmp_549: int, out_oldIrql_5: int, out_pIrpStack_5: int, out_Tmp_551: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_354: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_357: int)
{

  entry:
    out_Tmp_547, out_Tmp_548, out_sdv_508, out_Tmp_549, out_oldIrql_5, out_pIrpStack_5, out_Tmp_551, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357 := in_Tmp_547, in_Tmp_548, in_sdv_508, in_Tmp_549, in_oldIrql_5, in_pIrpStack_5, in_Tmp_551, in_pIrp_1, in_pDevObj_2, in_pDrvObj_1, in_pIrpLink, in_vslice_dummy_var_354, in_vslice_dummy_var_356, in_vslice_dummy_var_357;
    goto L16, exit;

  exit:
    return;

  L16:
    goto anon61_Else;

  anon61_Else:
    call {:si_unique_call 2130} out_sdv_508 := sdv_containing_record(out_pIrpLink, 88);
    out_pIrp_1 := out_sdv_508;
    call {:si_unique_call 2131} out_vslice_dummy_var_356 := sdv_RemoveEntryList(0);
    call {:si_unique_call 2132} out_pIrpStack_5 := sdv_IoGetCurrentIrpStackLocation(out_pIrp_1);
    assume {:nonnull} out_pIrpStack_5 != 0;
    assume out_pIrpStack_5 > 0;
    havoc out_pDevObj_2;
    assume {:nonnull} out_pDevObj_2 != 0;
    assume out_pDevObj_2 > 0;
    havoc out_pDrvObj_1;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume out_pIrp_1 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2129} SLIC_sdv_IoSetCancelRoutine_entry(0, 0);
    goto L141;

  L141:
    call {:si_unique_call 2126} out_vslice_dummy_var_354 := sdv_IoSetCancelRoutine(out_pIrp_1, 0);
    call {:si_unique_call 2127} IoReleaseCancelSpinLock(out_oldIrql_5);
    out_Tmp_547 := strConst__li2bpl166;
    call {:si_unique_call 2128} out_vslice_dummy_var_357 := CyyDbgPrintEx(12, out_Tmp_547);
    assume {:nonnull} out_pIrpStack_5 != 0;
    assume out_pIrpStack_5 > 0;
    havoc out_Tmp_551;
    assume {:nonnull} out_pDrvObj_1 != 0;
    assume out_pDrvObj_1 > 0;
    havoc out_Tmp_549;
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume out_Tmp_551 != 27;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume out_Tmp_551 != 26;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume out_Tmp_551 != 25;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume out_Tmp_551 != 24;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume out_Tmp_551 != 23;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    assume out_Tmp_551 != 22;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    assume out_Tmp_551 != 21;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume out_Tmp_551 != 20;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume out_Tmp_551 != 19;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    assume out_Tmp_551 != 18;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume out_Tmp_551 != 17;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume out_Tmp_551 != 16;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume out_Tmp_551 != 15;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume out_Tmp_551 != 14;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume out_Tmp_551 != 13;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume out_Tmp_551 != 12;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume out_Tmp_551 != 11;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume out_Tmp_551 != 10;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume out_Tmp_551 != 9;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume out_Tmp_551 != 8;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume out_Tmp_551 != 7;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume out_Tmp_551 != 6;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume out_Tmp_551 != 5;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume out_Tmp_551 != 4;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume out_Tmp_551 != 3;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume out_Tmp_551 != 2;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume out_Tmp_551 != 1;
    goto anon90_Then;

  anon90_Then:
    assume out_Tmp_551 == 0;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  L45:
    call {:si_unique_call 2124} out_Tmp_548 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_548 != 0;
    assume out_Tmp_548 > 0;
    call {:si_unique_call 2125} IoAcquireCancelSpinLock(out_Tmp_548);
    assume {:nonnull} out_Tmp_548 != 0;
    assume out_Tmp_548 > 0;
    havoc out_oldIrql_5;
    assume {:nonnull} in_PDevExt_8 != 0;
    assume in_PDevExt_8 > 0;
    havoc out_pIrpLink;
    goto L45_dummy;

  L45_dummy:
    call {:si_unique_call 2133} {:si_old_unique_call 1} out_Tmp_547, out_Tmp_548, out_sdv_508, out_Tmp_549, out_oldIrql_5, out_pIrpStack_5, out_Tmp_551, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357 := CyyUnstallIrps_loop_L16(out_Tmp_547, out_Tmp_548, out_sdv_508, out_Tmp_549, out_oldIrql_5, out_pIrpStack_5, out_Tmp_551, out_pIrp_1, out_pDevObj_2, out_pDrvObj_1, out_pIrpLink, in_PDevExt_8, out_vslice_dummy_var_354, out_vslice_dummy_var_356, out_vslice_dummy_var_357);
    return;

  anon89_Then:
    assume out_Tmp_551 == 1;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon88_Then:
    assume out_Tmp_551 == 2;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon87_Then:
    assume out_Tmp_551 == 3;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon86_Then:
    assume out_Tmp_551 == 4;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon85_Then:
    assume out_Tmp_551 == 5;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon84_Then:
    assume out_Tmp_551 == 6;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon83_Then:
    assume out_Tmp_551 == 7;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon82_Then:
    assume out_Tmp_551 == 8;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon81_Then:
    assume out_Tmp_551 == 9;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon80_Then:
    assume out_Tmp_551 == 10;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon79_Then:
    assume out_Tmp_551 == 11;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon78_Then:
    assume out_Tmp_551 == 12;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon77_Then:
    assume out_Tmp_551 == 13;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon76_Then:
    assume out_Tmp_551 == 14;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon75_Then:
    assume out_Tmp_551 == 15;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon74_Then:
    assume out_Tmp_551 == 16;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon73_Then:
    assume out_Tmp_551 == 17;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon72_Then:
    assume out_Tmp_551 == 18;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon71_Then:
    assume out_Tmp_551 == 19;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon70_Then:
    assume out_Tmp_551 == 20;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon69_Then:
    assume out_Tmp_551 == 21;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon68_Then:
    assume out_Tmp_551 == 22;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon67_Then:
    assume out_Tmp_551 == 23;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon66_Then:
    assume out_Tmp_551 == 24;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon65_Then:
    assume out_Tmp_551 == 25;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon64_Then:
    assume out_Tmp_551 == 26;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon63_Then:
    assume out_Tmp_551 == 27;
    assume {:nonnull} out_Tmp_549 != 0;
    assume out_Tmp_549 > 0;
    goto L45;

  anon62_Then:
    assume !(out_pIrp_1 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L141;
}



procedure {:LoopProcedure} CyyUnstallIrps_loop_L16(in_Tmp_547: int, in_Tmp_548: int, in_sdv_508: int, in_Tmp_549: int, in_oldIrql_5: int, in_pIrpStack_5: int, in_Tmp_551: int, in_pIrp_1: int, in_pDevObj_2: int, in_pDrvObj_1: int, in_pIrpLink: int, in_PDevExt_8: int, in_vslice_dummy_var_354: int, in_vslice_dummy_var_356: int, in_vslice_dummy_var_357: int) returns (out_Tmp_547: int, out_Tmp_548: int, out_sdv_508: int, out_Tmp_549: int, out_oldIrql_5: int, out_pIrpStack_5: int, out_Tmp_551: int, out_pIrp_1: int, out_pDevObj_2: int, out_pDrvObj_1: int, out_pIrpLink: int, out_vslice_dummy_var_354: int, out_vslice_dummy_var_356: int, out_vslice_dummy_var_357: int);
  modifies alloc, IoSetCancelRoutineCalled;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures out_vslice_dummy_var_356 == 1 || out_vslice_dummy_var_356 == 0 || out_vslice_dummy_var_356 == in_vslice_dummy_var_356;
  free ensures out_vslice_dummy_var_357 == 0 || out_vslice_dummy_var_357 == in_vslice_dummy_var_357;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_547: int, in_sdv_548: int, in_cancelRoutine_2: int, in_Tmp_593: int, in_DeviceObject_7: int, in_QueueToClean: int, in_vslice_dummy_var_376: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_547: int, out_sdv_548: int, out_cancelRoutine_2: int, out_Tmp_593: int, out_vslice_dummy_var_376: int)
{
  var vslice_dummy_var_260: int;

  entry:
    out_currentLastIrp_1, out_cancelIrql_1, out_sdv_547, out_sdv_548, out_cancelRoutine_2, out_Tmp_593, out_vslice_dummy_var_376 := in_currentLastIrp_1, in_cancelIrql_1, in_sdv_547, in_sdv_548, in_cancelRoutine_2, in_Tmp_593, in_vslice_dummy_var_376;
    goto L8, exit;

  exit:
    return;

  L8:
    call {:si_unique_call 2134} out_sdv_547 := sdv_IsListEmpty(0);
    goto anon27_Else;

  anon27_Else:
    assume {:partition} out_sdv_547 == 0;
    assume {:nonnull} in_QueueToClean != 0;
    assume in_QueueToClean > 0;
    havoc vslice_dummy_var_260;
    call {:si_unique_call 2143} out_sdv_548 := sdv_containing_record(vslice_dummy_var_260, 88);
    out_currentLastIrp_1 := out_sdv_548;
    call {:si_unique_call 2144} out_vslice_dummy_var_376 := sdv_RemoveEntryList(0);
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    havoc out_cancelRoutine_2;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    assume {:nonnull} out_currentLastIrp_1 != 0;
    assume out_currentLastIrp_1 > 0;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    goto anon33_Then, anon33_Else;

  anon33_Else:
    goto anon34_Then, anon34_Else;

  anon34_Else:
    goto anon35_Then, anon35_Else;

  anon35_Else:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant196;
    call {:si_unique_call 2137} CyyCancelCurrentWrite(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;

  L42:
    call {:si_unique_call 2135} out_Tmp_593 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_593 != 0;
    assume out_Tmp_593 > 0;
    call {:si_unique_call 2136} IoAcquireCancelSpinLock(out_Tmp_593);
    assume {:nonnull} out_Tmp_593 != 0;
    assume out_Tmp_593 > 0;
    havoc out_cancelIrql_1;
    goto L42_dummy;

  L42_dummy:
    call {:si_unique_call 2145} {:si_old_unique_call 1} out_currentLastIrp_1, out_cancelIrql_1, out_sdv_547, out_sdv_548, out_cancelRoutine_2, out_Tmp_593, out_vslice_dummy_var_376 := CyyKillAllReadsOrWrites_loop_L8(out_currentLastIrp_1, out_cancelIrql_1, out_sdv_547, out_sdv_548, out_cancelRoutine_2, out_Tmp_593, in_DeviceObject_7, in_QueueToClean, out_vslice_dummy_var_376);
    return;

  anon36_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant199;
    call {:si_unique_call 2138} CyyCancelCurrentXoff(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;

  anon35_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant125;
    call {:si_unique_call 2139} CyyCancelImmediate(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;

  anon34_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant149;
    call {:si_unique_call 2140} CyyCancelQueued(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;

  anon33_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant179;
    call {:si_unique_call 2141} CyyCancelWait(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;

  anon39_Then:
    assume {:IndirectCall} true;
    assume out_cancelRoutine_2 == li2bplFunctionConstant151;
    call {:si_unique_call 2142} CyyFilterCancelQueued(in_DeviceObject_7, out_currentLastIrp_1);
    goto L42;
}



procedure {:LoopProcedure} CyyKillAllReadsOrWrites_loop_L8(in_currentLastIrp_1: int, in_cancelIrql_1: int, in_sdv_547: int, in_sdv_548: int, in_cancelRoutine_2: int, in_Tmp_593: int, in_DeviceObject_7: int, in_QueueToClean: int, in_vslice_dummy_var_376: int) returns (out_currentLastIrp_1: int, out_cancelIrql_1: int, out_sdv_547: int, out_sdv_548: int, out_cancelRoutine_2: int, out_Tmp_593: int, out_vslice_dummy_var_376: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_sdv_547 == 1 || out_sdv_547 == 0 || out_sdv_547 == in_sdv_547;
  free ensures out_vslice_dummy_var_376 == 1 || out_vslice_dummy_var_376 == 0 || out_vslice_dummy_var_376 == in_vslice_dummy_var_376;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_15: int, in_sdv_563: int, in_Irp_8: int, in_OldIrql_7: int, in_sdv_566: int, in_sdv_568: int, in_OldIrql_8: int, in_Tmp_617: int, in_s_p_e_c_i_a_l_16: int, in_sdv_570: int, in_sdv_571: int, in_sdv_572: int, in_s_p_e_c_i_a_l_17: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_18: int, in_Tmp_618: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_2: int, in_CompleteCurrent_3: int, in_Extension_13: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_393: int, in_vslice_dummy_var_394: int) returns (out_s_p_e_c_i_a_l_15: int, out_sdv_563: int, out_Irp_8: int, out_OldIrql_7: int, out_sdv_566: int, out_sdv_568: int, out_OldIrql_8: int, out_Tmp_617: int, out_s_p_e_c_i_a_l_16: int, out_sdv_570: int, out_sdv_571: int, out_sdv_572: int, out_s_p_e_c_i_a_l_17: int, out_Xc_1: int, out_s_p_e_c_i_a_l_18: int, out_Tmp_618: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_393: int, out_vslice_dummy_var_394: int)
{
  var vslice_dummy_var_261: int;
  var vslice_dummy_var_262: int;
  var vslice_dummy_var_263: int;
  var vslice_dummy_var_264: int;

  entry:
    out_s_p_e_c_i_a_l_15, out_sdv_563, out_Irp_8, out_OldIrql_7, out_sdv_566, out_sdv_568, out_OldIrql_8, out_Tmp_617, out_s_p_e_c_i_a_l_16, out_sdv_570, out_sdv_571, out_sdv_572, out_s_p_e_c_i_a_l_17, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_618, out_CompleteCurrent_3, out_vslice_dummy_var_390, out_vslice_dummy_var_393, out_vslice_dummy_var_394 := in_s_p_e_c_i_a_l_15, in_sdv_563, in_Irp_8, in_OldIrql_7, in_sdv_566, in_sdv_568, in_OldIrql_8, in_Tmp_617, in_s_p_e_c_i_a_l_16, in_sdv_570, in_sdv_571, in_sdv_572, in_s_p_e_c_i_a_l_17, in_Xc_1, in_s_p_e_c_i_a_l_18, in_Tmp_618, in_CompleteCurrent_3, in_vslice_dummy_var_390, in_vslice_dummy_var_393, in_vslice_dummy_var_394;
    goto L6, exit;

  exit:
    return;

  L6:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_261;
    call {:si_unique_call 2146} out_sdv_568 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_261);
    assume {:nonnull} out_sdv_568 != 0;
    assume out_sdv_568 > 0;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    call {:si_unique_call 2149} out_Tmp_618 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_618 != 0;
    assume out_Tmp_618 > 0;
    call {:si_unique_call 2150} IoAcquireCancelSpinLock(out_Tmp_618);
    assume {:nonnull} out_Tmp_618 != 0;
    assume out_Tmp_618 > 0;
    havoc out_OldIrql_8;
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_263;
    call {:si_unique_call 2151} out_sdv_572 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_263);
    assume {:nonnull} in_Extension_13 != 0;
    assume in_Extension_13 > 0;
    assume {:nonnull} out_sdv_572 != 0;
    assume out_sdv_572 > 0;
    call {:si_unique_call 2152} IoReleaseCancelSpinLock(out_OldIrql_8);
    goto L24;

  L24:
    call {:si_unique_call 2148} CyyGetNextIrp(in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_2, out_CompleteCurrent_3, in_Extension_13);
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    goto anon18_Then;

  anon18_Then:
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc vslice_dummy_var_262;
    call {:si_unique_call 2147} out_sdv_571 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_262);
    assume {:nonnull} out_sdv_571 != 0;
    assume out_sdv_571 > 0;
    goto anon19_Then;

  anon19_Then:
    assume {:nonnull} in_NewIrp_2 != 0;
    assume in_NewIrp_2 > 0;
    havoc out_Tmp_617;
    assume {:nonnull} out_Tmp_617 != 0;
    assume out_Tmp_617 > 0;
    goto anon19_Then_dummy;

  anon19_Then_dummy:
    call {:si_unique_call 2164} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_15, out_sdv_563, out_Irp_8, out_OldIrql_7, out_sdv_566, out_sdv_568, out_OldIrql_8, out_Tmp_617, out_s_p_e_c_i_a_l_16, out_sdv_570, out_sdv_571, out_sdv_572, out_s_p_e_c_i_a_l_17, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_618, out_CompleteCurrent_3, out_vslice_dummy_var_390, out_vslice_dummy_var_393, out_vslice_dummy_var_394 := CyyGetNextWrite_loop_L6(out_s_p_e_c_i_a_l_15, out_sdv_563, out_Irp_8, out_OldIrql_7, out_sdv_566, out_sdv_568, out_OldIrql_8, out_Tmp_617, out_s_p_e_c_i_a_l_16, out_sdv_570, out_sdv_571, out_sdv_572, out_s_p_e_c_i_a_l_17, in_delta, out_Xc_1, out_s_p_e_c_i_a_l_18, out_Tmp_618, in_CurrentOpIrp_7, in_QueueToProcess_4, in_NewIrp_2, out_CompleteCurrent_3, in_Extension_13, out_vslice_dummy_var_390, out_vslice_dummy_var_393, out_vslice_dummy_var_394);
    return;

  anon17_Then:
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc vslice_dummy_var_264;
    call {:si_unique_call 2154} out_sdv_570 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_264);
    assume {:nonnull} out_sdv_570 != 0;
    assume out_sdv_570 > 0;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    call {:si_unique_call 2157} out_Tmp_618 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_618 != 0;
    assume out_Tmp_618 > 0;
    call {:si_unique_call 2158} IoAcquireCancelSpinLock(out_Tmp_618);
    assume {:nonnull} out_Tmp_618 != 0;
    assume out_Tmp_618 > 0;
    havoc out_OldIrql_7;
    assume {:nonnull} in_CurrentOpIrp_7 != 0;
    assume in_CurrentOpIrp_7 > 0;
    havoc out_Irp_8;
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    havoc out_Xc_1;
    assume {:nonnull} in_Extension_13 != 0;
    assume in_Extension_13 > 0;
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    call {:si_unique_call 2163} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:nonnull} out_Irp_8 != 0;
    assume out_Irp_8 > 0;
    goto L61;

  L61:
    call {:si_unique_call 2153} IoReleaseCancelSpinLock(out_OldIrql_7);
    goto L24;

  anon23_Then:
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume out_Irp_8 == SLAM_guard_S_0;
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2162} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant199);
    goto L108;

  L108:
    call {:si_unique_call 2159} out_vslice_dummy_var_390 := sdv_IoSetCancelRoutine(out_Irp_8, li2bplFunctionConstant199);
    out_s_p_e_c_i_a_l_16 := 2;
    call {:si_unique_call 2160} out_sdv_566 := sdv_IoGetCurrentIrpStackLocation(out_Irp_8);
    assume {:nonnull} out_sdv_566 != 0;
    assume out_sdv_566 > 0;
    out_s_p_e_c_i_a_l_15 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_566)));
    assume {:nonnull} out_s_p_e_c_i_a_l_15 != 0;
    assume out_s_p_e_c_i_a_l_15 > 0;
    out_CompleteCurrent_3 := 0;
    assume {:nonnull} in_Extension_13 != 0;
    assume in_Extension_13 > 0;
    call {:si_unique_call 2161} out_vslice_dummy_var_393 := KeSynchronizeExecution(0, li2bplFunctionConstant200, 0);
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:nonnull} out_Xc_1 != 0;
    assume out_Xc_1 > 0;
    assume {:nonnull} in_delta != 0;
    assume in_delta > 0;
    assume {:nonnull} in_Extension_13 != 0;
    assume in_Extension_13 > 0;
    call {:si_unique_call 2155} out_vslice_dummy_var_394 := CyySetTimer(XoffCountTimer__CYY_DEVICE_EXTENSION(in_Extension_13), in_delta, XoffCountTimeoutDpc__CYY_DEVICE_EXTENSION(in_Extension_13), in_Extension_13);
    out_s_p_e_c_i_a_l_18 := 4;
    call {:si_unique_call 2156} out_sdv_563 := sdv_IoGetCurrentIrpStackLocation(out_Irp_8);
    assume {:nonnull} out_sdv_563 != 0;
    assume out_sdv_563 > 0;
    out_s_p_e_c_i_a_l_17 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_563)));
    assume {:nonnull} out_s_p_e_c_i_a_l_17 != 0;
    assume out_s_p_e_c_i_a_l_17 > 0;
    goto L61;

  anon22_Then:
    goto L61;

  anon21_Then:
    assume !(out_Irp_8 == SLAM_guard_S_0 && SLAM_guard_S_0 != SLAM_guard_S_0_init);
    goto L108;

  anon24_Then:
    goto L61;

  anon20_Then:
    goto L24;
}



procedure {:LoopProcedure} CyyGetNextWrite_loop_L6(in_s_p_e_c_i_a_l_15: int, in_sdv_563: int, in_Irp_8: int, in_OldIrql_7: int, in_sdv_566: int, in_sdv_568: int, in_OldIrql_8: int, in_Tmp_617: int, in_s_p_e_c_i_a_l_16: int, in_sdv_570: int, in_sdv_571: int, in_sdv_572: int, in_s_p_e_c_i_a_l_17: int, in_delta: int, in_Xc_1: int, in_s_p_e_c_i_a_l_18: int, in_Tmp_618: int, in_CurrentOpIrp_7: int, in_QueueToProcess_4: int, in_NewIrp_2: int, in_CompleteCurrent_3: int, in_Extension_13: int, in_vslice_dummy_var_390: int, in_vslice_dummy_var_393: int, in_vslice_dummy_var_394: int) returns (out_s_p_e_c_i_a_l_15: int, out_sdv_563: int, out_Irp_8: int, out_OldIrql_7: int, out_sdv_566: int, out_sdv_568: int, out_OldIrql_8: int, out_Tmp_617: int, out_s_p_e_c_i_a_l_16: int, out_sdv_570: int, out_sdv_571: int, out_sdv_572: int, out_s_p_e_c_i_a_l_17: int, out_Xc_1: int, out_s_p_e_c_i_a_l_18: int, out_Tmp_618: int, out_CompleteCurrent_3: int, out_vslice_dummy_var_390: int, out_vslice_dummy_var_393: int, out_vslice_dummy_var_394: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_s_p_e_c_i_a_l_16 == 2 || out_s_p_e_c_i_a_l_16 == in_s_p_e_c_i_a_l_16;
  free ensures out_s_p_e_c_i_a_l_18 == 4 || out_s_p_e_c_i_a_l_18 == in_s_p_e_c_i_a_l_18;
  free ensures out_CompleteCurrent_3 == 0 || out_CompleteCurrent_3 == in_CompleteCurrent_3;
  free ensures out_vslice_dummy_var_393 == 1 || out_vslice_dummy_var_393 == 0 || out_vslice_dummy_var_393 == in_vslice_dummy_var_393;
  free ensures out_vslice_dummy_var_394 == 1 || out_vslice_dummy_var_394 == 0 || out_vslice_dummy_var_394 == in_vslice_dummy_var_394;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyStartMask_loop_L11(in_s_p_e_c_i_a_l_25: int, in_FirstStatus_1: int, in_Tmp_649: int, in_SetFirstStatus_1: int, in_Tmp_650: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_653: int, in_Tmp_654: int, in_Tmp_655: int, in_Tmp_656: int, in_IrpSp_2: int, in_OldIrql_10: int, in_Tmp_657: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_26: int, in_Tmp_658: int, in_sdv_615: int, in_Tmp_659: int, in_Tmp_660: int, in_Tmp_661: int, in_Tmp_662: int, in_Tmp_663: int, in_Tmp_664: int, in_sdv_618: int, in_Tmp_665: int, in_Tmp_666: int, in_Extension_19: int, in_vslice_dummy_var_409: int, in_vslice_dummy_var_410: int, in_vslice_dummy_var_412: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_417: int, in_vslice_dummy_var_418: int, in_vslice_dummy_var_419: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int, in_vslice_dummy_var_422: int, in_vslice_dummy_var_423: int, in_vslice_dummy_var_424: int, in_vslice_dummy_var_425: int) returns (out_s_p_e_c_i_a_l_25: int, out_FirstStatus_1: int, out_Tmp_649: int, out_SetFirstStatus_1: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_653: int, out_Tmp_654: int, out_Tmp_655: int, out_Tmp_656: int, out_IrpSp_2: int, out_OldIrql_10: int, out_Tmp_657: int, out_s_p_e_c_i_a_l_26: int, out_Tmp_658: int, out_sdv_615: int, out_Tmp_659: int, out_Tmp_660: int, out_Tmp_661: int, out_Tmp_662: int, out_Tmp_663: int, out_Tmp_664: int, out_sdv_618: int, out_Tmp_665: int, out_Tmp_666: int, out_vslice_dummy_var_409: int, out_vslice_dummy_var_410: int, out_vslice_dummy_var_412: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_417: int, out_vslice_dummy_var_418: int, out_vslice_dummy_var_419: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int, out_vslice_dummy_var_422: int, out_vslice_dummy_var_423: int, out_vslice_dummy_var_424: int, out_vslice_dummy_var_425: int)
{
  var vslice_dummy_var_265: int;
  var vslice_dummy_var_266: int;
  var vslice_dummy_var_267: int;
  var vslice_dummy_var_268: int;

  entry:
    out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_649, out_SetFirstStatus_1, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_653, out_Tmp_654, out_Tmp_655, out_Tmp_656, out_IrpSp_2, out_OldIrql_10, out_Tmp_657, out_s_p_e_c_i_a_l_26, out_Tmp_658, out_sdv_615, out_Tmp_659, out_Tmp_660, out_Tmp_661, out_Tmp_662, out_Tmp_663, out_Tmp_664, out_sdv_618, out_Tmp_665, out_Tmp_666, out_vslice_dummy_var_409, out_vslice_dummy_var_410, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417, out_vslice_dummy_var_418, out_vslice_dummy_var_419, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425 := in_s_p_e_c_i_a_l_25, in_FirstStatus_1, in_Tmp_649, in_SetFirstStatus_1, in_Tmp_650, in_Tmp_651, in_Tmp_652, in_Tmp_653, in_Tmp_654, in_Tmp_655, in_Tmp_656, in_IrpSp_2, in_OldIrql_10, in_Tmp_657, in_s_p_e_c_i_a_l_26, in_Tmp_658, in_sdv_615, in_Tmp_659, in_Tmp_660, in_Tmp_661, in_Tmp_662, in_Tmp_663, in_Tmp_664, in_sdv_618, in_Tmp_665, in_Tmp_666, in_vslice_dummy_var_409, in_vslice_dummy_var_410, in_vslice_dummy_var_412, in_vslice_dummy_var_413, in_vslice_dummy_var_414, in_vslice_dummy_var_415, in_vslice_dummy_var_416, in_vslice_dummy_var_417, in_vslice_dummy_var_418, in_vslice_dummy_var_419, in_vslice_dummy_var_420, in_vslice_dummy_var_421, in_vslice_dummy_var_422, in_vslice_dummy_var_423, in_vslice_dummy_var_424, in_vslice_dummy_var_425;
    goto L11, exit;

  exit:
    return;

  L11:
    out_Tmp_662 := strConst__li2bpl179;
    call {:si_unique_call 2165} out_vslice_dummy_var_412 := CyyDbgPrintEx(7, out_Tmp_662);
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc vslice_dummy_var_265;
    call {:si_unique_call 2166} out_IrpSp_2 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_265);
    assume {:nonnull} out_IrpSp_2 != 0;
    assume out_IrpSp_2 > 0;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    out_Tmp_651 := strConst__li2bpl180;
    call {:si_unique_call 2193} out_vslice_dummy_var_413 := CyyDbgPrintEx(7, out_Tmp_651);
    call {:si_unique_call 2194} out_vslice_dummy_var_409 := KeSynchronizeExecution(0, li2bplFunctionConstant178, 0);
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc out_Tmp_658;
    assume {:nonnull} out_Tmp_658 != 0;
    assume out_Tmp_658 > 0;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L31;

  L31:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    call {:si_unique_call 2167} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_19), in_NewIrp_4, 1, in_Extension_19);
    out_Tmp_663 := strConst__li2bpl182;
    call {:si_unique_call 2168} out_vslice_dummy_var_414 := CyyDbgPrintEx(7, out_Tmp_663);
    goto L37;

  L37:
    assume {:nonnull} in_NewIrp_4 != 0;
    assume in_NewIrp_4 > 0;
    goto anon25_Then;

  anon25_Then:
    goto anon25_Then_dummy;

  anon25_Then_dummy:
    call {:si_unique_call 2195} {:si_old_unique_call 1} out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_649, out_SetFirstStatus_1, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_653, out_Tmp_654, out_Tmp_655, out_Tmp_656, out_IrpSp_2, out_OldIrql_10, out_Tmp_657, out_s_p_e_c_i_a_l_26, out_Tmp_658, out_sdv_615, out_Tmp_659, out_Tmp_660, out_Tmp_661, out_Tmp_662, out_Tmp_663, out_Tmp_664, out_sdv_618, out_Tmp_665, out_Tmp_666, out_vslice_dummy_var_409, out_vslice_dummy_var_410, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417, out_vslice_dummy_var_418, out_vslice_dummy_var_419, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425 := CyyStartMask_loop_L11(out_s_p_e_c_i_a_l_25, out_FirstStatus_1, out_Tmp_649, out_SetFirstStatus_1, out_Tmp_650, out_Tmp_651, out_Tmp_652, out_Tmp_653, out_Tmp_654, out_Tmp_655, out_Tmp_656, out_IrpSp_2, out_OldIrql_10, out_Tmp_657, in_NewIrp_4, out_s_p_e_c_i_a_l_26, out_Tmp_658, out_sdv_615, out_Tmp_659, out_Tmp_660, out_Tmp_661, out_Tmp_662, out_Tmp_663, out_Tmp_664, out_sdv_618, out_Tmp_665, out_Tmp_666, in_Extension_19, out_vslice_dummy_var_409, out_vslice_dummy_var_410, out_vslice_dummy_var_412, out_vslice_dummy_var_413, out_vslice_dummy_var_414, out_vslice_dummy_var_415, out_vslice_dummy_var_416, out_vslice_dummy_var_417, out_vslice_dummy_var_418, out_vslice_dummy_var_419, out_vslice_dummy_var_420, out_vslice_dummy_var_421, out_vslice_dummy_var_422, out_vslice_dummy_var_423, out_vslice_dummy_var_424, out_vslice_dummy_var_425);
    return;

  anon29_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_649 := strConst__li2bpl181;
    call {:si_unique_call 2192} out_vslice_dummy_var_415 := CyyDbgPrintEx(7, out_Tmp_649);
    out_FirstStatus_1 := 0;
    out_SetFirstStatus_1 := 1;
    goto L31;

  anon23_Then:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    call {:si_unique_call 2186} out_Tmp_657 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_657 != 0;
    assume out_Tmp_657 > 0;
    call {:si_unique_call 2187} IoAcquireCancelSpinLock(out_Tmp_657);
    assume {:nonnull} out_Tmp_657 != 0;
    assume out_Tmp_657 > 0;
    havoc out_OldIrql_10;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc out_Tmp_656;
    call {:si_unique_call 2188} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} out_Tmp_656 != 0;
    assume out_Tmp_656 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    out_Tmp_655 := strConst__li2bpl185;
    call {:si_unique_call 2190} out_vslice_dummy_var_419 := CyyDbgPrintEx(7, out_Tmp_655);
    call {:si_unique_call 2191} IoReleaseCancelSpinLock(out_OldIrql_10);
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc out_Tmp_665;
    assume {:nonnull} out_Tmp_665 != 0;
    assume out_Tmp_665 > 0;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L64;

  L64:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    call {:si_unique_call 2169} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_19), in_NewIrp_4, 1, in_Extension_19);
    out_Tmp_664 := strConst__li2bpl182;
    call {:si_unique_call 2170} out_vslice_dummy_var_420 := CyyDbgPrintEx(7, out_Tmp_664);
    goto L37;

  anon31_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_653 := strConst__li2bpl181;
    call {:si_unique_call 2189} out_vslice_dummy_var_421 := CyyDbgPrintEx(7, out_Tmp_653);
    out_FirstStatus_1 := -1073741536;
    out_SetFirstStatus_1 := 1;
    goto L64;

  anon28_Then:
    out_Tmp_661 := strConst__li2bpl184;
    call {:si_unique_call 2185} out_vslice_dummy_var_422 := CyyDbgPrintEx(7, out_Tmp_661);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L76;

  L76:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc vslice_dummy_var_268;
    call {:si_unique_call 2181} out_sdv_615 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_268);
    assume {:nonnull} out_sdv_615 != 0;
    assume out_sdv_615 > 0;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2180} SLIC_sdv_IoSetCancelRoutine_entry(0, li2bplFunctionConstant179);
    goto L132;

  L132:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc vslice_dummy_var_266;
    call {:si_unique_call 2171} out_vslice_dummy_var_410 := sdv_IoSetCancelRoutine(vslice_dummy_var_266, li2bplFunctionConstant179);
    out_s_p_e_c_i_a_l_26 := 2;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc vslice_dummy_var_267;
    call {:si_unique_call 2172} out_sdv_618 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_267);
    assume {:nonnull} out_sdv_618 != 0;
    assume out_sdv_618 > 0;
    out_s_p_e_c_i_a_l_25 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_618)));
    assume {:nonnull} out_s_p_e_c_i_a_l_25 != 0;
    assume out_s_p_e_c_i_a_l_25 > 0;
    call {:si_unique_call 2173} out_vslice_dummy_var_423 := KeSynchronizeExecution(0, li2bplFunctionConstant180, 0);
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    call {:si_unique_call 2174} CyyGetNextIrpLocked(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_19), in_NewIrp_4, 0, in_Extension_19, out_OldIrql_10);
    out_Tmp_654 := strConst__li2bpl182;
    call {:si_unique_call 2175} out_vslice_dummy_var_424 := CyyDbgPrintEx(7, out_Tmp_654);
    goto L37;

  anon32_Then:
    goto L132;

  anon27_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_659 := strConst__li2bpl181;
    call {:si_unique_call 2184} out_vslice_dummy_var_425 := CyyDbgPrintEx(7, out_Tmp_659);
    out_FirstStatus_1 := 259;
    out_SetFirstStatus_1 := 1;
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume SLAM_guard_S_0 != SLAM_guard_S_0_init;
    call {:si_unique_call 2183} SLIC_sdv_IoMarkIrpPending_entry(0);
    goto L135;

  L135:
    call {:si_unique_call 2182} sdv_IoMarkIrpPending(0);
    goto L76;

  anon33_Then:
    goto L135;

  anon26_Then:
    goto L41;

  L41:
    out_Tmp_660 := strConst__li2bpl183;
    call {:si_unique_call 2179} out_vslice_dummy_var_416 := CyyDbgPrintEx(7, out_Tmp_660);
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    havoc out_Tmp_650;
    assume {:nonnull} out_Tmp_650 != 0;
    assume out_Tmp_650 > 0;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} out_SetFirstStatus_1 != 0;
    goto L112;

  L112:
    assume {:nonnull} in_Extension_19 != 0;
    assume in_Extension_19 > 0;
    call {:si_unique_call 2176} CyyGetNextIrp(CurrentMaskIrp__CYY_DEVICE_EXTENSION(in_Extension_19), MaskQueue__CYY_DEVICE_EXTENSION(in_Extension_19), in_NewIrp_4, 1, in_Extension_19);
    out_Tmp_666 := strConst__li2bpl182;
    call {:si_unique_call 2177} out_vslice_dummy_var_417 := CyyDbgPrintEx(7, out_Tmp_666);
    goto L37;

  anon30_Then:
    assume {:partition} out_SetFirstStatus_1 == 0;
    out_Tmp_652 := strConst__li2bpl181;
    call {:si_unique_call 2178} out_vslice_dummy_var_418 := CyyDbgPrintEx(7, out_Tmp_652);
    out_FirstStatus_1 := -1073741811;
    out_SetFirstStatus_1 := 1;
    goto L112;

  anon24_Then:
    goto L41;
}



procedure {:LoopProcedure} CyyStartMask_loop_L11(in_s_p_e_c_i_a_l_25: int, in_FirstStatus_1: int, in_Tmp_649: int, in_SetFirstStatus_1: int, in_Tmp_650: int, in_Tmp_651: int, in_Tmp_652: int, in_Tmp_653: int, in_Tmp_654: int, in_Tmp_655: int, in_Tmp_656: int, in_IrpSp_2: int, in_OldIrql_10: int, in_Tmp_657: int, in_NewIrp_4: int, in_s_p_e_c_i_a_l_26: int, in_Tmp_658: int, in_sdv_615: int, in_Tmp_659: int, in_Tmp_660: int, in_Tmp_661: int, in_Tmp_662: int, in_Tmp_663: int, in_Tmp_664: int, in_sdv_618: int, in_Tmp_665: int, in_Tmp_666: int, in_Extension_19: int, in_vslice_dummy_var_409: int, in_vslice_dummy_var_410: int, in_vslice_dummy_var_412: int, in_vslice_dummy_var_413: int, in_vslice_dummy_var_414: int, in_vslice_dummy_var_415: int, in_vslice_dummy_var_416: int, in_vslice_dummy_var_417: int, in_vslice_dummy_var_418: int, in_vslice_dummy_var_419: int, in_vslice_dummy_var_420: int, in_vslice_dummy_var_421: int, in_vslice_dummy_var_422: int, in_vslice_dummy_var_423: int, in_vslice_dummy_var_424: int, in_vslice_dummy_var_425: int) returns (out_s_p_e_c_i_a_l_25: int, out_FirstStatus_1: int, out_Tmp_649: int, out_SetFirstStatus_1: int, out_Tmp_650: int, out_Tmp_651: int, out_Tmp_652: int, out_Tmp_653: int, out_Tmp_654: int, out_Tmp_655: int, out_Tmp_656: int, out_IrpSp_2: int, out_OldIrql_10: int, out_Tmp_657: int, out_s_p_e_c_i_a_l_26: int, out_Tmp_658: int, out_sdv_615: int, out_Tmp_659: int, out_Tmp_660: int, out_Tmp_661: int, out_Tmp_662: int, out_Tmp_663: int, out_Tmp_664: int, out_sdv_618: int, out_Tmp_665: int, out_Tmp_666: int, out_vslice_dummy_var_409: int, out_vslice_dummy_var_410: int, out_vslice_dummy_var_412: int, out_vslice_dummy_var_413: int, out_vslice_dummy_var_414: int, out_vslice_dummy_var_415: int, out_vslice_dummy_var_416: int, out_vslice_dummy_var_417: int, out_vslice_dummy_var_418: int, out_vslice_dummy_var_419: int, out_vslice_dummy_var_420: int, out_vslice_dummy_var_421: int, out_vslice_dummy_var_422: int, out_vslice_dummy_var_423: int, out_vslice_dummy_var_424: int, out_vslice_dummy_var_425: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpPended, IrpCancelChecked;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_FirstStatus_1 == 0 || out_FirstStatus_1 == -1073741536 || out_FirstStatus_1 == 259 || out_FirstStatus_1 == -1073741811 || out_FirstStatus_1 == in_FirstStatus_1;
  free ensures out_SetFirstStatus_1 == 1 || out_SetFirstStatus_1 == in_SetFirstStatus_1;
  free ensures out_s_p_e_c_i_a_l_26 == 2 || out_s_p_e_c_i_a_l_26 == in_s_p_e_c_i_a_l_26;
  free ensures out_vslice_dummy_var_409 == 1 || out_vslice_dummy_var_409 == 0 || out_vslice_dummy_var_409 == in_vslice_dummy_var_409;
  free ensures out_vslice_dummy_var_412 == 0 || out_vslice_dummy_var_412 == in_vslice_dummy_var_412;
  free ensures out_vslice_dummy_var_413 == 0 || out_vslice_dummy_var_413 == in_vslice_dummy_var_413;
  free ensures out_vslice_dummy_var_414 == 0 || out_vslice_dummy_var_414 == in_vslice_dummy_var_414;
  free ensures out_vslice_dummy_var_415 == 0 || out_vslice_dummy_var_415 == in_vslice_dummy_var_415;
  free ensures out_vslice_dummy_var_416 == 0 || out_vslice_dummy_var_416 == in_vslice_dummy_var_416;
  free ensures out_vslice_dummy_var_417 == 0 || out_vslice_dummy_var_417 == in_vslice_dummy_var_417;
  free ensures out_vslice_dummy_var_418 == 0 || out_vslice_dummy_var_418 == in_vslice_dummy_var_418;
  free ensures out_vslice_dummy_var_419 == 0 || out_vslice_dummy_var_419 == in_vslice_dummy_var_419;
  free ensures out_vslice_dummy_var_420 == 0 || out_vslice_dummy_var_420 == in_vslice_dummy_var_420;
  free ensures out_vslice_dummy_var_421 == 0 || out_vslice_dummy_var_421 == in_vslice_dummy_var_421;
  free ensures out_vslice_dummy_var_422 == 0 || out_vslice_dummy_var_422 == in_vslice_dummy_var_422;
  free ensures out_vslice_dummy_var_423 == 1 || out_vslice_dummy_var_423 == 0 || out_vslice_dummy_var_423 == in_vslice_dummy_var_423;
  free ensures out_vslice_dummy_var_424 == 0 || out_vslice_dummy_var_424 == in_vslice_dummy_var_424;
  free ensures out_vslice_dummy_var_425 == 0 || out_vslice_dummy_var_425 == in_vslice_dummy_var_425;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyStartRead_loop_L23(in_localStatus_1: int, in_Tmp_890: int, in_sdv_716: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_Tmp_892: int, in_newIrp_1: int, in_useTotalTimer: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_722: int, in_oldIrql_9: int, in_Tmp_893: int, in_sdv_724: int, in_constantVal: int, in_controlIrql_1: int, in_Tmp_894: int, in_Tmp_896: int, in_returnWithWhatsPresent: int, in_Tmp_897: int, in_Tmp_898: int, in_useIntervalTimer: int, in_sdv_731: int, in_firstStatus: int, in_Extension_23: int, in_boogieTmp: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_493: int) returns (out_localStatus_1: int, out_Tmp_890: int, out_sdv_716: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_892: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_722: int, out_oldIrql_9: int, out_Tmp_893: int, out_sdv_724: int, out_constantVal: int, out_controlIrql_1: int, out_Tmp_894: int, out_Tmp_896: int, out_returnWithWhatsPresent: int, out_Tmp_897: int, out_Tmp_898: int, out_useIntervalTimer: int, out_sdv_731: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_493: int)
{
  var vslice_dummy_var_269: int;
  var vslice_dummy_var_270: int;
  var vslice_dummy_var_271: int;
  var vslice_dummy_var_272: int;

  entry:
    out_localStatus_1, out_Tmp_890, out_sdv_716, out_os2ssreturn, out_setFirstStatus, out_Tmp_892, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_722, out_oldIrql_9, out_Tmp_893, out_sdv_724, out_constantVal, out_controlIrql_1, out_Tmp_894, out_Tmp_896, out_returnWithWhatsPresent, out_Tmp_897, out_Tmp_898, out_useIntervalTimer, out_sdv_731, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_493 := in_localStatus_1, in_Tmp_890, in_sdv_716, in_os2ssreturn, in_setFirstStatus, in_Tmp_892, in_useTotalTimer, in_multiplierVal, in_crunchDownToOne, in_sdv_722, in_oldIrql_9, in_Tmp_893, in_sdv_724, in_constantVal, in_controlIrql_1, in_Tmp_894, in_Tmp_896, in_returnWithWhatsPresent, in_Tmp_897, in_Tmp_898, in_useIntervalTimer, in_sdv_731, in_firstStatus, in_boogieTmp, in_vslice_dummy_var_488, in_vslice_dummy_var_489, in_vslice_dummy_var_490, in_vslice_dummy_var_493;
    goto L23, exit;

  exit:
    return;

  L23:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc vslice_dummy_var_269;
    call {:si_unique_call 2196} out_sdv_722 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_269);
    assume {:nonnull} out_sdv_722 != 0;
    assume out_sdv_722 > 0;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    call {:si_unique_call 2219} out_localStatus_1 := CyyResizeBuffer(in_Extension_23);
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  L37:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    call {:si_unique_call 2197} CyyGetNextIrp(CurrentReadIrp__CYY_DEVICE_EXTENSION(in_Extension_23), ReadQueue__CYY_DEVICE_EXTENSION(in_Extension_23), in_newIrp_1, 1, in_Extension_23);
    assume {:nonnull} in_newIrp_1 != 0;
    assume in_newIrp_1 > 0;
    goto anon63_Then;

  anon63_Then:
    goto anon63_Then_dummy;

  anon63_Then_dummy:
    call {:si_unique_call 2220} {:si_old_unique_call 1} out_localStatus_1, out_Tmp_890, out_sdv_716, out_os2ssreturn, out_setFirstStatus, out_Tmp_892, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_722, out_oldIrql_9, out_Tmp_893, out_sdv_724, out_constantVal, out_controlIrql_1, out_Tmp_894, out_Tmp_896, out_returnWithWhatsPresent, out_Tmp_897, out_Tmp_898, out_useIntervalTimer, out_sdv_731, out_firstStatus, out_boogieTmp, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_493 := CyyStartRead_loop_L23(out_localStatus_1, out_Tmp_890, out_sdv_716, in_totalTime, out_os2ssreturn, in_updateChar, in_timeoutsForIrp, out_setFirstStatus, out_Tmp_892, in_newIrp_1, out_useTotalTimer, out_multiplierVal, out_crunchDownToOne, out_sdv_722, out_oldIrql_9, out_Tmp_893, out_sdv_724, out_constantVal, out_controlIrql_1, out_Tmp_894, out_Tmp_896, out_returnWithWhatsPresent, out_Tmp_897, out_Tmp_898, out_useIntervalTimer, out_sdv_731, out_firstStatus, in_Extension_23, out_boogieTmp, out_vslice_dummy_var_488, out_vslice_dummy_var_489, out_vslice_dummy_var_490, out_vslice_dummy_var_493);
    return;

  anon62_Then:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := out_localStatus_1;
    out_setFirstStatus := 1;
    goto L37;

  anon61_Then:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc vslice_dummy_var_272;
    call {:si_unique_call 2209} out_sdv_724 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_272);
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} out_sdv_724 != 0;
    assume out_sdv_724 > 0;
    out_useTotalTimer := 0;
    out_returnWithWhatsPresent := 0;
    out_os2ssreturn := 0;
    out_crunchDownToOne := 0;
    out_useIntervalTimer := 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    call {:si_unique_call 2210} out_vslice_dummy_var_493 := CyyCancelTimer(ReadRequestTotalTimer__CYY_DEVICE_EXTENSION(in_Extension_23), in_Extension_23);
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    call {:si_unique_call 2211} out_vslice_dummy_var_488 := CyyCancelTimer(ReadRequestIntervalTimer__CYY_DEVICE_EXTENSION(in_Extension_23), in_Extension_23);
    call {:si_unique_call 2212} out_Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    call {:si_unique_call 2213} sdv_KeAcquireSpinLock(0, out_Tmp_897);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    havoc out_controlIrql_1;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    call {:si_unique_call 2214} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon66_Then, anon66_Else;

  anon66_Else:
    out_useIntervalTimer := 1;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    goto L66;

  L66:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon68_Then, anon68_Else;

  anon68_Else:
    goto L76;

  L76:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon70_Then, anon70_Else;

  anon70_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon72_Then, anon72_Else;

  anon72_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  L83:
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} out_useTotalTimer != 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_totalTime != 0;
    assume in_totalTime > 0;
    goto L84;

  L84:
    call {:si_unique_call 2206} out_Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    call {:si_unique_call 2207} sdv_KeAcquireSpinLock(0, out_Tmp_897);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    havoc out_controlIrql_1;
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    call {:si_unique_call 2208} out_boogieTmp := CyyGetCharsFromIntBuffer(in_Extension_23);
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} out_returnWithWhatsPresent != 0;
    goto L94;

  L94:
    call {:si_unique_call 2217} out_vslice_dummy_var_489 := KeSynchronizeExecution(0, li2bplFunctionConstant458, 0);
    call {:si_unique_call 2218} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_898;
    assume {:nonnull} out_Tmp_898 != 0;
    assume out_Tmp_898 > 0;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon87_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon74_Then:
    assume {:partition} out_returnWithWhatsPresent == 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} out_os2ssreturn != 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_893;
    assume {:nonnull} out_Tmp_893 != 0;
    assume out_Tmp_893 > 0;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    goto L105;

  L105:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc vslice_dummy_var_271;
    call {:si_unique_call 2202} out_sdv_731 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_271);
    assume {:nonnull} out_sdv_731 != 0;
    assume out_sdv_731 > 0;
    call {:si_unique_call 2203} out_Tmp_897 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    call {:si_unique_call 2204} IoAcquireCancelSpinLock(out_Tmp_897);
    assume {:nonnull} out_Tmp_897 != 0;
    assume out_Tmp_897 > 0;
    havoc out_oldIrql_9;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_892;
    call {:si_unique_call 2205} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} out_Tmp_892 != 0;
    assume out_Tmp_892 > 0;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    call {:si_unique_call 2215} IoReleaseCancelSpinLock(out_oldIrql_9);
    call {:si_unique_call 2216} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_896;
    assume {:nonnull} out_Tmp_896 != 0;
    assume out_Tmp_896 > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_890;
    assume {:nonnull} out_Tmp_890 != 0;
    assume out_Tmp_890 > 0;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := -1073741536;
    out_setFirstStatus := 1;
    goto L37;

  anon89_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon85_Then:
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} out_crunchDownToOne != 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc vslice_dummy_var_270;
    call {:si_unique_call 2201} out_sdv_716 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_270);
    assume {:nonnull} out_sdv_716 != 0;
    assume out_sdv_716 > 0;
    goto L126;

  L126:
    call {:si_unique_call 2200} out_vslice_dummy_var_490 := KeSynchronizeExecution(0, li2bplFunctionConstant459, 0);
    assume {:nonnull} in_updateChar != 0;
    assume in_updateChar > 0;
    goto anon78_Else;

  anon78_Else:
    call {:si_unique_call 2198} IoReleaseCancelSpinLock(out_oldIrql_9);
    call {:si_unique_call 2199} sdv_KeReleaseSpinLock(0, out_controlIrql_1);
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    havoc out_Tmp_894;
    assume {:nonnull} out_Tmp_894 != 0;
    assume out_Tmp_894 > 0;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} out_setFirstStatus == 0;
    out_firstStatus := 0;
    out_setFirstStatus := 1;
    goto L37;

  anon90_Then:
    assume {:partition} out_setFirstStatus != 0;
    goto L37;

  anon77_Then:
    assume {:partition} out_crunchDownToOne == 0;
    goto L126;

  anon88_Then:
    goto L94;

  anon76_Then:
    assume {:partition} out_os2ssreturn == 0;
    goto L105;

  anon75_Then:
    goto L94;

  anon73_Then:
    assume {:partition} out_useTotalTimer == 0;
    goto L84;

  anon72_Then:
    goto L77;

  L77:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon71_Then, anon71_Else;

  anon71_Else:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    out_useTotalTimer := 1;
    out_os2ssreturn := 1;
    out_crunchDownToOne := 1;
    out_multiplierVal := 0;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon83_Then:
    goto L83;

  anon71_Then:
    goto L83;

  anon70_Then:
    goto L77;

  anon68_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon69_Then, anon69_Else;

  anon69_Else:
    out_returnWithWhatsPresent := 1;
    goto L83;

  anon69_Then:
    goto L76;

  anon65_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    goto L192;

  L192:
    out_useTotalTimer := 1;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_multiplierVal;
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    havoc out_constantVal;
    goto L83;

  anon67_Then:
    assume {:nonnull} in_timeoutsForIrp != 0;
    assume in_timeoutsForIrp > 0;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    goto L192;

  anon84_Then:
    goto L83;

  anon86_Then:
    assume {:nonnull} in_Extension_23 != 0;
    assume in_Extension_23 > 0;
    goto L66;

  anon66_Then:
    goto L66;

  anon64_Then:
    goto L66;
}



procedure {:LoopProcedure} CyyStartRead_loop_L23(in_localStatus_1: int, in_Tmp_890: int, in_sdv_716: int, in_totalTime: int, in_os2ssreturn: int, in_updateChar: int, in_timeoutsForIrp: int, in_setFirstStatus: int, in_Tmp_892: int, in_newIrp_1: int, in_useTotalTimer: int, in_multiplierVal: int, in_crunchDownToOne: int, in_sdv_722: int, in_oldIrql_9: int, in_Tmp_893: int, in_sdv_724: int, in_constantVal: int, in_controlIrql_1: int, in_Tmp_894: int, in_Tmp_896: int, in_returnWithWhatsPresent: int, in_Tmp_897: int, in_Tmp_898: int, in_useIntervalTimer: int, in_sdv_731: int, in_firstStatus: int, in_Extension_23: int, in_boogieTmp: int, in_vslice_dummy_var_488: int, in_vslice_dummy_var_489: int, in_vslice_dummy_var_490: int, in_vslice_dummy_var_493: int) returns (out_localStatus_1: int, out_Tmp_890: int, out_sdv_716: int, out_os2ssreturn: int, out_setFirstStatus: int, out_Tmp_892: int, out_useTotalTimer: int, out_multiplierVal: int, out_crunchDownToOne: int, out_sdv_722: int, out_oldIrql_9: int, out_Tmp_893: int, out_sdv_724: int, out_constantVal: int, out_controlIrql_1: int, out_Tmp_894: int, out_Tmp_896: int, out_returnWithWhatsPresent: int, out_Tmp_897: int, out_Tmp_898: int, out_useIntervalTimer: int, out_sdv_731: int, out_firstStatus: int, out_boogieTmp: int, out_vslice_dummy_var_488: int, out_vslice_dummy_var_489: int, out_vslice_dummy_var_490: int, out_vslice_dummy_var_493: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked;
  free ensures old(IoSetCancelRoutineCalled) == 0 ==> IoSetCancelRoutineCalled != 1;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_localStatus_1 == 0 || out_localStatus_1 == in_localStatus_1;
  free ensures out_os2ssreturn == 0 || out_os2ssreturn == 1 || out_os2ssreturn == in_os2ssreturn;
  free ensures out_setFirstStatus == 1 || out_setFirstStatus == in_setFirstStatus;
  free ensures out_useTotalTimer == 0 || out_useTotalTimer == 1 || out_useTotalTimer == in_useTotalTimer;
  free ensures out_crunchDownToOne == 0 || out_crunchDownToOne == 1 || out_crunchDownToOne == in_crunchDownToOne;
  free ensures out_returnWithWhatsPresent == 1 || out_returnWithWhatsPresent == 0 || out_returnWithWhatsPresent == in_returnWithWhatsPresent;
  free ensures out_useIntervalTimer == 1 || out_useIntervalTimer == 0 || out_useIntervalTimer == in_useIntervalTimer;
  free ensures out_firstStatus == 0 || out_firstStatus == -1073741536 || out_firstStatus == in_firstStatus;
  free ensures out_vslice_dummy_var_488 == 1 || out_vslice_dummy_var_488 == 0 || out_vslice_dummy_var_488 == in_vslice_dummy_var_488;
  free ensures out_vslice_dummy_var_489 == 1 || out_vslice_dummy_var_489 == 0 || out_vslice_dummy_var_489 == in_vslice_dummy_var_489;
  free ensures out_vslice_dummy_var_490 == 1 || out_vslice_dummy_var_490 == 0 || out_vslice_dummy_var_490 == in_vslice_dummy_var_490;
  free ensures out_vslice_dummy_var_493 == 1 || out_vslice_dummy_var_493 == 0 || out_vslice_dummy_var_493 == in_vslice_dummy_var_493;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyStartWrite#0_loop_L14(in_Tmp_634: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_636: int, in_OldIrql_9: int, in_sdv_591: int, in_NewIrp_3: int, in_sdv_595: int, in_Tmp_638: int, in_Timeouts_1: int, in_Tmp_640: int, in_Extension_17: int) returns (out_Tmp_634: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_636: int, out_OldIrql_9: int, out_sdv_591: int, out_sdv_595: int, out_Tmp_638: int, out_Tmp_640: int)
{
  var vslice_dummy_var_273: int;
  var vslice_dummy_var_274: int;
  var vslice_dummy_var_275: int;

  entry:
    out_Tmp_634, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, out_sdv_595, out_Tmp_638, out_Tmp_640 := in_Tmp_634, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_636, in_OldIrql_9, in_sdv_591, in_sdv_595, in_Tmp_638, in_Tmp_640;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 2221} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2222} IoAcquireCancelSpinLock(out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_274;
    call {:si_unique_call 2234} out_sdv_591 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_274);
    assume {:nonnull} out_sdv_591 != 0;
    assume out_sdv_591 > 0;
    goto anon26_Then;

  anon26_Then:
    call {:si_unique_call 2232} IoReleaseCancelSpinLock(out_OldIrql_9);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 2229} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2230} sdv_KeAcquireSpinLock(0, out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 2231} sdv_KeReleaseSpinLock(0, out_OldIrql_9);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_275;
    call {:si_unique_call 2235} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_275);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_640;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_273;
    call {:si_unique_call 2225} out_sdv_595 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_273);
    assume {:nonnull} out_sdv_595 != 0;
    assume out_sdv_595 > 0;
    call {:si_unique_call 2226} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2227} IoAcquireCancelSpinLock(out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc out_Tmp_636;
    call {:si_unique_call 2228} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} out_Tmp_636 != 0;
    assume out_Tmp_636 > 0;
    goto anon33_Else;

  anon33_Else:
    call {:si_unique_call 2224} IoReleaseCancelSpinLock(out_OldIrql_9);
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc out_Tmp_638;
    assume {:nonnull} out_Tmp_638 != 0;
    assume out_Tmp_638 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    call {:si_unique_call 2223} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_17), WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_17), in_NewIrp_3, 1, in_Extension_17);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2236} {:si_old_unique_call 1} out_Tmp_634, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, out_sdv_595, out_Tmp_638, out_Tmp_640 := CyyStartWrite#0_loop_L14(out_Tmp_634, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, in_NewIrp_3, out_sdv_595, out_Tmp_638, in_Timeouts_1, out_Tmp_640, in_Extension_17);
    return;

  anon35_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon34_Then:
    out_Tmp_640 := 1;
    goto L59;

  anon27_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L60;

  anon28_Then:
    goto L51;

  anon25_Then:
    call {:si_unique_call 2233} IoReleaseCancelSpinLock(out_OldIrql_9);
    goto L40;
}



procedure {:LoopProcedure} CyyStartWrite#0_loop_L14(in_Tmp_634: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_636: int, in_OldIrql_9: int, in_sdv_591: int, in_NewIrp_3: int, in_sdv_595: int, in_Tmp_638: int, in_Timeouts_1: int, in_Tmp_640: int, in_Extension_17: int) returns (out_Tmp_634: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_636: int, out_OldIrql_9: int, out_sdv_591: int, out_sdv_595: int, out_Tmp_638: int, out_Tmp_640: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation CyyStartWrite#1_loop_L14(in_Tmp_634: int, in_s_p_e_c_i_a_l_19: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_636: int, in_OldIrql_9: int, in_sdv_591: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_21: int, in_sdv_593: int, in_sdv_595: int, in_Tmp_638: int, in_Tmp_639: int, in_Timeouts_1: int, in_Tmp_640: int, in_Extension_17: int) returns (out_Tmp_634: int, out_s_p_e_c_i_a_l_19: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_636: int, out_OldIrql_9: int, out_sdv_591: int, out_s_p_e_c_i_a_l_21: int, out_sdv_593: int, out_sdv_595: int, out_Tmp_638: int, out_Tmp_639: int, out_Tmp_640: int)
{
  var vslice_dummy_var_276: int;
  var vslice_dummy_var_277: int;
  var vslice_dummy_var_278: int;
  var vslice_dummy_var_279: int;

  entry:
    out_Tmp_634, out_s_p_e_c_i_a_l_19, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, out_s_p_e_c_i_a_l_21, out_sdv_593, out_sdv_595, out_Tmp_638, out_Tmp_639, out_Tmp_640 := in_Tmp_634, in_s_p_e_c_i_a_l_19, in_FirstStatus, in_SetFirstStatus, in_UseATimer_1, in_IrpSp_1, in_Tmp_636, in_OldIrql_9, in_sdv_591, in_s_p_e_c_i_a_l_21, in_sdv_593, in_sdv_595, in_Tmp_638, in_Tmp_639, in_Tmp_640;
    goto L14, exit;

  exit:
    return;

  L14:
    call {:si_unique_call 2237} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2238} IoAcquireCancelSpinLock(out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_278;
    call {:si_unique_call 2252} out_sdv_591 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_278);
    assume {:nonnull} out_sdv_591 != 0;
    assume out_sdv_591 > 0;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    out_s_p_e_c_i_a_l_21 := 16;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_277;
    call {:si_unique_call 2248} out_sdv_593 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_277);
    assume {:nonnull} out_sdv_593 != 0;
    assume out_sdv_593 > 0;
    out_s_p_e_c_i_a_l_19 := Argument4_unnamed_tag_40(Others_unnamed_tag_8(Parameters__IO_STACK_LOCATION(out_sdv_593)));
    assume {:nonnull} out_s_p_e_c_i_a_l_19 != 0;
    assume out_s_p_e_c_i_a_l_19 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc out_Tmp_639;
    assume {:nonnull} out_Tmp_639 != 0;
    assume out_Tmp_639 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    call {:si_unique_call 2249} CyyTryToCompleteCurrent#0(in_Extension_17, li2bplFunctionConstant195, out_OldIrql_9, -1073741816, CurrentXoffIrp__CYY_DEVICE_EXTENSION(in_Extension_17), 0, 0, XoffCountTimer__CYY_DEVICE_EXTENSION(in_Extension_17), 0, 0, 16);
    goto L40;

  L40:
    out_UseATimer_1 := 0;
    call {:si_unique_call 2245} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2246} sdv_KeAcquireSpinLock(0, out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    call {:si_unique_call 2247} sdv_KeReleaseSpinLock(0, out_OldIrql_9);
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    goto L51;

  L51:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_279;
    call {:si_unique_call 2253} out_IrpSp_1 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_279);
    out_UseATimer_1 := 1;
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:nonnull} out_IrpSp_1 != 0;
    assume out_IrpSp_1 > 0;
    havoc out_Tmp_640;
    goto L59;

  L59:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    assume {:nonnull} in_TotalTime_1 != 0;
    assume in_TotalTime_1 > 0;
    goto L60;

  L60:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc vslice_dummy_var_276;
    call {:si_unique_call 2241} out_sdv_595 := sdv_IoGetCurrentIrpStackLocation(vslice_dummy_var_276);
    assume {:nonnull} out_sdv_595 != 0;
    assume out_sdv_595 > 0;
    call {:si_unique_call 2242} out_Tmp_634 := __HAVOC_malloc(4);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    call {:si_unique_call 2243} IoAcquireCancelSpinLock(out_Tmp_634);
    assume {:nonnull} out_Tmp_634 != 0;
    assume out_Tmp_634 > 0;
    havoc out_OldIrql_9;
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc out_Tmp_636;
    call {:si_unique_call 2244} SLIC__read_via_variable_1(0, 0);
    assume {:nonnull} out_Tmp_636 != 0;
    assume out_Tmp_636 > 0;
    goto anon33_Else;

  anon33_Else:
    call {:si_unique_call 2240} IoReleaseCancelSpinLock(out_OldIrql_9);
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    havoc out_Tmp_638;
    assume {:nonnull} out_Tmp_638 != 0;
    assume out_Tmp_638 > 0;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} out_SetFirstStatus != 0;
    goto L75;

  L75:
    assume {:nonnull} in_Extension_17 != 0;
    assume in_Extension_17 > 0;
    call {:si_unique_call 2239} CyyGetNextWrite(CurrentWriteIrp__CYY_DEVICE_EXTENSION(in_Extension_17), WriteQueue__CYY_DEVICE_EXTENSION(in_Extension_17), in_NewIrp_3, 1, in_Extension_17);
    assume {:nonnull} in_NewIrp_3 != 0;
    assume in_NewIrp_3 > 0;
    goto anon30_Then;

  anon30_Then:
    goto anon30_Then_dummy;

  anon30_Then_dummy:
    call {:si_unique_call 2254} {:si_old_unique_call 1} out_Tmp_634, out_s_p_e_c_i_a_l_19, out_FirstStatus, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, out_s_p_e_c_i_a_l_21, out_sdv_593, out_sdv_595, out_Tmp_638, out_Tmp_639, out_Tmp_640 := CyyStartWrite#1_loop_L14(out_Tmp_634, out_s_p_e_c_i_a_l_19, out_FirstStatus, in_TotalTime_1, out_SetFirstStatus, out_UseATimer_1, out_IrpSp_1, out_Tmp_636, out_OldIrql_9, out_sdv_591, in_NewIrp_3, out_s_p_e_c_i_a_l_21, out_sdv_593, out_sdv_595, out_Tmp_638, out_Tmp_639, in_Timeouts_1, out_Tmp_640, in_Extension_17);
    return;

  anon35_Then:
    assume {:partition} out_SetFirstStatus == 0;
    out_FirstStatus := -1073741536;
    out_SetFirstStatus := 1;
    goto L75;

  anon34_Then:
    out_Tmp_640 := 1;
    goto L59;

  anon27_Then:
    assume {:nonnull} in_Timeouts_1 != 0;
    assume in_Timeouts_1 > 0;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    goto L60;

  anon28_Then:
    goto L51;

  anon26_Then:
    call {:si_unique_call 2250} IoReleaseCancelSpinLock(out_OldIrql_9);
    goto L40;

  anon25_Then:
    call {:si_unique_call 2251} IoReleaseCancelSpinLock(out_OldIrql_9);
    goto L40;
}



procedure {:LoopProcedure} CyyStartWrite#1_loop_L14(in_Tmp_634: int, in_s_p_e_c_i_a_l_19: int, in_FirstStatus: int, in_TotalTime_1: int, in_SetFirstStatus: int, in_UseATimer_1: int, in_IrpSp_1: int, in_Tmp_636: int, in_OldIrql_9: int, in_sdv_591: int, in_NewIrp_3: int, in_s_p_e_c_i_a_l_21: int, in_sdv_593: int, in_sdv_595: int, in_Tmp_638: int, in_Tmp_639: int, in_Timeouts_1: int, in_Tmp_640: int, in_Extension_17: int) returns (out_Tmp_634: int, out_s_p_e_c_i_a_l_19: int, out_FirstStatus: int, out_SetFirstStatus: int, out_UseATimer_1: int, out_IrpSp_1: int, out_Tmp_636: int, out_OldIrql_9: int, out_sdv_591: int, out_s_p_e_c_i_a_l_21: int, out_sdv_593: int, out_sdv_595: int, out_Tmp_638: int, out_Tmp_639: int, out_Tmp_640: int);
  modifies alloc, IoSetCancelRoutineCalled, IrpCancelChecked, IrpPended;
  free ensures old(IoSetCancelRoutineCalled) == 1 ==> IoSetCancelRoutineCalled != 0;
  free ensures old(IrpCancelChecked) == 1 ==> IrpCancelChecked != 0;
  free ensures old(IrpPended) == 0 ==> IrpPended != 1;
  free ensures old(IrpPended) == 1 ==> IrpPended != 0;
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures old(SLAM_guard_S_0) == old(SLAM_guard_S_0_init) ==> IrpPended == old(IrpPended);
  free ensures old(SLAM_guard_S_1) == old(SLAM_guard_S_1_init) ==> IrpPended == old(IrpPended);
  free ensures IoSetCancelRoutineCalled == 1 || IoSetCancelRoutineCalled == old(IoSetCancelRoutineCalled);
  free ensures IrpPended == 1 || IrpPended == old(IrpPended);
  free ensures IrpCancelChecked == 1 || IrpCancelChecked == old(IrpCancelChecked);
  free ensures out_FirstStatus == -1073741536 || out_FirstStatus == in_FirstStatus;
  free ensures out_SetFirstStatus == 1 || out_SetFirstStatus == in_SetFirstStatus;
  free ensures out_UseATimer_1 == 0 || out_UseATimer_1 == 1 || out_UseATimer_1 == in_UseATimer_1;
  free ensures out_s_p_e_c_i_a_l_21 == 16 || out_s_p_e_c_i_a_l_21 == in_s_p_e_c_i_a_l_21;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



procedure fakeMain() returns (Tmp_777: int, dup_assertVar: bool);
  modifies alloc, SLAM_guard_S_1, SLAM_guard_S_0, IoSetCancelRoutineCalled, IrpPended, IrpCancelChecked, yogi_error;
  free ensures old(yogi_error) == 0;
  free ensures false || old(IoSetCancelRoutineCalled) == 0 || old(IoSetCancelRoutineCalled) == 1;
  free ensures false || old(IrpCancelChecked) == 0 || old(IrpCancelChecked) == 1;
  free ensures false || old(IrpPended) == 0 || old(IrpPended) == 1;
  free ensures alloc >= old(alloc);
  free ensures false || IoSetCancelRoutineCalled == 0 || IoSetCancelRoutineCalled == 1;
  free ensures false || IrpCancelChecked == 0 || IrpCancelChecked == 1;
  free ensures false || IrpPended == 0 || IrpPended == 1;



implementation {:entrypoint} fakeMain() returns (Tmp_777: int, dup_assertVar: bool)
{

  start:
    call Tmp_777, dup_assertVar := main();
    assume {:OldAssert} !dup_assertVar;
    return;
}


